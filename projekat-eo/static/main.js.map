{"version":3,"sources":["./src/app/components/sluzba-profile/sluzba-profile.component.html","./src/app/components/sluzba-profile/sluzba-profile.component.ts","./src/app/services/auth/authentication-service.service.ts","./src/app/components/sluzba-sidebar/sluzba-sidebar-service.service.ts","./src/app/components/sluzba-documents/sluzba-documents-service.service.ts","./src/app/model/course.ts","./src/app/components/sluzba-profile/sluzba-profile-service.service.ts","./src/environments/environment.ts","./src/app/components/sluzba-home/sluzba-home.component.ts","./src/app/components/sluzba-home/sluzba-home.component.html","./src/app/components/sluzba-students/sluzba-students-service.service.ts","./src/app/components/sluzba-enrollments/sluzba-enrollments-service.service.ts","./src/app/services/auth/token-interceptor.service.ts","./src/app/components/sluzba-login/sluzba-login.component.ts","./src/app/components/sluzba-login/sluzba-login.component.html","./src/app/components/sluzba-courses/sluzba-courses-service.service.ts","./src/app/components/sluzba-navbar/sluzba-navbar-service.service.ts","./src/app/components/sluzba-course-details/sluzba-course-details.component.ts","./src/app/components/sluzba-course-details/sluzba-course-details.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/sluzba-teachers/sluzba-teachers-service.service.ts","./src/app/app.module.ts","./src/app/components/sluzba-navbar/sluzba-navbar.component.ts","./src/app/components/sluzba-navbar/sluzba-navbar.component.html","./src/app/components/sluzba-payments/sluzba-payments.component.html","./src/app/components/sluzba-payments/sluzba-payments.component.ts","./src/app/components/sluzba-documents/sluzba-documents.component.html","./src/app/components/sluzba-documents/sluzba-documents.component.ts","./src/app/components/sluzba-payments/sluzba-payments-service.service.ts","./src/app/components/sluzba-enrollments/sluzba-enrollments.component.ts","./src/app/components/sluzba-enrollments/sluzba-enrollments.component.html","./src/app/components/sluzba-students/sluzba-students.component.html","./src/app/components/sluzba-students/sluzba-students.component.ts","./src/app/components/sluzba-not-found-page/sluzba-not-found-page.component.ts","./src/app/components/sluzba-not-found-page/sluzba-not-found-page.component.html","./src/app/services/auth/jwt-utils.service.ts","./src/app/components/sluzba-teachers/sluzba-teachers.component.html","./src/app/components/sluzba-teachers/sluzba-teachers.component.ts","./src/app/app-routing.module.ts","./src/app/components/sluzba-courses/sluzba-courses.component.html","./src/app/components/sluzba-courses/sluzba-courses.component.ts","./src/app/components/sluzba-sidebar/sluzba-sidebar.component.html","./src/app/components/sluzba-sidebar/sluzba-sidebar.component.ts","./src/app/services/auth/can-activate-auth.guard.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAAA,yEAA0K;IACtK,yEAAwD;IACpD,yEAAoB;IAChB,wEAAsF;IAAA,2EAAgB;IAAA,4DAAK;IAC/G,4DAAM;IACV,4DAAM;IACN,yEAAmD;IAC/C,yEAA+E;IAC3E,uEAAqF;IAAA,oEAAS;IAAA,4DAAI;IACtG,4DAAM;IACN,yEAAoF;IAChF,yEAAyG;IAAA,wDAA+B;IAAA,4DAAI;IAChJ,4DAAM;IACV,4DAAM;IACN,0EAAmD;IAC/C,0EAA+E;IAC3E,wEAAqF;IAAA,oEAAQ;IAAA,4DAAI;IACrG,4DAAM;IACN,0EAAoF;IAChF,yEAAyG;IAAA,wDAA8B;IAAA,4DAAI;IAC/I,4DAAM;IACV,4DAAM;IACN,0EAAmD;IAC/C,0EAA+E;IAC3E,wEAAqF;IAAA,oEAAQ;IAAA,4DAAI;IACrG,4DAAM;IACN,0EAAoF;IAChF,yEAAyG;IAAA,wDAA8B;IAAA,4DAAI;IAC/I,4DAAM;IACV,4DAAM;IACV,4DAAM;;;IAnB+G,2DAA+B;IAA/B,yGAA+B;IAQ/B,0DAA8B;IAA9B,wGAA8B;IAQ9B,0DAA8B;IAA9B,wGAA8B;;;IAInJ,0EAAyK;IACrK,yEAAwD;IACpD,yEAAoB;IAChB,wEAAsF;IAAA,8EAAmB;IAAA,4DAAK;IAClH,4DAAM;IACV,4DAAM;IACN,yEAAmD;IAC/C,yEAA+E;IAC3E,uEAAqF;IAAA,mEAAQ;IAAA,4DAAI;IACrG,4DAAM;IACN,yEAAoF;IAChF,yEAAyG;IAAA,wDAAoC;IAAA,4DAAI;IACrJ,4DAAM;IACV,4DAAM;IACN,0EAAmD;IAC/C,0EAA+E;IAC3E,wEAAqF;IAAA,mEAAO;IAAA,4DAAI;IACpG,4DAAM;IACN,0EAAoF;IAChF,yEAAyG;IAAA,wDAA2C;IAAA,4DAAI;IAC5J,4DAAM;IACV,4DAAM;IACV,4DAAM;;;IAX+G,2DAAoC;IAApC,8GAAoC;IAQpC,0DAA2C;IAA3C,qHAA2C;;ACzBzJ,MAAM,sBAAsB;IAOjC,YAAoB,cAA2C,EAAU,MAAc,EAAU,WAAyC;QAAtH,mBAAc,GAAd,cAAc,CAA6B;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,gBAAW,GAAX,WAAW,CAA8B;QACxI,IAAI,CAAC,YAAY,GAAG,cAAc,CAAC,eAAe,CAAC,SAAS,CAAC,GAAG,EAAE,CAChE,IAAI,CAAC,OAAO,EAAE,CACf,CAAC;IACJ,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,OAAO;QACL,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,CAC5C,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC;QACtB,IAAG,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,EAAC;YAC9B,IAAI,CAAC,UAAU,EAAE,CAAC;SACnB;IACL,CAAC;IAED,UAAU;QACR,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE;YACxB,SAAS,CAAC,GAAG,CAAC,EAAE,CAChB,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC;IACnC,CAAC;IAGD,UAAU;QACR,OAAO,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;IACvC,CAAC;IAED,SAAS;QACP,OAAO,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC;IACtC,CAAC;;4FAtCU,sBAAsB;sGAAtB,sBAAsB;QDzBnC,mHA8BM;QACN,mHAsBM;;QArDA,kFAAkB;QA+BlB,0DAAiB;QAAjB,iFAAiB;;;;;;;;;;;;;;AE9BvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqC;AAC0B;;;;AAKxD,MAAM,4BAA4B;IAIvC,YAAoB,IAAgB,EAAU,eAAgC;QAA1D,SAAI,GAAJ,IAAI,CAAY;QAAU,oBAAe,GAAf,eAAe,CAAiB;QAF7D,cAAS,GAAG,aAAa,CAAC;IAEuC,CAAC;IAEnF,KAAK,CAAC,QAAgB,EAAE,QAAgB;QACtC,IAAI,OAAO,GAAgB,IAAI,gEAAW,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC,CAAC;QACnF,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,EAAE,EAAE,OAAO,EAAE,CAAC;aACvF,GAAG,CAAC,CAAC,GAAQ,EAAE,EAAE;YAChB,IAAI,KAAK,GAAG,GAAG,IAAI,GAAG,CAAC,OAAO,CAAC,CAAC;YAChC,IAAI,KAAK,EAAE;gBACT,YAAY,CAAC,OAAO,CAAC,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC;oBACjD,QAAQ,EAAE,QAAQ;oBAClB,KAAK,EAAE,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,KAAK,CAAC;oBAC3C,KAAK,EAAE,KAAK;iBACb,CAAC,CAAC,CAAC;gBACJ,OAAO,IAAI,CAAC;aACb;iBACI;gBACH,OAAO,KAAK,CAAC;aACd;QACH,CAAC,CAAC;aACD,KAAK,CAAC,CAAC,KAAU,EAAE,EAAE;YACpB,IAAI,KAAK,CAAC,MAAM,KAAK,GAAG,EAAE;gBACxB,OAAO,kDAAU,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;aACzC;iBACI;gBACH,OAAO,kDAAU,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,KAAK,IAAI,cAAc,CAAC,CAAC;aAC/D;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,QAAQ;QACN,IAAI,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;QAClE,IAAI,KAAK,GAAG,WAAW,IAAI,WAAW,CAAC,KAAK,CAAC;QAC7C,OAAO,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC;IAC5B,CAAC;IAED,MAAM;QACJ,YAAY,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;IACzC,CAAC;IAED,UAAU;QACR,IAAI,IAAI,CAAC,QAAQ,EAAE,IAAI,EAAE;YAAE,OAAO,IAAI,CAAC;;YAClC,OAAO,KAAK,CAAC;IACpB,CAAC;IAED,cAAc;QACZ,IAAI,YAAY,CAAC,WAAW,EAAE;YAC5B,OAAO,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;SAC7C;aACI;YACH,OAAO,SAAS,CAAC;SAClB;IACH,CAAC;IAED,SAAS;QACP,IAAI,YAAY,CAAC,WAAW,EAAE;YAC5B,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;YAChD,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAE,EAAC,CAAC,SAAS,KAAK,SAAS,CAAC;gBAAE,OAAO,IAAI,CAAC;;gBAC7D,OAAO,KAAK,CAAC;SACnB;IACH,CAAC;IAED,SAAS;QACP,IAAI,YAAY,CAAC,WAAW,EAAE;YAC5B,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;YAChD,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAE,EAAC,CAAC,SAAS,KAAK,SAAS,CAAC;gBAAE,OAAO,IAAI,CAAC;;gBAC7D,OAAO,KAAK,CAAC;SACnB;IACH,CAAC;IAED,OAAO;QACL,IAAI,YAAY,CAAC,WAAW,EAAE;YAC5B,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;YAChD,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAE,EAAC,CAAC,SAAS,KAAK,OAAO,CAAC;gBAAE,OAAO,IAAI,CAAC;;gBAC3D,OAAO,KAAK,CAAC;SACnB;IACH,CAAC;IAED,sBAAsB;QACpB,IAAI,YAAY,CAAC,WAAW,EAAE;YAC5B,OAAO,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;SACtD;aACI;YACH,OAAO,SAAS,CAAC;SAClB;IACH,CAAC;;wGAxFU,4BAA4B;+GAA5B,4BAA4B,WAA5B,4BAA4B;;;;;;;;;;;;;ACLzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;;;;AAQlC,MAAM,2BAA2B;IAItC,YAAoB,IAAgB,EAAU,WAAyC;QAAnE,SAAI,GAAJ,IAAI,CAAY;QAAU,gBAAW,GAAX,WAAW,CAA8B;QAF/E,aAAQ,GAAG,OAAO,CAAC;QAInB,mBAAc,GAAG,IAAI,4CAAO,EAAQ,CAAC;QAE7C,oBAAe,GAAG,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;IAJsC,CAAC;IAM5F,cAAc;QACV,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;IAC/B,CAAC;IAED,OAAO;QACH,IAAI,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC,QAAQ,CAAC;QAC1D,OAAO,CAAC,GAAG,CAAC,YAAY,GAAG,QAAQ,CAAC,CAAC;QACrC,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,QAAQ,sBAAsB,QAAQ,EAAE,CAAC;QAC7D,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAO,GAAG,EAAE,EAAC,OAAO,EAAE,UAAU,EAAC,CAAC,CAAC;IAC3D,CAAC;;sGAnBU,2BAA2B;8GAA3B,2BAA2B,WAA3B,2BAA2B,mBAF1B,MAAM;;;;;;;;;;;;;ACNpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;;;;AASlC,MAAM,6BAA6B;IAIxC,YAAoB,IAAgB,EAAU,WAAyC;QAAnE,SAAI,GAAJ,IAAI,CAAY;QAAU,gBAAW,GAAX,WAAW,CAA8B;QAF/E,iBAAY,GAAG,WAAW,CAAC;QAI3B,mBAAc,GAAG,IAAI,4CAAO,EAAQ,CAAC;QAE7C,oBAAe,GAAG,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;IAJsC,CAAC;IAM5F,cAAc;QACV,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;IAC/B,CAAC;IAED,YAAY;QACR,IAAI,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC,QAAQ,CAAC;QAC1D,OAAO,CAAC,GAAG,CAAC,YAAY,GAAG,QAAQ,CAAC,CAAC;QACrC,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,YAAY,2BAA2B,QAAQ,EAAE,CAAC;QACtE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAa,GAAG,EAAE,EAAC,OAAO,EAAE,UAAU,EAAC,CAAC,CAAC;IACjE,CAAC;;0GAnBU,6BAA6B;gHAA7B,6BAA6B,WAA7B,6BAA6B,mBAF5B,MAAM;;;;;;;;;;;;;ACTpB;AAAA;AAAO,MAAM,MAAM;IAOlB,YAAY,SAA0B;QAErC,IAAI,CAAC,EAAE,GAAG,SAAS,CAAC,EAAE,CAAC;QACvB,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC;QAC3B,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC;QACrB,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC;QACjC,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC,MAAM,CAAC;IAChC,CAAC;CACD;;;;;;;;;;;;;ACbD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;;;;AASlC,MAAM,2BAA2B;IAKtC,YAAoB,IAAgB,EAAU,WAAyC;QAAnE,SAAI,GAAJ,IAAI,CAAY;QAAU,gBAAW,GAAX,WAAW,CAA8B;QAH/E,aAAQ,GAAG,OAAO,CAAC;QACnB,gBAAW,GAAG,UAAU,CAAC;QAIzB,mBAAc,GAAG,IAAI,4CAAO,EAAQ,CAAC;QAE7C,oBAAe,GAAG,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;IAJsC,CAAC;IAM5F,cAAc;QACV,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;IAC/B,CAAC;IAED,OAAO;QACH,IAAI,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC,QAAQ,CAAC;QAC1D,OAAO,CAAC,GAAG,CAAC,YAAY,GAAG,QAAQ,CAAC,CAAC;QACrC,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,QAAQ,sBAAsB,QAAQ,EAAE,CAAC;QAC7D,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAO,GAAG,EAAE,EAAC,OAAO,EAAE,UAAU,EAAC,CAAC,CAAC;IAC3D,CAAC;IAED,UAAU;QACR,IAAI,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC,QAAQ,CAAC;QAC1D,OAAO,CAAC,GAAG,CAAC,YAAY,GAAG,QAAQ,CAAC,CAAC;QACrC,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,WAAW,yBAAyB,QAAQ,EAAE,CAAC;QACnE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,GAAG,EAAE,EAAC,OAAO,EAAE,UAAU,EAAC,CAAC,CAAC;IAC5D,CAAC;;sGA3BU,2BAA2B;8GAA3B,2BAA2B,WAA3B,2BAA2B,mBAF1B,MAAM;;;;;;;;;;;;;ACTpB;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;;;;;ACR5D,MAAM,mBAAmB;IAE9B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;sFALU,mBAAmB;mGAAnB,mBAAmB;QCPhC,oEAAG;QAAA,kEAAO;QAAA,4DAAI;;;;;;;;;;;;;;ACEd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;;;;AAQlC,MAAM,4BAA4B;IAIvC,YAAoB,IAAgB,EAAU,WAAyC;QAAnE,SAAI,GAAJ,IAAI,CAAY;QAAU,gBAAW,GAAX,WAAW,CAA8B;QAF/E,gBAAW,GAAG,UAAU,CAAC;QAIzB,mBAAc,GAAG,IAAI,4CAAO,EAAQ,CAAC;QAE7C,oBAAe,GAAG,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;IAJsC,CAAC;IAM5F,cAAc;QACV,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;IAC/B,CAAC;IAED,WAAW;QACP,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,WAAW,iBAAiB,CAAC;QACjD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAY,GAAG,EAAE,EAAC,OAAO,EAAE,UAAU,EAAC,CAAC,CAAC;IAChE,CAAC;;wGAjBU,4BAA4B;+GAA5B,4BAA4B,WAA5B,4BAA4B,mBAF3B,MAAM;;;;;;;;;;;;;ACNpB;AAAA;AAAA;AAAA;AAAA;AAAyC;;;AAMlC,MAAM,+BAA+B;IAI1C,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF5B,mBAAc,GAAG,aAAa,CAAC;QAI/B,mBAAc,GAAG,IAAI,4CAAO,EAAQ,CAAC;QAE7C,oBAAe,GAAG,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;IAJb,CAAC;IAMzC,cAAc;QACV,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;IAC/B,CAAC;IAED,aAAa,CAAC,UAAsB;QAChC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAa,IAAI,CAAC,cAAc,EAAE,UAAU,EAAE,EAAC,OAAO,EAAE,UAAU,EAAC,CAAC,CAAC;IAC9F,CAAC;IAED,gBAAgB,CAAC,YAAoB;QACjC,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,cAAc,qBAAqB,YAAY,EAAE,CAAC;QACtE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,GAAG,EAAE,EAAC,OAAO,EAAE,UAAU,EAAC,CAAC,CAAC;IAC1D,CAAC;;8GArBU,+BAA+B;kHAA/B,+BAA+B,WAA/B,+BAA+B,mBAF9B,MAAM;;;;;;;;;;;;;ACJpB;AAAA;AAAA;AAAA;AAAgF;;AAUzE,MAAM,uBAAuB;IAElC,YAAoB,GAAa;QAAb,QAAG,GAAH,GAAG,CAAU;IAAI,CAAC;IAEtC,SAAS,CAAC,OAAyB,EAAE,IAAiB;QACpD,IAAI,qBAAqB,GAAgC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,4FAA4B,CAAC,CAAC;QACpG,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC;YACtB,UAAU,EAAE;gBACV,eAAe,EAAE,GAAG,qBAAqB,CAAC,QAAQ,EAAE,EAAE;aACvD;SACF,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IAC9B,CAAC;;8FAbU,uBAAuB;0GAAvB,uBAAuB,WAAvB,uBAAuB,mBAFtB,MAAM;;;;;;;;;;;;;ACRpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkC;;;;;;;IC+BhC,0EAAgF;IAC9E,wFACF;IAAA,4DAAM;;ADtBD,MAAM,oBAAoB;IAM/B,YAAoB,qBAAkD,EAClD,MAAc;QADd,0BAAqB,GAArB,qBAAqB,CAA6B;QAClD,WAAM,GAAN,MAAM,CAAQ;QAChC,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QACf,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;IAClC,CAAC;IAEF,QAAQ;IACR,CAAC;IAED,KAAK;QACH,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAChF,CAAC,QAAgB,EAAE,EAAE;YACnB,IAAG,QAAQ,EAAC;gBACV,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;aACtC;QACH,CAAC,EAEH,CAAC,GAAS,EAAE,EAAE;YACZ,IAAG,GAAG,CAAC,QAAQ,EAAE,KAAG,cAAc,EAAC;gBACjC,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;gBAChC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;aAClB;iBACG;gBACF,+CAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;aACvB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;;wFAhCU,oBAAoB;oGAApB,oBAAoB;QCZjC,yEAA2C;QAC3C,0EAAuE;QAArB,gJAAY,WAAO,IAAC;QAElE,oEAAG;QAAA,gEAAK;QAAA,4DAAI;QAGZ,2EAAuJ;QAAtE,+LAA2B;QAA5G,4DAAuJ;QAGvJ,2EAAsJ;QAA7D,+LAA2B;QAApH,4DAAsJ;QAEtJ,yEAAwD;QACpD,oEAAoE;QACpE,yEAAqD;QACjD,yEAA4B;QAExB,wEAAY;QAAA,6EAAiB;QAAA,4DAAI;QACrC,4DAAM;QACV,4DAAM;QACV,4DAAM;QAEN,0EAAwD;QACpD,0EAA+D;QAE3D,8EAA0E;QAAA,mEAAO;QAAA,4DAAS;QAC9F,4DAAM;QACV,4DAAM;QAKR,4DAAO;QACP,mHAEM;QACR,4DAAM;;QA7B+E,0DAA2B;QAA3B,sFAA2B;QAGnB,0DAA2B;QAA3B,sFAA2B;QAuBhH,2DAAwB;QAAxB,yFAAwB;;;;;;;;;;;;;;AC/BhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;;;;AAOlC,MAAM,2BAA2B;IAKtC,YAAoB,IAAgB,EAAU,WAAyC;QAAnE,SAAI,GAAJ,IAAI,CAAY;QAAU,gBAAW,GAAX,WAAW,CAA8B;QAH/E,eAAU,GAAG,SAAS,CAAC;QACvB,mBAAc,GAAG,aAAa,CAAC;QAI/B,mBAAc,GAAG,IAAI,4CAAO,EAAQ,CAAC;QAE7C,oBAAe,GAAG,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;IAJsC,CAAC;IAM5F,cAAc;QACV,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;IAC/B,CAAC;IAED,UAAU;QACN,IAAI,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC,QAAQ,CAAC;QAC1D,OAAO,CAAC,GAAG,CAAC,YAAY,GAAG,QAAQ,CAAC,CAAC;QACrC,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,UAAU,yBAAyB,QAAQ,EAAE,CAAC;QAClE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAW,GAAG,EAAE,EAAC,OAAO,EAAE,UAAU,EAAC,CAAC,CAAC;IAC/D,CAAC;IAED,SAAS,CAAC,EAAU;QAClB,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,UAAU,kBAAkB,EAAE,EAAE,CAAC;QACrD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,GAAG,EAAE,EAAC,OAAO,EAAE,UAAU,EAAC,CAAC,CAAC;IAC3D,CAAC;IAED,SAAS,CAAC,MAAc;QACtB,MAAM,OAAO,GAAG,GAAG,IAAI,CAAC,UAAU,YAAY,CAAC;QAC/C,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAS,OAAO,EAAE,MAAM,EAAE,EAAC,OAAO,EAAE,UAAU,EAAC,CAAC,CAAC;IACxE,CAAC;IAED,UAAU,CAAC,MAAc;QACvB,MAAM,MAAM,GAAE,GAAG,IAAI,CAAC,UAAU,iBAAiB,MAAM,CAAC,EAAE,EAAE,CAAC;QAC7D,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,MAAM,EAAE,MAAM,EAAE,EAAC,OAAO,EAAE,UAAU,EAAC,CAAC,CAAC;IACtE,CAAC;IAED,YAAY,CAAC,QAAgB;QAC3B,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,UAAU,iBAAiB,QAAQ,EAAE,CAAC;QAC1D,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,GAAG,EAAE,EAAC,OAAO,EAAE,UAAU,EAAC,CAAC,CAAC;IACxD,CAAC;IAED,oBAAoB,CAAC,QAAgB;QACnC,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,cAAc,+BAA+B,QAAQ,EAAE,CAAC;QAC5E,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAe,GAAG,EAAE,EAAC,OAAO,EAAE,UAAU,EAAC,CAAC,CAAC;IACjE,CAAC;;sGA7CU,2BAA2B;8GAA3B,2BAA2B,WAA3B,2BAA2B;;;;;;;;;;;;;ACPxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;;;;AAQlC,MAAM,0BAA0B;IAIrC,YAAoB,IAAgB,EAAU,WAAyC;QAAnE,SAAI,GAAJ,IAAI,CAAY;QAAU,gBAAW,GAAX,WAAW,CAA8B;QAF/E,aAAQ,GAAG,OAAO,CAAC;QAInB,mBAAc,GAAG,IAAI,4CAAO,EAAQ,CAAC;QAE7C,oBAAe,GAAG,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;IAJsC,CAAC;IAM5F,cAAc;QACV,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;IAC/B,CAAC;IAED,OAAO;QACH,IAAI,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC,QAAQ,CAAC;QAC1D,OAAO,CAAC,GAAG,CAAC,YAAY,GAAG,QAAQ,CAAC,CAAC;QACrC,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,QAAQ,sBAAsB,QAAQ,EAAE,CAAC;QAC7D,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAO,GAAG,EAAE,EAAC,OAAO,EAAE,UAAU,EAAC,CAAC,CAAC;IAC3D,CAAC;;oGAnBU,0BAA0B;6GAA1B,0BAA0B,WAA1B,0BAA0B,mBAFzB,MAAM;;;;;;;;;;;;;ACJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AAEK;;;;;;;;;ICN9C,yEAAoE;IAChE,qEAAI;IAAA,iEAAM;IAAA,4DAAK;IACjB,4DAAM;;;;IA2BA,qEAA2C;IACzC,qEAAI;IACF,uDAEF;;;IAAA,4DAAK;IACL,qEAAI;IACF,6EAAiH;IAA1C,yYAAyC;IAC9G,sEAAoD;IACtD,4DAAS;IACX,4DAAK;IACP,4DAAK;;;IARD,0DAEF;IAFE,qaAEF;;;;IAZN,sEAAuB;IACrB,sEAAK;IACH,qEAAI;IAAA,mEAAQ;IAAA,4DAAK;IACjB,6EAA6F;IAA9B,gVAA6B;IAC1F,sEAAmD;IACrD,4DAAS;IACX,4DAAM;IACN,4EAAoC;IAClC,qIAUK;IACP,4DAAQ;IACV,4DAAM;;;IAZyB,0DAAc;IAAd,uFAAc;;;;IAzB/C,yEAAmE;IAEjE,uEAAM;IACA,yEAAwB;IACtB,2EAAgD;IAAA,+DAAI;IAAA,4DAAQ;IAC5D,2EACmD;IADhC,iWAAyB;IAA5C,4DACmD;IACnD,2EAAgD;IAAA,+DAAI;IAAA,4DAAQ;IAC5D,2EACoD;IADjC,iWAAyB;IAA5C,4DACoD;IACpD,2EAAgD;IAAA,gEAAI;IAAA,4DAAQ;IAC5D,4EACoD;IAD/B,kWAAyB;IAA9C,4DACoD;IACpD,4DAAM;IAEb,4DAAO;IAER,gIAoBM;IACR,4DAAM;;;IAjCuB,0DAAyB;IAAzB,uFAAyB;IAGzB,0DAAyB;IAAzB,uFAAyB;IAGvB,0DAAyB;IAAzB,uFAAyB;IAMhD,0DAAe;IAAf,kFAAe;;;;IAsBvB,yEAAoE;IAClE,6EAAiD;IAAjB,8TAAgB;IAAC,6DAAE;IAAA,4DAAS;IAC5D,6EAAkD;IAAnB,gUAAkB;IAAC,iEAAM;IAAA,4DAAS;IACnE,4DAAM;;AD9BD,MAAM,4BAA4B;IAavC,YAAoB,aAA0C,EAAU,iBAAkD,EAChH,KAAqB,EAAU,QAAkB,EAAU,MAAc,EAAU,WAAyC;QADlH,kBAAa,GAAb,aAAa,CAA6B;QAAU,sBAAiB,GAAjB,iBAAiB,CAAiC;QAChH,UAAK,GAAL,KAAK,CAAgB;QAAU,aAAQ,GAAR,QAAQ,CAAU;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,gBAAW,GAAX,WAAW,CAA8B;QAZtI,WAAM,GAAW,IAAI,2DAAM,CAAC;YAC1B,IAAI,EAAE,EAAE;YACR,IAAI,EAAE,EAAE;YACR,IAAI,EAAE,CAAC;YACP,MAAM,EAAE,IAAI;SACb,CAAC,CAAC;QAIH,SAAI,GAAW,KAAK,CAAC;QAInB,iBAAiB,CAAC,eAAe,CAAC,SAAS,CAAC,GAAG,EAAE,CAC/C,IAAI,CAAC,cAAc,EAAE,CACtB,CAAC;IACJ,CAAC;IAED,QAAQ;QACN,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;YACpC,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC;YACnB,8CAA8C;YAC9C,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,gEAAS,CAAC,CAAC,MAAc,EAAE,EAAE,CAChD,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;iBAC9C,SAAS,CAAC,GAAG,CAAC,EAAE;gBACf,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC;gBACvB,IAAI,CAAC,cAAc,EAAE,CAAC;YACxB,CAAC,CAAC,CAAC;SACN;IACH,CAAC;IAEO,cAAc;QACpB,IAAI,CAAC,aAAa,CAAC,oBAAoB,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,CACtE,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC;IACjC,CAAC;IAGD,IAAI;QACF,IAAI,CAAC,IAAI,IAAI,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;IAChD,CAAC;IAEO,GAAG;QACT,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC;aACtC,SAAS,CAAC,GAAG,CAAC,EAAE;YACf,IAAI,CAAC,aAAa,CAAC,cAAc,EAAE,CAAC;YACpC,IAAI,CAAC,MAAM,EAAE,CAAC;QAChB,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,IAAI;QACV,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC;aACvC,SAAS,CAAC,MAAM,CAAC,EAAE;YAClB,IAAI,CAAC,aAAa,CAAC,cAAc,EAAE,CAAC;YACpC,IAAI,CAAC,MAAM,EAAE,CAAC;QAChB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;IAGD,OAAO;QACL,OAAO,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;IACpC,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,gBAAgB,CAAC,EAAE,EAAE,WAAW,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IAC1F,CAAC;IAED,gBAAgB,CAAC,YAAoB;QACnC,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC,SAAS,CAC7D,GAAG,EAAE,CAAC,IAAI,CAAC,cAAc,EAAE,CAC5B,CAAC;IACJ,CAAC;;wGA5EU,4BAA4B;4GAA5B,4BAA4B;QChBzC,wHAEQ;QAEN,yHAsCM;QACN,wHAGM;;QA9CF,+EAAe;QAIb,0DAAe;QAAf,+EAAe;QAuCf,0DAAe;QAAf,+EAAe;;;;;;;;;;;;;;ACxCvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkC;AACuC;AAExB;;;;;;;;ICJ7C,yEAA2E;IACvE,gFAAyC;IACzC,oEAA8F;IAClG,4DAAM;;ADSH,MAAM,YAAY;IAMvB,YAAmB,QAAkB,EAAU,WAAyC,EAC9E,MAAc;QADL,aAAQ,GAAR,QAAQ,CAAU;QAAU,gBAAW,GAAX,WAAW,CAA8B;QAC9E,WAAM,GAAN,MAAM,CAAQ;QANxB,UAAK,GAAG,YAAY,CAAC;QAGb,iBAAY,GAAa,EAAE,CAAC;IAKpC,CAAC;IAED,QAAQ;QACN,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;QACtB,MAAM,SAAS,GAAG,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;QAExE,IAAI,SAAS,EAAE;YACX,oEAAoE;YAEpE,QAAQ,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;SAClF;aAAM;YACH,QAAQ,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,uBAAuB,CAAC,CAAC;SACtF;QACD,MAAM,aAAa,GAAgB,QAAQ,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;QACzE,MAAM,WAAW,GAAgB,QAAQ,CAAC,aAAa,CAAC,2BAA2B,CAAC,CAAC;QAErF,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,EAAgB,EAAE,EAAE;YACzC,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC,GAAG,CAAC;QAChC,CAAC,CAAC,CAAC;QACF,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,KAAS,EAAE,EAAE;YACxC,IAAI,KAAK,YAAY,+DAAe,EAAE;gBACnC,IAAI,KAAK,CAAC,GAAG,IAAI,IAAI,CAAC,aAAa;oBAC/B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;aAC9C;iBAAM,IAAI,KAAK,YAAY,6DAAa,EAAE;gBACvC,IAAI,KAAK,CAAC,GAAG,IAAI,IAAI,CAAC,aAAa,EAAE;oBACjC,IAAI,CAAC,aAAa,GAAG,SAAS,CAAC;oBAC/B,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,CAAC,CAAC;iBAC/C;;oBACG,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;aAC7B;QACJ,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,YAAY,6DAAa,CAAC,CAAC,SAAS,CAAC,CAAC,KAAoB,EAAE,EAAE;YAChH,aAAa,CAAC,SAAS,GAAG,CAAC,CAAC;YAC5B,WAAW,CAAC,SAAS,GAAG,CAAC,CAAC;QAC/B,CAAC,CAAC,CAAC;QACH,IAAI,MAAM,CAAC,UAAU,CAAC,oBAAoB,CAAC,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE;YAClE,IAAI,EAAE,GAAG,IAAI,yDAAgB,CAAC,aAAa,CAAC,CAAC;YAC7C,EAAE,GAAG,IAAI,yDAAgB,CAAC,WAAW,CAAC,CAAC;SAC1C;IACL,CAAC;IACD,eAAe;QACX,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC5B,CAAC;IACD,gBAAgB;QACd,IAAI,MAAM,CAAC,UAAU,CAAC,oBAAoB,CAAC,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE;YACpE,MAAM,aAAa,GAAgB,QAAQ,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;YACzE,MAAM,EAAE,GAAG,IAAI,yDAAgB,CAAC,aAAa,CAAC,CAAC;YAC/C,EAAE,CAAC,MAAM,EAAE,CAAC;SACb;IACH,CAAC;IACD,KAAK;QACD,IAAI,IAAI,GAAG,KAAK,CAAC;QACjB,IAAI,SAAS,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,SAAS,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;YAC/G,IAAI,GAAG,IAAI,CAAC;SACf;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,UAAU;QACV,OAAO,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;IACrC,CAAC;IAED,KAAK;QACL,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;IAChC,CAAC;IAED,MAAM;QACN,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;QAC1B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;IAChC,CAAC;;wEA9EU,YAAY;4FAAZ,YAAY;QCdzB,yEAAuB;QACrB,yEAAqB;QACnB,wGAGM;QAEN,yEAAwB;QACpB,+EAAuC;QACvC,2EAA+B;QACnC,4DAAM;QAER,4DAAM;QACR,4DAAM;;QAXI,0DAAkB;QAAlB,kFAAkB;;;;;;;;;;;;;;ACA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;;;;AAQlC,MAAM,4BAA4B;IAIvC,YAAoB,IAAgB,EAAU,WAAyC;QAAnE,SAAI,GAAJ,IAAI,CAAY;QAAU,gBAAW,GAAX,WAAW,CAA8B;QAF/E,gBAAW,GAAG,UAAU,CAAC;QAIzB,mBAAc,GAAG,IAAI,4CAAO,EAAQ,CAAC;QAE7C,oBAAe,GAAG,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;IAJsC,CAAC;IAM5F,cAAc;QACV,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;IAC/B,CAAC;IAED,WAAW;QACP,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,WAAW,iBAAiB,CAAC;QACjD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAY,GAAG,EAAE,EAAC,OAAO,EAAE,UAAU,EAAC,CAAC,CAAC;IAChE,CAAC;;wGAjBU,4BAA4B;+GAA5B,4BAA4B,WAA5B,4BAA4B,mBAF3B,MAAM;;;;;;;;;;;;;ACPpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACL;AAEG;AACT;AAC+C;AAEvC;AACiC;AACyB;AACnB;AACW;AAC5D;AACW;AACY;AACgB;AAC3B;AACqC;AACA;AACG;AACG;AACH;AACA;AACiB;AACR;AACrB;AACM;AACG;;AAyCvF,MAAM,SAAS;;kEAAT,SAAS;yFAAT,SAAS,cAFR,2DAAY;8FAZb;QACT,qHAA2B;QAC3B,2GAA4B;QAC5B,2GAA2B;QAC3B,iFAAe;QACf;YACE,OAAO,EAAE,uEAAiB;YAC1B,QAAQ,EAAE,iGAAuB;YACjC,KAAK,EAAE,IAAI;SACZ;KACF,YAlBQ;YACP,uEAAa;YACb,oEAAS;YACT,sEAAgB;YAChB,2DAAW;YACX,oEAAgB;YAChB,4DAAY;SACb;oIAeU,SAAS,mBArClB,2DAAY;QACZ,0GAAsB;QACtB,oGAAoB;QACpB,6HAA2B;QAC3B,0GAAsB;QACtB,8GAAuB;QACvB,iHAAwB;QACxB,8GAAuB;QACvB,8GAAuB;QACvB,+HAA4B;QAC5B,uHAA0B;QAC1B,kGAAmB;QACnB,wGAAqB;QACrB,2GAAsB,aAGtB,uEAAa;QACb,oEAAS;QACT,sEAAgB;QAChB,2DAAW;QACX,oEAAgB;QAChB,4DAAY;;;;;;;;;;;;;ACjDhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoE;;;;;;;;;ICJpE,yEAAwD;IACpD,yEAA6B;IACzB,yEAA2B;IACvB,4EAA6F;IAA1B,6TAAyB;IACxF,0EAAsB;IAAA,4EAAiB;IAAA,4DAAO;IAC9C,qEAA8B;IAC9B,qEAA8B;IAC9B,qEAA8B;IAClC,4DAAS;IACT,uEAAkC;IAAA,wDAAc;IAAA,4DAAI;IACxD,4DAAM;IACN,0EAAsC;IAClC,yEAAuC;IACnC,sEAAI;IACA,yEAA2D;IACvD,oEAA+B;IAC/B,yEAA+B;IAAA,wDAAc;IAAA,4DAAI;IACrD,4DAAI;IACR,4DAAK;IACT,4DAAK;IAEL,0EAAwC;IACpC,sEAAI;IACA,yEAAY;IACR,wDACJ;IAAA,4DAAI;IACR,4DAAK;IACL,sEAAI;IACA,yEAAgC;IAA5B,kTAAkB;IAClB,qEACJ;IAAA,4DAAI;IACR,4DAAK;IACL,qEAA+C;IACnD,4DAAK;IACT,4DAAM;IACV,4DAAM;IACV,4DAAM;;;IA3BwC,2DAAc;IAAd,kFAAc;IAOL,0DAAc;IAAd,kFAAc;IAQ7C,0DACJ;IADI,kKACJ;;ADVb,MAAM,qBAAqB;IAS9B,YAAoB,aAAyC,EAAG,QAAkB,EAAW,OAAmB,EAAU,qBAAkD,EAAU,MAAc;QAAhL,kBAAa,GAAb,aAAa,CAA4B;QAAgC,YAAO,GAAP,OAAO,CAAY;QAAU,0BAAqB,GAArB,qBAAqB,CAA6B;QAAU,WAAM,GAAN,MAAM,CAAQ;QAClM,IAAI,CAAC,YAAY,GAAG,aAAa,CAAC,eAAe,CAAC,SAAS,CAAC,GAAG,EAAE,CACjE,IAAI,CAAC,OAAO,EAAE,CACb,CAAC;QACF,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;IAC9B,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,IAAI,CAAC,UAAU,GAAG,+EAAM,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC;QACxD,MAAM,MAAM,GAAgB,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC;QACvD,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,sBAAsB,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC;IACxE,CAAC;IAED,OAAO;QACL,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,CAC3C,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1B,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,qBAAqB,CAAC,MAAM,EAAE,CAAC;QACpC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;IACnC,CAAC;IAED,WAAW;QACP,MAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;QACvC,MAAM,IAAI,GAAG,QAAQ,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;QACtD,UAAU,CAAC;YACP,YAAY,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QAC1C,CAAC,EAAE,GAAG,CAAC,CAAC;QACR,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAE/B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;IAC/B,CAAC;IAAA,CAAC;IACF,YAAY;QACR,MAAM,IAAI,GAAG,QAAQ,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;QACtD,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QAC9C,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC5B,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;IACtC,CAAC;IAAA,CAAC;IACF,aAAa;QACT,0CAA0C;QAC1C,yDAAyD;QACzD,IAAI,IAAI,CAAC,cAAc,KAAK,KAAK,EAAE;YAC/B,IAAI,CAAC,WAAW,EAAE,CAAC;YACnB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;SACzB;aAAM;YACH,IAAI,CAAC,YAAY,EAAE,CAAC;YACpB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;SACzB;IACL,CAAC;IAAA,CAAC;IAEF,QAAQ;QACN,IAAI,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC;QACpE,IAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAC;YACxB,MAAM,GAAG,MAAM,CAAC,KAAK,CAAE,CAAC,CAAE,CAAC;SAC9B;QAED,KAAI,IAAI,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,IAAI,EAAE,EAAC;YACpD,IAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,MAAM,EAAC;gBACrC,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC;aACtC;SACJ;QACD,OAAO,WAAW,CAAC;IACrB,CAAC;IAED,UAAU;QACR,OAAO,IAAI,CAAC,qBAAqB,CAAC,UAAU,EAAE,CAAC;IACjD,CAAC;;0FA9EQ,qBAAqB;qGAArB,qBAAqB;QCflC,kHAoCM;;QApC8B,kFAAkB;;;;;;;;;;;;;;;;;;;;;;;;;;;ICW9C,qEAAqC;IACnC,wEAAgB;IAAA,uDAAgB;IAAA,4DAAK;IACrC,qEAAI;IAAA,uDAA0B;;IAAA,4DAAK;IACnC,qEAAI;IAAA,uDAA6B;;IAAA,4DAAK;IACtC,qEAAI;IAAA,wDAAqB;IAAA,4DAAK;IAChC,4DAAK;;;IAJa,0DAAgB;IAAhB,8EAAgB;IAC5B,0DAA0B;IAA1B,iJAA0B;IAC1B,0DAA6B;IAA7B,mJAA6B;IAC7B,0DAAqB;IAArB,mFAAqB;;;IAfnC,yEAAsE;IAClE,2EAAqB;IACjB,wEAAO;IACP,qEAAI;IACF,wEAAgB;IAAA,4DAAC;IAAA,4DAAK;IACtB,wEAAgB;IAAA,+DAAI;IAAA,4DAAK;IACzB,wEAAgB;IAAA,iEAAM;IAAA,4DAAK;IAC3B,yEAAgB;IAAA,mEAAO;IAAA,4DAAK;IAC9B,4DAAK;IACL,4DAAQ;IACR,yEAAO;IACP,0HAKK;IACL,4DAAQ;IACV,4DAAQ;IACd,4DAAM;;;IAR0B,2DAAW;IAAX,oFAAW;;ACQpC,MAAM,uBAAuB;IAMlC,YAAoB,cAA4C,EAAU,MAAc,EAAU,WAAyC;QAAvH,mBAAc,GAAd,cAAc,CAA8B;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,gBAAW,GAAX,WAAW,CAA8B;QACzI,IAAI,CAAC,YAAY,GAAG,cAAc,CAAC,eAAe,CAAC,SAAS,CAAC,GAAG,EAAE,CAChE,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;IACJ,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED,WAAW;QACT,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,CAChD,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC;IAC9B,CAAC;IAED,UAAU;QACR,OAAO,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;IACvC,CAAC;;8FAvBU,uBAAuB;uGAAvB,uBAAuB;QDnBpC,oHAmBM;;QAnBA,kFAAkB;;;;;;;;;;;;;;;;;;;;;;;;;;;IEWhB,qEAAuC;IACrC,wEAAgB;IAAA,uDAAiB;IAAA,4DAAK;IACtC,qEAAI;IAAA,uDAAqB;IAAA,4DAAK;IAC9B,qEAAI;IAAA,uDAAyB;IAAA,4DAAK;IAClC,qEAAI;IAAA,uEAAY;IAAA,mEAAQ;IAAA,4DAAI;IAAA,4DAAK;IACnC,4DAAK;;;IAJa,0DAAiB;IAAjB,+EAAiB;IAC7B,0DAAqB;IAArB,kFAAqB;IACrB,0DAAyB;IAAzB,sFAAyB;;;IAdvC,yEAAsE;IAClE,2EAAqB;IACjB,wEAAO;IACP,qEAAI;IACF,wEAAgB;IAAA,4DAAC;IAAA,4DAAK;IACtB,wEAAgB;IAAA,gEAAK;IAAA,4DAAK;IAC1B,wEAAgB;IAAA,+DAAI;IAAA,4DAAK;IACzB,yEAAgB;IAAA,oEAAQ;IAAA,4DAAK;IAC/B,4DAAK;IACL,4DAAQ;IACR,yEAAO;IACP,2HAKK;IACL,4DAAQ;IACV,4DAAQ;IACd,4DAAM;;;IAR2B,2DAAY;IAAZ,qFAAY;;ACOtC,MAAM,wBAAwB;IAMnC,YAAoB,eAA8C,EAAU,MAAc,EAAU,WAAyC;QAAzH,oBAAe,GAAf,eAAe,CAA+B;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,gBAAW,GAAX,WAAW,CAA8B;QAC3I,IAAI,CAAC,YAAY,GAAG,eAAe,CAAC,eAAe,CAAC,SAAS,CAAC,GAAG,EAAE,CACjE,IAAI,CAAC,YAAY,EAAE,CACpB,CAAC;IACJ,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAED,YAAY;QACV,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,CAClD,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC;IAC/B,CAAC;IAED,UAAU;QACR,OAAO,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;IACvC,CAAC;;gGAvBU,wBAAwB;wGAAxB,wBAAwB;QDlBrC,qHAmBM;;QAnBA,kFAAkB;;;;;;;;;;;;;;AEExB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;;;;AAQlC,MAAM,4BAA4B;IAIvC,YAAoB,IAAgB,EAAU,WAAyC;QAAnE,SAAI,GAAJ,IAAI,CAAY;QAAU,gBAAW,GAAX,WAAW,CAA8B;QAF/E,gBAAW,GAAG,UAAU,CAAC;QAIzB,mBAAc,GAAG,IAAI,4CAAO,EAAQ,CAAC;QAE7C,oBAAe,GAAG,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;IAJsC,CAAC;IAM5F,cAAc;QACV,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;IAC/B,CAAC;IAED,WAAW;QACP,IAAI,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC,QAAQ,CAAC;QAC1D,OAAO,CAAC,GAAG,CAAC,YAAY,GAAG,QAAQ,CAAC,CAAC;QACrC,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,WAAW,0BAA0B,QAAQ,EAAE,CAAC;QACpE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAY,GAAG,EAAE,EAAC,OAAO,EAAE,UAAU,EAAC,CAAC,CAAC;IAChE,CAAC;;wGAnBU,4BAA4B;+GAA5B,4BAA4B,WAA5B,4BAA4B,mBAF3B,MAAM;;;;;;;;;;;;;;;;;ACDb,MAAM,0BAA0B;IAErC,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;oGALU,0BAA0B;0GAA1B,0BAA0B;QCPvC,oEAAG;QAAA,oFAAyB;QAAA,4DAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;ICaxB,qEAAqC;IACnC,wEAAgB;IAAA,uDAAgB;IAAA,4DAAK;IACrC,qEAAI;IAAA,uDAA4B;IAAA,4DAAK;IACrC,qEAAI;IAAA,uDAA2B;IAAA,4DAAK;IACpC,qEAAI;IAAA,uDAA2B;IAAA,4DAAK;IACpC,qEAAI;IAAA,wDAAsB;IAAA,4DAAK;IACjC,4DAAK;;;IALa,0DAAgB;IAAhB,8EAAgB;IAC5B,0DAA4B;IAA5B,0FAA4B;IAC5B,0DAA2B;IAA3B,yFAA2B;IAC3B,0DAA2B;IAA3B,yFAA2B;IAC3B,0DAAsB;IAAtB,oFAAsB;;;IAlBpC,yEAAmF;IAC/E,2EAAqB;IACjB,wEAAO;IACP,qEAAI;IACF,wEAAgB;IAAA,4DAAC;IAAA,4DAAK;IACtB,wEAAgB;IAAA,oEAAS;IAAA,4DAAK;IAC9B,wEAAgB;IAAA,mEAAQ;IAAA,4DAAK;IAC7B,yEAAgB;IAAA,oEAAQ;IAAA,4DAAK;IAC7B,yEAAgB;IAAA,oEAAQ;IAAA,4DAAK;IAE/B,4DAAK;IACL,4DAAQ;IACR,yEAAO;IACP,0HAMK;IACL,4DAAQ;IACV,4DAAQ;IACd,4DAAM;;;IAT0B,2DAAW;IAAX,oFAAW;;ACMpC,MAAM,uBAAuB;IAMlC,YAAoB,cAA4C,EAAU,MAAc,EAAU,WAAyC;QAAvH,mBAAc,GAAd,cAAc,CAA8B;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,gBAAW,GAAX,WAAW,CAA8B;QACzI,IAAI,CAAC,YAAY,GAAG,cAAc,CAAC,eAAe,CAAC,SAAS,CAAC,GAAG,EAAE,CAChE,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;IACJ,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED,WAAW;QACT,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,CAChD,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC;IAC9B,CAAC;IAED,UAAU;QACR,OAAO,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;IACvC,CAAC;IAED,OAAO;QACL,OAAO,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;IACpC,CAAC;;8FA3BU,uBAAuB;uGAAvB,uBAAuB;QDnBpC,oHAsBM;;QAtBA,mGAA+B;;;;;;;;;;;;;;;;;;AEO9B,MAAM,2BAA2B;IAEtC,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;sGALU,2BAA2B;2GAA3B,2BAA2B;QCPxC,qEAAI;QACA,4EACF;QAAA,4DAAK;;;;;;;;;;;;;;;;;;ACGA,MAAM,eAAe;IAE1B,gBAAgB,CAAC;IAEjB,QAAQ,CAAC,KAAa;QACpB,IAAI,OAAO,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QAClC,IAAI,kBAAkB,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC9C,IAAI,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC;QACpD,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QAE5B,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;IAC/B,CAAC;;8EAXU,eAAe;kGAAf,eAAe,WAAf,eAAe,mBAFd,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;ICSZ,qEAAqC;IACnC,wEAAgB;IAAA,uDAAgB;IAAA,4DAAK;IACrC,qEAAI;IAAA,uDAA4B;IAAA,4DAAK;IACrC,qEAAI;IAAA,uDAA2B;IAAA,4DAAK;IACpC,qEAAI;IAAA,uDAA2B;IAAA,4DAAK;IACtC,4DAAK;;;IAJa,0DAAgB;IAAhB,8EAAgB;IAC5B,0DAA4B;IAA5B,0FAA4B;IAC5B,0DAA2B;IAA3B,yFAA2B;IAC3B,0DAA2B;IAA3B,yFAA2B;;;IAhBzC,yEAAmF;IAC/E,2EAAqB;IACjB,wEAAO;IACP,qEAAI;IACF,wEAAgB;IAAA,4DAAC;IAAA,4DAAK;IACtB,wEAAgB;IAAA,oEAAS;IAAA,4DAAK;IAC9B,wEAAgB;IAAA,mEAAQ;IAAA,4DAAK;IAC7B,yEAAgB;IAAA,oEAAQ;IAAA,4DAAK;IAE/B,4DAAK;IACL,4DAAQ;IACR,yEAAO;IACP,yHAKK;IACL,4DAAQ;IACV,4DAAQ;IACd,4DAAM;;;IAR0B,2DAAW;IAAX,oFAAW;;ACMpC,MAAM,uBAAuB;IAMlC,YAAoB,cAA4C,EAAU,MAAc,EAAU,WAAyC;QAAvH,mBAAc,GAAd,cAAc,CAA8B;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,gBAAW,GAAX,WAAW,CAA8B;QACzI,IAAI,CAAC,YAAY,GAAG,cAAc,CAAC,eAAe,CAAC,SAAS,CAAC,GAAG,EAAE,CAChE,IAAI,CAAC,WAAW,EAAE,CACnB,CAAC;IACJ,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED,WAAW;QACT,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,CAChD,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC;IAC9B,CAAC;IAED,UAAU;QACR,OAAO,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;IACvC,CAAC;IAED,OAAO;QACL,OAAO,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;IACpC,CAAC;;8FA3BU,uBAAuB;uGAAvB,uBAAuB;QDlBpC,oHAoBM;;QApBA,mGAA+B;;;;;;;;;;;;;;AECrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AAE0C;AACG;AACZ;AACM;AACA;AACG;AACH;AACmB;AAChB;AACiB;AAC7B;;;AAErF,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,kGAAmB,EAAE;IACrD,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,oGAAoB,EAAE;IAClD,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,0GAAsB,EAAE,WAAW,EAAE,CAAC,0GAA2B,CAAC,EAAC;IACjG,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,0GAAsB,EAAE,WAAW,EAAE,CAAC,0GAA2B,CAAC,EAAC;IACjG,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,6GAAuB,EAAE,WAAW,EAAE,CAAC,0GAA2B,CAAC,EAAC;IACnG,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,gHAAwB,EAAE,WAAW,EAAE,CAAC,0GAA2B,CAAC,EAAC;IACrG,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,6GAAuB,EAAE,WAAW,EAAE,CAAC,0GAA2B,CAAC,EAAC;IACnG,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,6GAAuB,EAAE,WAAW,EAAE,CAAC,0GAA2B,CAAC,EAAC;IACnG,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,+HAA4B,EAAE;IAC9D,EAAE,IAAI,EAAE,gBAAgB,EAAE,SAAS,EAAE,+HAA4B,EAAE;IACnE,EAAE,IAAI,EAAE,EAAE;QACR,UAAU,EAAE,QAAQ;QACpB,SAAS,EAAE,MAAM;KAClB;IACD,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,6HAA2B,EAAE;CACvD,CAAC;AAQK,MAAM,gBAAgB;;gFAAhB,gBAAgB;gGAAhB,gBAAgB;oGALlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,EAAC,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC;SACrD,EACS,4DAAY;oIAGX,gBAAgB,uFAHjB,4DAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;ICrBd,qEAAsB;IACpB,4EAA2F;IAA3B,yaAA0B;IACxF,qEAAmD;IACrD,4DAAS;IAET,6EAAgH;IAA/C,gcAA8C;IAC7G,sEAAoD;IACtD,4DAAS;IACX,4DAAK;;;IAZP,qEAAmC;IACjC,wEAAgB;IAAA,uDAAe;IAAA,4DAAK;IACpC,qEAAI;IAAA,uDAAiB;IAAA,4DAAK;IAC1B,qEAAI;IAAA,uDAA0B;;IAAA,4DAAK;IACnC,4HAQK;IACP,4DAAK;;;;IAZa,0DAAe;IAAf,6EAAe;IAC3B,0DAAiB;IAAjB,+EAAiB;IACjB,0DAA0B;IAA1B,gJAA0B;IACzB,0DAAe;IAAf,kFAAe;;;;IAYxB,0EAAqC;IACnC,6EAAmF;IAApB,mUAAmB;IAChF,sEAAmD;IACrD,4DAAS;IACX,4DAAM;;;IA/BZ,yEAAsE;IAClE,2EAAqB;IACjB,wEAAO;IACP,qEAAI;IACF,wEAAgB;IAAA,4DAAC;IAAA,4DAAK;IACtB,wEAAgB;IAAA,sEAAW;IAAA,4DAAK;IAChC,wEAAgB;IAAA,+DAAI;IAAA,4DAAK;IACzB,iEAAS;IACX,4DAAK;IACL,4DAAQ;IACR,yEAAO;IACP,wHAaK;IACL,4DAAQ;IACV,4DAAQ;IACR,0HAIM;IACZ,4DAAM;;;IArByB,2DAAU;IAAV,mFAAU;IAgB7B,0DAAe;IAAf,kFAAe;;ACRpB,MAAM,sBAAsB;IAMjC,YAAoB,aAA0C,EAAU,MAAc,EAAU,WAAyC;QAArH,kBAAa,GAAb,aAAa,CAA6B;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,gBAAW,GAAX,WAAW,CAA8B;QACvI,IAAI,CAAC,YAAY,GAAG,aAAa,CAAC,eAAe,CAAC,SAAS,CAAC,GAAG,EAAE,CAC/D,IAAI,CAAC,UAAU,EAAE,CAClB,CAAC;IACJ,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,UAAU;QACR,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,CAC9C,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;IAED,UAAU;QACR,OAAO,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;IACvC,CAAC;IAED,OAAO;QACL,OAAO,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;IACpC,CAAC;IAED,OAAO;QACL,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;IACvC,CAAC;IAED,QAAQ,CAAC,MAAc;QACrB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC;IAED,YAAY,CAAC,QAAgB,EAAE,UAAkB;QAC/C,IAAG,OAAO,CAAC,gCAAgC,GAAG,UAAU,GAAG,GAAG,CAAC,EAAC;YAChE,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,SAAS,CACjD,GAAG,EAAE,CAAC,IAAI,CAAC,UAAU,EAAE,CACxB,CAAC;SACD;IACH,CAAC;;4FA3CU,sBAAsB;sGAAtB,sBAAsB;QDnBnC,mHAgCM;;QAhCA,kFAAkB;;;;;;;;;;;;;;;;;;;;;;;;;;;;IEUhB,qEAA2B;IACvB,uEAAkD;IAC9C,mEAA+B;IAC3C,wEAA+B;IAAA,uDAAgE;IAAA,4DAAI;IAC3F,4DAAI;IACR,4DAAK;;;IAFsB,0DAAgE;IAAhE,gKAAgE;;;;IAG3F,qEAA2B;IACvB,wEAAqD;IAA5B,iTAAkB;IAAU,kEAAO;IAAA,4DAAI;IACpE,4DAAK;;;IACL,oEAAsE;;;;IAG9D,wEAAwD;IACpD,+DAAiC;IACjC,oEAAG;IAAA,uDAAkB;IAAA,4DAAI;IAC7B,4DAAI;;;IAHqB,+JAA8B;IAChD,0DAAyB;IAAzB,0EAAyB;IACzB,0DAAkB;IAAlB,kFAAkB;;;IAH7B,qEAA0B;IACtB,oIAGI;IACR,4DAAK;;;IAJG,0DAAmB;IAAnB,uJAAmB;;;IAF/B,4EAAwG;IACpG,gIAKK;IACR,qEAAe;;;IAP2D,iGAA4B;IAC9F,0DAAmB;IAAnB,uJAAmB;;ACL7B,MAAM,MAAM,GAAgB;IAC/B,EAAE,IAAI,EAAE,YAAY,EAAE,KAAK,EAAE,WAAW,EAAG,IAAI,EAAE,aAAa,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,EAAC,EAAE,EAAE;IAClF,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,cAAc,EAAG,IAAI,EAAC,YAAY,EAAE,KAAK,EAAE,EAAE,EAAG,EAAE,EAAE,EAAE,EAAE;IACnF,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,cAAc,EAAG,IAAI,EAAC,gBAAgB,EAAE,KAAK,EAAE,EAAE,EAAG,EAAE,EAAE,EAAE,EAAE;IACvF,EAAE,IAAI,EAAE,WAAW,EAAE,KAAK,EAAE,UAAU,EAAG,IAAI,EAAC,qBAAqB,EAAE,KAAK,EAAE,EAAE,EAAG,EAAE,EAAE,aAAa,EAAE;IACpG,EAAE,IAAI,EAAE,YAAY,EAAE,KAAK,EAAE,WAAW,EAAG,IAAI,EAAC,aAAa,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,aAAa,EAAE;IAC7F,EAAE,IAAI,EAAE,WAAW,EAAE,KAAK,EAAE,UAAU,EAAG,IAAI,EAAC,aAAa,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,WAAW,EAAE;IACzF,EAAE,IAAI,EAAE,WAAW,EAAE,KAAK,EAAE,UAAU,EAAG,IAAI,EAAC,aAAa,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,WAAW,EAAE;CAC5F,CAAC;AAOK,MAAM,sBAAsB;IAQjC,YAAoB,cAA2C,EAAU,qBAAkD,EAAS,MAAc;QAA9H,mBAAc,GAAd,cAAc,CAA6B;QAAU,0BAAqB,GAArB,qBAAqB,CAA6B;QAAS,WAAM,GAAN,MAAM,CAAQ;QAEhJ,IAAI,CAAC,YAAY,GAAG,cAAc,CAAC,eAAe,CAAC,SAAS,CAAC,GAAG,EAAE,CAChE,IAAI,CAAC,OAAO,EAAE,CACf,CAAC;IACJ,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC;IACvD,CAAC;IAED,YAAY;QACR,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,GAAG,GAAG,EAAE;YACzB,OAAO,KAAK,CAAC;SAChB;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAAA,CAAC;IAEF,OAAO;QACL,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,CAC5C,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1B,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,qBAAqB,CAAC,MAAM,EAAE,CAAC;QACpC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;IACnC,CAAC;IAED,UAAU;QACR,OAAO,IAAI,CAAC,qBAAqB,CAAC,UAAU,EAAE,CAAC;IACjD,CAAC;IAED,SAAS;QACP,OAAO,IAAI,CAAC,qBAAqB,CAAC,SAAS,EAAE,CAAC;IAChD,CAAC;IAED,OAAO;QACL,OAAO,IAAI,CAAC,qBAAqB,CAAC,OAAO,EAAE,CAAC;IAC9C,CAAC;;4FA/CU,sBAAsB;sGAAtB,sBAAsB;QD/BnC,yEAA6B;QACzB,yEAAkB;QACd,uEAAwD;QACpD,yEAAsB;QAClB,oEAAqE;QACzE,4DAAM;QACN,4EACJ;QAAA,4DAAI;QACR,4DAAM;QACN,wEAA+B;QAC3B,gHAKK;QACL,gHAEK;QACL,gHAAsE;QACtE,sIAOgB;QACpB,4DAAK;QACT,4DAAM;;QAnBO,0DAAoB;QAApB,oFAAoB;QAMpB,0DAAoB;QAApB,oFAAoB;QAGkB,0DAAoB;QAApB,oFAAoB;QACF,0DAAY;QAAZ,kFAAY;;;;;;;;;;;;;;;;;;;;;;AEV1E,MAAM,2BAA2B;IAEtC,YAAoB,qBAAmD,EAAU,MAAc;QAA3E,0BAAqB,GAArB,qBAAqB,CAA8B;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAEpG,WAAW,CACT,IAA4B,EAC5B,KAA0B;QAC1B,IAAI,IAAI,CAAC,qBAAqB,CAAC,UAAU,EAAE,EAAE;YAC3C,OAAO,IAAI,CAAC;SACb;aACI;YACH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YAChC,OAAO,KAAK,CAAC;SACd;IACH,CAAC;;sGAdU,2BAA2B;8GAA3B,2BAA2B,WAA3B,2BAA2B,mBAF1B,MAAM;;;;;;;;;;;;;;;;;;;ACR2B;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["<div *ngIf=\"isLoggedIn()\" class= \"col-md-8\" style=\"margin-top: 2%; margin: auto; border-radius: 20px; border: 3px double #CED4DA; width: 70%; background-color: #FAFAFA;\">\r\n    <div class=\"row\" style=\"margin: auto; max-width: 100%;\">\r\n        <div class=\"col-12\">\r\n            <h3 style=\"text-align: center; font-size: 1.5vw; font-weight: bold; padding-top: 1%;\">User information</h3>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\" style=\"margin: auto; width: 90%;\">\r\n        <div class=\"col-6\" style=\"margin: auto; text-align: left; padding-left: 15%; \">\r\n            <p style=\"text-align: left; font-size: 1.5vw; padding-top: 3%;  padding-bottom: 3%;\">Firstname</p>\r\n        </div>\r\n        <div class=\"col-6\"  style=\"margin: auto; text-align: center; padding-right: 15%; \" >\r\n            <p style=\"text-align: center; font-size: 1.5vw; font-weight: bold; padding-top: 1%; padding-bottom: 3%;\">{{ user? user.firstName : \"\" }}</p>\r\n        </div> \r\n    </div>\r\n    <div class=\"row\" style=\"margin: auto; width: 90%;\">\r\n        <div class=\"col-6\" style=\"margin: auto; text-align: left; padding-left: 15%; \">\r\n            <p style=\"text-align: left; font-size: 1.5vw; padding-top: 3%;  padding-bottom: 3%;\">Lastname</p>\r\n        </div>\r\n        <div class=\"col-6\"  style=\"margin: auto; text-align: center; padding-right: 15%; \" >\r\n            <p style=\"text-align: center; font-size: 1.5vw; font-weight: bold; padding-top: 1%; padding-bottom: 3%;\">{{ user? user.lastName : \"\" }}</p>\r\n        </div> \r\n    </div>\r\n    <div class=\"row\" style=\"margin: auto; width: 90%;\">\r\n        <div class=\"col-6\" style=\"margin: auto; text-align: left; padding-left: 15%; \">\r\n            <p style=\"text-align: left; font-size: 1.5vw; padding-top: 3%;  padding-bottom: 3%;\">Username</p>\r\n        </div>\r\n        <div class=\"col-6\"  style=\"margin: auto; text-align: center; padding-right: 15%; \" >\r\n            <p style=\"text-align: center; font-size: 1.5vw; font-weight: bold; padding-top: 1%; padding-bottom: 3%;\">{{ user? user.username : \"\" }}</p>\r\n        </div> \r\n    </div>\r\n</div>\r\n<div *ngIf=\"isStudent()\" class= \"col-md-8\" style=\"margin-top: 2%; margin: auto; border-radius: 20px; border: 3px double #fafafa; width: 70%; background-color: #FAFAFA;\">\r\n    <div class=\"row\" style=\"margin: auto; max-width: 100%;\">\r\n        <div class=\"col-12\">\r\n            <h3 style=\"text-align: center; font-size: 1.5vw; font-weight: bold; padding-top: 1%;\">Student information</h3>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\" style=\"margin: auto; width: 90%;\">\r\n        <div class=\"col-6\" style=\"margin: auto; text-align: left; padding-left: 15%; \">\r\n            <p style=\"text-align: left; font-size: 1.5vw; padding-top: 3%;  padding-bottom: 3%;\">Cardname</p>\r\n        </div>\r\n        <div class=\"col-6\"  style=\"margin: auto; text-align: center; padding-right: 15%; \" >\r\n            <p style=\"text-align: center; font-size: 1.5vw; font-weight: bold; padding-top: 1%; padding-bottom: 3%;\">{{ student? student.cardName : \"\" }}</p>\r\n        </div> \r\n    </div>\r\n    <div class=\"row\" style=\"margin: auto; width: 90%;\">\r\n        <div class=\"col-6\" style=\"margin: auto; text-align: left; padding-left: 15%; \">\r\n            <p style=\"text-align: left; font-size: 1.5vw; padding-top: 3%;  padding-bottom: 3%;\">Balance</p>\r\n        </div>\r\n        <div class=\"col-6\"  style=\"margin: auto; text-align: center; padding-right: 15%; \" >\r\n            <p style=\"text-align: center; font-size: 1.5vw; font-weight: bold; padding-top: 1%; padding-bottom: 3%;\">{{ student? student.account.balance : \"\" }}</p>\r\n        </div> \r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { SluzbaProfileServiceService } from './sluzba-profile-service.service';\r\nimport { AuthenticationServiceService } from 'src/app/services/auth/authentication-service.service';\r\n\r\ninterface User {\r\n  id?: number;\r\n  username: string;\r\n  firstName: string;\r\n  lastName: string;\r\n}\r\n\r\ninterface Student {\r\n  id?: number;\r\n  cardName: String;\r\n  account: Account;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-sluzba-profile',\r\n  templateUrl: './sluzba-profile.component.html',\r\n  styleUrls: ['./sluzba-profile.component.css']\r\n})\r\nexport class SluzbaProfileComponent implements OnInit {\r\n\r\n  user: User;\r\n  student: Student;\r\n\r\n  subscription: Subscription;\r\n\r\n  constructor(private profileService: SluzbaProfileServiceService, private router: Router, private authService: AuthenticationServiceService) {\r\n    this.subscription = profileService.RegenerateData$.subscribe(() =>\r\n      this.getUser()\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getUser();\r\n  }\r\n\r\n  getUser() {\r\n    this.profileService.getUser().subscribe(res =>\r\n      this.user = res.body);\r\n      if(this.authService.isStudent()){\r\n        this.getStudent();\r\n      }\r\n  }\r\n\r\n  getStudent(){\r\n    this.profileService.getStudent().\r\n            subscribe(res =>\r\n            this.student = res.body);\r\n  }\r\n\r\n\r\n  isLoggedIn():boolean{\r\n    return this.authService.isLoggedIn();\r\n  }\r\n\r\n  isStudent():boolean{\r\n    return this.authService.isStudent();\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { JwtUtilsService } from './jwt-utils.service';\r\n\r\n\r\n@Injectable()\r\nexport class AuthenticationServiceService {\r\n\r\n  private readonly loginPath = '/auth/login';\r\n\r\n  constructor(private http: HttpClient, private jwtUtilsService: JwtUtilsService) { }\r\n\r\n  login(username: string, password: string): Observable<boolean> {\r\n    var headers: HttpHeaders = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n    return this.http.post(this.loginPath, JSON.stringify({ username, password }), { headers })\r\n      .map((res: any) => {\r\n        let token = res && res['token'];\r\n        if (token) {\r\n          localStorage.setItem('currentUser', JSON.stringify({\r\n            username: username,\r\n            roles: this.jwtUtilsService.getRoles(token),\r\n            token: token\r\n          }));\r\n          return true;\r\n        }\r\n        else {\r\n          return false;\r\n        }\r\n      })\r\n      .catch((error: any) => {\r\n        if (error.status === 400) {\r\n          return Observable.throw('Ilegal login');\r\n        }\r\n        else {\r\n          return Observable.throw(error.json().error || 'Server error');\r\n        }\r\n      });\r\n  }\r\n\r\n  getToken(): String {\r\n    var currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n    var token = currentUser && currentUser.token;\r\n    return token ? token : \"\";\r\n  }\r\n\r\n  logout(): void {\r\n    localStorage.removeItem('currentUser');\r\n  }\r\n\r\n  isLoggedIn(): boolean {\r\n    if (this.getToken() != '') return true;\r\n    else return false;\r\n  }\r\n\r\n  getCurrentUser() {\r\n    if (localStorage.currentUser) {\r\n      return JSON.parse(localStorage.currentUser);\r\n    }\r\n    else {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  isStudent(): boolean {\r\n    if (localStorage.currentUser) {\r\n      var user = JSON.parse(localStorage.currentUser);\r\n      if (user.roles[0].some(t=>t.authority === \"STUDENT\")) return true;\r\n      else return false;\r\n    }\r\n  }\r\n\r\n  isTeacher(): boolean {\r\n    if (localStorage.currentUser) {\r\n      var user = JSON.parse(localStorage.currentUser);\r\n      if (user.roles[0].some(t=>t.authority === \"TEACHER\")) return true;\r\n      else return false;\r\n    }\r\n  }\r\n\r\n  isAdmin(): boolean {\r\n    if (localStorage.currentUser) {\r\n      var user = JSON.parse(localStorage.currentUser);\r\n      if (user.roles[0].some(t=>t.authority === \"ADMIN\")) return true;\r\n      else return false;\r\n    }\r\n  }\r\n\r\n  getCurrentUserUsername() {\r\n    if (localStorage.currentUser) {\r\n      return JSON.parse(localStorage.currentUser.username);\r\n    }\r\n    else {\r\n      return undefined;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpResponse, HttpClient } from '@angular/common/http';\nimport {Observable, Subject} from 'rxjs';\n\nimport { AuthenticationServiceService } from '../../services/auth/authentication-service.service';\nimport { User } from '../../model/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SluzbaSidebarServiceService {\n\n  private usersUrl = 'users';\n\n  constructor(private http: HttpClient, private authService: AuthenticationServiceService) { }\n\n  private RegenerateData = new Subject<void>();\n\n  RegenerateData$ = this.RegenerateData.asObservable();\n\n  announceChange() {\n      this.RegenerateData.next();\n  }\n  \n  getUser(): Observable<HttpResponse<User>> {\n      let username = this.authService.getCurrentUser().username;\n      console.log(\"username: \" + username);\n      const url = `${this.usersUrl}/getUserByUsername/${username}`;\n      return this.http.get<User>(url, {observe: 'response'});\n  }\n  \n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpResponse, HttpClient } from '@angular/common/http';\r\nimport {Observable, Subject} from 'rxjs';\r\n\r\nimport { AuthenticationServiceService } from '../../services/auth/authentication-service.service';\r\nimport { Document } from '../../model/document';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SluzbaDocumentsServiceService {\r\n\r\n  private documentsUrl = 'documents';\r\n\r\n  constructor(private http: HttpClient, private authService: AuthenticationServiceService) { }\r\n\r\n  private RegenerateData = new Subject<void>();\r\n\r\n  RegenerateData$ = this.RegenerateData.asObservable();\r\n\r\n  announceChange() {\r\n      this.RegenerateData.next();\r\n  }\r\n  \r\n  getDocuments(): Observable<HttpResponse<Document[]>> {\r\n      let username = this.authService.getCurrentUser().username;\r\n      console.log(\"username: \" + username);\r\n      const url = `${this.documentsUrl}/getAllDocumentsForUser/${username}`;\r\n      return this.http.get<Document[]>(url, {observe: 'response'});\r\n  }\r\n\r\n}\r\n","export class Course implements CourseInterface{\r\n\tpublic id: number;\r\n\tpublic name: string;\r\n\tpublic code: string;\r\n    public espb: number;\r\n\tpublic active: boolean;\r\n\t\t\r\n\tconstructor(courseCfg: CourseInterface)\r\n\t{\t\r\n\t\tthis.id = courseCfg.id;\r\n\t\tthis.name = courseCfg.name;\r\n\t\tthis.code = courseCfg.code;\r\n        this.espb = courseCfg.espb;\r\n\t\tthis.active = courseCfg.active;\r\n\t}\r\n}\r\n\r\ninterface CourseInterface {\r\n\tid?: number;\r\n\tname: string;\r\n\tcode: string;\r\n    espb: number;\r\n\tactive: boolean;\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpResponse, HttpClient } from '@angular/common/http';\r\nimport {Observable, Subject} from 'rxjs';\r\n\r\nimport { AuthenticationServiceService } from '../../services/auth/authentication-service.service';\r\nimport { User } from '../../model/user';\r\nimport { Student } from '../../model/student';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SluzbaProfileServiceService {\r\n\r\n  private usersUrl = 'users';\r\n  private studentsUrl = 'students';\r\n\r\n  constructor(private http: HttpClient, private authService: AuthenticationServiceService) { }\r\n\r\n  private RegenerateData = new Subject<void>();\r\n\r\n  RegenerateData$ = this.RegenerateData.asObservable();\r\n\r\n  announceChange() {\r\n      this.RegenerateData.next();\r\n  }\r\n  \r\n  getUser(): Observable<HttpResponse<User>> {\r\n      let username = this.authService.getCurrentUser().username;\r\n      console.log(\"username: \" + username);\r\n      const url = `${this.usersUrl}/getUserByUsername/${username}`;\r\n      return this.http.get<User>(url, {observe: 'response'});\r\n  }\r\n\r\n  getStudent(): Observable<HttpResponse<Student>> {\r\n    let username = this.authService.getCurrentUser().username;\r\n    console.log(\"username: \" + username);\r\n    const url = `${this.studentsUrl}/getStudentByUsername/${username}`;\r\n    return this.http.get<Student>(url, {observe: 'response'});\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sluzba-home',\n  templateUrl: './sluzba-home.component.html',\n  styleUrls: ['./sluzba-home.component.css']\n})\nexport class SluzbaHomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>Welcome</p>","import { Injectable } from '@angular/core';\r\nimport { HttpResponse, HttpClient } from '@angular/common/http';\r\nimport {Observable, Subject} from 'rxjs';\r\n\r\nimport { AuthenticationServiceService } from '../../services/auth/authentication-service.service';\r\nimport { Student } from '../../model/student';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SluzbaStudentsServiceService {\r\n\r\n  private studentsUrl = 'students';\r\n\r\n  constructor(private http: HttpClient, private authService: AuthenticationServiceService) { }\r\n\r\n  private RegenerateData = new Subject<void>();\r\n\r\n  RegenerateData$ = this.RegenerateData.asObservable();\r\n\r\n  announceChange() {\r\n      this.RegenerateData.next();\r\n  }\r\n  \r\n  getStudents(): Observable<HttpResponse<Student[]>> {\r\n      const url = `${this.studentsUrl}/getAllStudents`;\r\n      return this.http.get<Student[]>(url, {observe: 'response'});\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpResponse, HttpClient } from '@angular/common/http';\r\nimport {Observable, Subject} from 'rxjs';\r\nimport { Enrollment } from 'src/app/model/enrollment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SluzbaEnrollmentsServiceService {\r\n\r\n  private enrollmentsUrl = 'enrollments';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  private RegenerateData = new Subject<void>();\r\n\r\n  RegenerateData$ = this.RegenerateData.asObservable();\r\n\r\n  announceChange() {\r\n      this.RegenerateData.next();\r\n  }\r\n  \r\n  addEnrollment(enrollment: Enrollment): Observable<HttpResponse<Enrollment>> {\r\n      return this.http.post<Enrollment>(this.enrollmentsUrl, enrollment, {observe: 'response'});\r\n  }\r\n  \r\n  deleteEnrollment(enrollmentId: number): Observable<HttpResponse<any>> {\r\n      const url = `${this.enrollmentsUrl}/deleteEnrollment/${enrollmentId}`;\r\n      return this.http.put<any>(url, {observe: 'response'});\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor } from '@angular/common/http';\r\nimport { AuthenticationServiceService } from './authentication-service.service';\r\nimport { HttpRequest } from '@angular/common/http';\r\nimport { HttpHandler } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpEvent } from '@angular/common/http';\r\nimport { Injector } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TokenInterceptorService implements HttpInterceptor {\r\n\r\n  constructor(private inj: Injector) { }\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    let authenticationService:AuthenticationServiceService = this.inj.get(AuthenticationServiceService);\r\n    request = request.clone({\r\n      setHeaders: {\r\n        'Authorization': `${authenticationService.getToken()}`\r\n      }\r\n    });\r\n\r\n    return next.handle(request);\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { Router } from '@angular/router';\r\nimport { AuthenticationServiceService } from '../../services/auth/authentication-service.service';\r\n\r\n@Component({\r\n  selector: 'app-sluzba-login',\r\n  templateUrl: './sluzba-login.component.html',\r\n  styleUrls: ['./sluzba-login.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class SluzbaLoginComponent implements OnInit {\r\n\r\n  public user;\r\n\r\n  public wrongUsernameOrPass:boolean;\r\n\r\n  constructor(private authenticationService:AuthenticationServiceService,\r\n              private router: Router) {\r\n    this.user = {};\r\n    this.wrongUsernameOrPass = false;\r\n   }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  login():void{\r\n    this.authenticationService.login(this.user.username, this.user.password).subscribe(\r\n      (loggedIn:boolean) => {\r\n        if(loggedIn){\r\n          this.router.navigate(['/dashboard']);\r\n        }\r\n      }\r\n    ,\r\n    (err:Error) => {\r\n      if(err.toString()==='Ilegal login'){\r\n        this.wrongUsernameOrPass = true;\r\n        console.log(err);\r\n      }\r\n      else{\r\n        Observable.throw(err);\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<!-- Default form login -->\r\n<div id=\"loginContainer\" class=\"container\">\r\n<form class=\"text-center border border-light p-5\" (ngSubmit)=\"login()\">\r\n\r\n    <p>Login</p>\r\n  \r\n    <!-- Username -->\r\n    <input type=\"text\" id=\"username\" class=\"form-control mb-4 cs-12\" name=\"username\" [(ngModel)]=\"user.username\" placeholder=\"Username\" required autofocus>\r\n  \r\n    <!-- Password -->\r\n    <input type=\"password\" id=\"inputPassword\" class=\"form-control mb-4 s-12\" name=\"password\" [(ngModel)]=\"user.password\" placeholder=\"Password\"  required>\r\n  \r\n    <div class=\"row\" style=\"margin: auto; max-width: 100%;\">\r\n        <div class=\"col-7\" style=\"margin: auto; height: max-content;\"></div>\r\n        <div id=\"forgot\" class=\"col-5\" style=\"margin: auto;\">\r\n            <div  style=\"margin: auto;\">\r\n                <!-- Forgot password -->\r\n                <a href=\"\" >Forgot password ?</a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    \r\n    <div class=\"row\" style=\"margin: auto; max-width: 100%;\">\r\n        <div class=\"col-12\" style=\"margin: auto; height: max-content;\">\r\n            <!-- Sign in button -->\r\n            <button class=\"waves-light btn-default btn\" type=\"submit\" color=\"default\">Sign in</button>\r\n        </div>\r\n    </div>\r\n  \r\n  \r\n\r\n  \r\n  </form>\r\n  <div *ngIf=wrongUsernameOrPass class=\"alert alert-warning box-msg\" role=\"alert\">\r\n    Wrong username or password.\r\n  </div>\r\n</div>\r\n  <!-- Default form login -->","import { Injectable } from '@angular/core';\r\nimport { HttpResponse, HttpClient } from '@angular/common/http';\r\nimport {Observable, Subject} from 'rxjs';\r\n\r\nimport { AuthenticationServiceService } from '../../services/auth/authentication-service.service';\r\nimport { Course } from '../../model/course';\r\nimport { Enrollment } from 'src/app/model/enrollment';\r\n\r\n@Injectable()\r\nexport class SluzbaCoursesServiceService {\r\n\r\n  private coursesUrl = 'courses';\r\n  private enrollmentsUrl = 'enrollments';\r\n\r\n  constructor(private http: HttpClient, private authService: AuthenticationServiceService) { }\r\n\r\n  private RegenerateData = new Subject<void>();\r\n\r\n  RegenerateData$ = this.RegenerateData.asObservable();\r\n\r\n  announceChange() {\r\n      this.RegenerateData.next();\r\n  }\r\n  \r\n  getCourses(): Observable<HttpResponse<Course[]>> {\r\n      let username = this.authService.getCurrentUser().username;\r\n      console.log(\"username: \" + username);\r\n      const url = `${this.coursesUrl}/getAllCoursesForUser/${username}`;\r\n      return this.http.get<Course[]>(url, {observe: 'response'});\r\n  }\r\n\r\n  getCourse(id: number): Observable<HttpResponse<Course>> {\r\n    const url = `${this.coursesUrl}/getCourseById/${id}`;\r\n    return this.http.get<Course>(url, {observe: 'response'});\r\n  }\r\n\r\n  addCourse(course: Course): Observable<HttpResponse<Course>> {\r\n    const urlPost = `${this.coursesUrl}/addCourse`;\r\n    return this.http.post<Course>(urlPost, course, {observe: 'response'});\r\n  } \r\n\r\n  editCourse(course: Course): Observable<HttpResponse<Course>> {\r\n    const urlPut =`${this.coursesUrl}/updateCourse/${course.id}`;\r\n    return this.http.put<Course>(urlPut, course, {observe: 'response'});\r\n  }\r\n\r\n  deleteCourse(courseId: number): Observable<HttpResponse<any>> {\r\n    const url = `${this.coursesUrl}/deleteCourse/${courseId}`;\r\n    return this.http.put<any>(url, {observe: 'response'});\r\n  }\r\n\r\n  getCourseEnrollments(courseId: number): Observable<HttpResponse<Enrollment[]>> {\r\n    const url = `${this.enrollmentsUrl}/getAllEnrollmentsForCourse/${courseId}`;\r\n    return this.http.get<Enrollment[]>(url, {observe: 'response'});\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpResponse, HttpClient } from '@angular/common/http';\nimport {Observable, Subject} from 'rxjs';\n\nimport { AuthenticationServiceService } from '../../services/auth/authentication-service.service';\nimport { User } from '../../model/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SluzbaNavbarServiceService {\n\n  private usersUrl = 'users';\n\n  constructor(private http: HttpClient, private authService: AuthenticationServiceService) { }\n\n  private RegenerateData = new Subject<void>();\n\n  RegenerateData$ = this.RegenerateData.asObservable();\n\n  announceChange() {\n      this.RegenerateData.next();\n  }\n  \n  getUser(): Observable<HttpResponse<User>> {\n      let username = this.authService.getCurrentUser().username;\n      console.log(\"username: \" + username);\n      const url = `${this.usersUrl}/getUserByUsername/${username}`;\n      return this.http.get<User>(url, {observe: 'response'});\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\n\r\nimport {switchMap} from 'rxjs/operators';\r\nimport { SluzbaCoursesServiceService } from '../sluzba-courses/sluzba-courses-service.service';\r\nimport { Course } from 'src/app/model/course';\r\nimport { Enrollment } from 'src/app/model/enrollment';\r\nimport { SluzbaEnrollmentsServiceService } from '../sluzba-enrollments/sluzba-enrollments-service.service';\r\nimport { AuthenticationServiceService } from 'src/app/services/auth/authentication-service.service';\r\n\r\n@Component({\r\n  selector: 'app-sluzba-course-details',\r\n  templateUrl: './sluzba-course-details.component.html',\r\n  styleUrls: ['./sluzba-course-details.component.css']\r\n})\r\nexport class SluzbaCourseDetailsComponent implements OnInit {\r\n\r\n  course: Course = new Course({ // if we add a new course, create an empty course\r\n    name: '',\r\n    code: '',\r\n    espb: 0,\r\n    active: true\r\n  });\r\n\r\n  enrollments: Enrollment[];\r\n\r\n  mode: string = 'ADD';\r\n\r\n  constructor(private courseService: SluzbaCoursesServiceService, private enrollmentService: SluzbaEnrollmentsServiceService,\r\n    private route: ActivatedRoute, private location: Location, private router: Router, private authService: AuthenticationServiceService) {\r\n    enrollmentService.RegenerateData$.subscribe(() =>\r\n      this.getEnrollments()\r\n    );\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.route.snapshot.params['id']) {\r\n      this.mode = 'EDIT';\r\n      // fetch course if we edit the existing course\r\n      this.route.params.pipe(switchMap((params: Params) =>\r\n          this.courseService.getCourse(+params['id'])))\r\n        .subscribe(res => {\r\n          this.course = res.body;\r\n          this.getEnrollments();\r\n        });\r\n    }\r\n  }\r\n\r\n  private getEnrollments(): void {\r\n    this.courseService.getCourseEnrollments(this.course.id).subscribe(res =>\r\n      this.enrollments = res.body);\r\n  }\r\n\r\n\r\n  save(): void {\r\n    this.mode == 'ADD' ? this.add() : this.edit();\r\n  }\r\n\r\n  private add(): void {\r\n    this.courseService.addCourse(this.course)\r\n      .subscribe(res => {\r\n        this.courseService.announceChange();\r\n        this.goBack();\r\n      });\r\n  }\r\n\r\n  private edit(): void {\r\n    this.courseService.editCourse(this.course)\r\n      .subscribe(course => {\r\n        this.courseService.announceChange();\r\n        this.goBack();\r\n      });\r\n  }\r\n\r\n  goBack(): void {\r\n    this.location.back();\r\n  }\r\n\r\n  \r\n  isAdmin():boolean{\r\n    return this.authService.isAdmin();\r\n  }\r\n\r\n  gotoAddEnrollment(): void {\r\n    this.router.navigate(['/addEnrollment'], { queryParams: { courseId: this.course.id } });\r\n  }\r\n\r\n  deleteEnrollment(enrollmentId: number): void {\r\n    this.enrollmentService.deleteEnrollment(enrollmentId).subscribe(\r\n      () => this.getEnrollments()\r\n    );\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"isAdmin()\"  class= \"col-md-12\" style=\"padding-top: 2%;\">\r\n    <h3>Course</h3>\r\n  </div>\r\n  \r\n  <div *ngIf=\"isAdmin()\" class= \"col-md-12\" style=\"padding-top: 2%;\"> \r\n  \r\n    <form>\r\n          <div class=\"form-group\">\r\n            <label for=\"field1c\" class=\"form-control-label\">Name</label>\r\n            <input type=\"text\" [(ngModel)]=\"course.name\" placeholder=\"Name\" \r\n               class=\"form-control\" id=\"field1c\" name=\"field1\">\r\n            <label for=\"field3c\" class=\"form-control-label\">Code</label>\r\n            <input type=\"text\" [(ngModel)]=\"course.code\" placeholder=\"Code\" \r\n                class=\"form-control\" id=\"field3c\" name=\"field3\">\r\n            <label for=\"field2c\" class=\"form-control-label\">ESPB</label>\r\n            <input type=\"number\" [(ngModel)]=\"course.espb\" placeholder=\"ESPB\" \r\n                class=\"form-control\" id=\"field2c\" name=\"field2\">\r\n            </div>\r\n  \r\n     </form>\r\n  \r\n    <div *ngIf=\"course.id\">\r\n      <div>\r\n        <h3>Students</h3>\r\n        <button type=\"button\" class=\"btn btn-primary\" aria-label=\"Add\" (click)=\"gotoAddEnrollment()\">\r\n          <span class=\"fa fa-plus\" aria-hidden=\"true\"></span>\r\n        </button>\r\n      </div>\r\n      <table class=\"table table-bordered\">\r\n        <tr *ngFor=\"let enrollment of enrollments\">\r\n          <td>\r\n            {{enrollment.student.user.firstName}} {{enrollment.student.user.lastName}} {{enrollment.student.cardName}}\r\n             [Since {{enrollment.startDate | date: 'dd.MM.yyyy'}} until {{enrollment.endDate | date: 'dd.MM.yyyy'}}]\r\n          </td>\r\n          <td>\r\n            <button type=\"button\" class=\"btn btn-danger right\" aria-label=\"Delete\" (click)=\"deleteEnrollment(enrollment.id)\">\r\n              <span class=\"fa fa-trash\" aria-hidden=\"true\"></span>\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      </table>   \r\n    </div>\r\n  </div>\r\n  <div *ngIf=\"isAdmin()\"  class= \"col-md-12\" style=\"padding-top: 2%;\">\r\n    <button class=\"btn btn-success\" (click)=\"save()\">OK</button>\r\n    <button class=\"btn btn-danger\" (click)=\"goBack()\">Cancel</button>\r\n  </div>","import { AuthenticationServiceService } from './services/auth/authentication-service.service';\r\nimport { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { Location, LocationStrategy, PathLocationStrategy, PopStateEvent } from '@angular/common';\r\nimport 'rxjs/add/operator/filter';\r\nimport { Router, NavigationEnd, NavigationStart } from '@angular/router';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport PerfectScrollbar from 'perfect-scrollbar';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit{\r\n  title = 'angularApp';\r\n  private _router: Subscription;\r\n  private lastPoppedUrl: string;\r\n  private yScrollStack: number[] = [];\r\n\r\n  constructor(public location: Location, private authService: AuthenticationServiceService,\r\n    private router: Router){\r\n\r\n  }\r\n  \r\n  ngOnInit() {\r\n    console.log(this.router)\r\n      const isWindows = navigator.platform.indexOf('Win') > -1 ? true : false;\r\n\r\n      if (isWindows) {\r\n          // if we are on windows OS we activate the perfectScrollbar function\r\n\r\n          document.getElementsByTagName('body')[0].classList.add('perfect-scrollbar-on');\r\n      } else {\r\n          document.getElementsByTagName('body')[0].classList.remove('perfect-scrollbar-off');\r\n      }\r\n      const elemMainPanel = <HTMLElement>document.querySelector('.main-panel');\r\n      const elemSidebar = <HTMLElement>document.querySelector('.sidebar .sidebar-wrapper');\r\n\r\n      this.location.subscribe((ev:PopStateEvent) => {\r\n          this.lastPoppedUrl = ev.url;\r\n      });\r\n       this.router.events.subscribe((event:any) => {\r\n          if (event instanceof NavigationStart) {\r\n             if (event.url != this.lastPoppedUrl)\r\n                 this.yScrollStack.push(window.scrollY);\r\n         } else if (event instanceof NavigationEnd) {\r\n             if (event.url == this.lastPoppedUrl) {\r\n                 this.lastPoppedUrl = undefined;\r\n                 window.scrollTo(0, this.yScrollStack.pop());\r\n             } else\r\n                 window.scrollTo(0, 0);\r\n         }\r\n      });\r\n      this._router = this.router.events.filter(event => event instanceof NavigationEnd).subscribe((event: NavigationEnd) => {\r\n           elemMainPanel.scrollTop = 0;\r\n           elemSidebar.scrollTop = 0;\r\n      });\r\n      if (window.matchMedia(`(min-width: 960px)`).matches && !this.isMac()) {\r\n          let ps = new PerfectScrollbar(elemMainPanel);\r\n          ps = new PerfectScrollbar(elemSidebar);\r\n      }\r\n  }\r\n  ngAfterViewInit() {\r\n      this.runOnRouteChange();\r\n  }\r\n  runOnRouteChange(): void {\r\n    if (window.matchMedia(`(min-width: 960px)`).matches && !this.isMac()) {\r\n      const elemMainPanel = <HTMLElement>document.querySelector('.main-panel');\r\n      const ps = new PerfectScrollbar(elemMainPanel);\r\n      ps.update();\r\n    }\r\n  }\r\n  isMac(): boolean {\r\n      let bool = false;\r\n      if (navigator.platform.toUpperCase().indexOf('MAC') >= 0 || navigator.platform.toUpperCase().indexOf('IPAD') >= 0) {\r\n          bool = true;\r\n      }\r\n      return bool;\r\n  }\r\n  \r\n  isLoggedIn():boolean{\r\n  return this.authService.isLoggedIn();\r\n  }\r\n  \r\n  login():void{\r\n  this.router.navigate(['login']);\r\n  }\r\n  \r\n  logout():void{\r\n  this.authService.logout();\r\n  this.router.navigate(['login']);\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"wrapper\">\r\n    <div *ngIf=\"isLoggedIn()\" class=\"sidebar\" data-color=\"azure\" data-image=\"\">\r\n        <app-sluzba-sidebar></app-sluzba-sidebar>\r\n        <div class=\"sidebar-background\" style=\"background-image: url(assets/img/sidebar-4.jpg)\"></div>\r\n    </div>\r\n  \r\n    <div class=\"main-panel\">\r\n        <app-sluzba-navbar></app-sluzba-navbar>\r\n        <router-outlet></router-outlet>\r\n    </div>\r\n  \r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpResponse, HttpClient } from '@angular/common/http';\r\nimport {Observable, Subject} from 'rxjs';\r\n\r\nimport { AuthenticationServiceService } from '../../services/auth/authentication-service.service';\r\nimport { Teacher } from '../../model/teacher';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SluzbaTeachersServiceService {\r\n\r\n  private teachersUrl = 'teachers';\r\n\r\n  constructor(private http: HttpClient, private authService: AuthenticationServiceService) { }\r\n\r\n  private RegenerateData = new Subject<void>();\r\n\r\n  RegenerateData$ = this.RegenerateData.asObservable();\r\n\r\n  announceChange() {\r\n      this.RegenerateData.next();\r\n  }\r\n  \r\n  getTeachers(): Observable<HttpResponse<Teacher[]>> {\r\n      const url = `${this.teachersUrl}/getAllTeachers`;\r\n      return this.http.get<Teacher[]>(url, {observe: 'response'});\r\n  }\r\n}\r\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { SluzbaProfileComponent } from './components/sluzba-profile/sluzba-profile.component';\r\n\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { SluzbaLoginComponent } from './components/sluzba-login/sluzba-login.component';\r\nimport { SluzbaNotFoundPageComponent } from './components/sluzba-not-found-page/sluzba-not-found-page.component';\r\nimport { SluzbaCoursesComponent } from './components/sluzba-courses/sluzba-courses.component';\r\nimport { SluzbaCoursesServiceService } from './components/sluzba-courses/sluzba-courses-service.service';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { JwtUtilsService } from './services/auth/jwt-utils.service';\r\nimport { TokenInterceptorService } from './services/auth/token-interceptor.service';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { AuthenticationServiceService } from './services/auth/authentication-service.service';\r\nimport { CanActivateAuthGuardService } from './services/auth/can-activate-auth.guard.service';\r\nimport { SluzbaPaymentsComponent } from './components/sluzba-payments/sluzba-payments.component';\r\nimport { SluzbaDocumentsComponent } from './components/sluzba-documents/sluzba-documents.component';\r\nimport { SluzbaStudentsComponent } from './components/sluzba-students/sluzba-students.component';\r\nimport { SluzbaTeachersComponent } from './components/sluzba-teachers/sluzba-teachers.component';\r\nimport { SluzbaCourseDetailsComponent } from './components/sluzba-course-details/sluzba-course-details.component';\r\nimport { SluzbaEnrollmentsComponent } from './components/sluzba-enrollments/sluzba-enrollments.component';\r\nimport { SluzbaHomeComponent } from './components/sluzba-home/sluzba-home.component';\r\nimport { SluzbaNavbarComponent } from './components/sluzba-navbar/sluzba-navbar.component';\r\nimport { SluzbaSidebarComponent } from './components/sluzba-sidebar/sluzba-sidebar.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    SluzbaProfileComponent,\r\n    SluzbaLoginComponent,\r\n    SluzbaNotFoundPageComponent,\r\n    SluzbaCoursesComponent,\r\n    SluzbaPaymentsComponent,\r\n    SluzbaDocumentsComponent,\r\n    SluzbaStudentsComponent,\r\n    SluzbaTeachersComponent,\r\n    SluzbaCourseDetailsComponent,\r\n    SluzbaEnrollmentsComponent,\r\n    SluzbaHomeComponent,\r\n    SluzbaNavbarComponent,\r\n    SluzbaSidebarComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    NgbModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    AppRoutingModule,\r\n    RouterModule\r\n  ],\r\n  providers: [\r\n    SluzbaCoursesServiceService,\r\n    AuthenticationServiceService,\r\n    CanActivateAuthGuardService,\r\n    JwtUtilsService,\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: TokenInterceptorService,\r\n      multi: true\r\n    },\r\n  ],\r\n  schemas: [ CUSTOM_ELEMENTS_SCHEMA],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit, ElementRef } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\nimport { ROUTES } from '../sluzba-sidebar/sluzba-sidebar.component';\nimport {Location, LocationStrategy, PathLocationStrategy} from '@angular/common';\nimport { AuthenticationServiceService } from 'src/app/services/auth/authentication-service.service';\nimport { User } from 'src/app/model/user';\nimport { SluzbaNavbarServiceService } from './sluzba-navbar-service.service';\n\n@Component({\n  selector: 'app-sluzba-navbar',\n  templateUrl: './sluzba-navbar.component.html',\n  styleUrls: ['./sluzba-navbar.component.css']\n})\nexport class SluzbaNavbarComponent implements OnInit {\n\n    private listTitles: any[];\n    location: Location;\n    private toggleButton: any;\n    private sidebarVisible: boolean;\n    user: User;\n    subscription: Subscription;\n\n    constructor(private navbarService: SluzbaNavbarServiceService,  location: Location,  private element: ElementRef, private authenticationService:AuthenticationServiceService, private router: Router) {\n      this.subscription = navbarService.RegenerateData$.subscribe(() =>\n      this.getUser()\n      );\n      this.location = location;\n      this.sidebarVisible = false;\n    }\n\n    ngOnInit(){\n      this.getUser();\n      this.listTitles = ROUTES.filter(listTitle => listTitle);\n      const navbar: HTMLElement = this.element.nativeElement;\n      this.toggleButton = navbar.getElementsByClassName('navbar-toggle')[0];\n    }\n\n    getUser() {\n      this.navbarService.getUser().subscribe(res =>\n        this.user = res.body);\n    }\n\n    logout():void{\n      this.authenticationService.logout();\n      this.router.navigate(['/login']);\n    }\n\n    sidebarOpen() {\n        const toggleButton = this.toggleButton;\n        const body = document.getElementsByTagName('body')[0];\n        setTimeout(function(){\n            toggleButton.classList.add('toggled');\n        }, 500);\n        body.classList.add('nav-open');\n\n        this.sidebarVisible = true;\n    };\n    sidebarClose() {\n        const body = document.getElementsByTagName('body')[0];\n        this.toggleButton.classList.remove('toggled');\n        this.sidebarVisible = false;\n        body.classList.remove('nav-open');\n    };\n    sidebarToggle() {\n        // const toggleButton = this.toggleButton;\n        // const body = document.getElementsByTagName('body')[0];\n        if (this.sidebarVisible === false) {\n            this.sidebarOpen();\n            console.log('opened');\n        } else {\n            this.sidebarClose();\n            console.log('closed');\n        }\n    };\n\n    getTitle(){\n      var titlee = this.location.prepareExternalUrl(this.location.path());\n      if(titlee.charAt(0) === '#'){\n          titlee = titlee.slice( 1 );\n      }\n\n      for(var item = 0; item < this.listTitles.length; item++){\n          if(this.listTitles[item].path === titlee){\n              return this.listTitles[item].title;\n          }\n      }\n      return 'Dashboard';\n    }\n\n    isLoggedIn():boolean{\n      return this.authenticationService.isLoggedIn();\n    }\n\n}\n","<nav class=\"navbar navbar-default\" *ngIf=\"isLoggedIn()\">\n    <div class=\"container-fluid\">\n        <div class=\"navbar-header\">\n            <button type=\"button\" class=\"navbar-toggle\" data-toggle=\"collapse\" (click)=\"sidebarToggle()\">\n                <span class=\"sr-only\">Toggle navigation</span>\n                <span class=\"icon-bar\"></span>\n                <span class=\"icon-bar\"></span>\n                <span class=\"icon-bar\"></span>\n            </button>\n            <a class=\"navbar-brand\" href=\"#\" >{{getTitle()}}</a>\n        </div>\n        <div class=\"collapse navbar-collapse\">\n            <ul class=\"nav navbar-nav navbar-left\">\n                <li>\n                    <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\">\n                        <i class=\"fa fa-dashboard\"></i>\n                        <p class=\"hidden-lg hidden-md\">{{getTitle()}}</p>\n                    </a>\n                </li>\n            </ul>\n\n            <ul class=\"nav navbar-nav navbar-right\">\n                <li>\n                    <a href=\"#\">\n                        {{ user? user.firstName : \"\"  }} {{ user? user.lastName : \"\"  }}\n                    </a>\n                </li>\n                <li>\n                    <a  (click)=\"logout()\" href=\"#\">\n                        Log out\n                    </a>\n                </li>\n                <li class=\"separator hidden-lg hidden-md\"></li>\n            </ul>\n        </div>\n    </div>\n</nav>\n","<div *ngIf=\"isLoggedIn()\" class= \"col-md-12\" style=\"padding-top: 2%;\">\r\n    <table class=\"table\">\r\n        <thead>\r\n        <tr>\r\n          <th scope=\"col\">#</th>\r\n          <th scope=\"col\">Date</th>\r\n          <th scope=\"col\">Amount</th>\r\n          <th scope=\"col\">Purpose</th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        <tr *ngFor=\"let payment of payments\">\r\n          <th scope=\"row\">{{ payment.id }}</th>\r\n          <td>{{ payment.date | date  }}</td>\r\n          <td>{{ payment.amount | number }}</td>\r\n          <td>{{ payment.purpose }}</td>\r\n        </tr>\r\n        </tbody>\r\n      </table>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { SluzbaPaymentsServiceService } from './sluzba-payments-service.service';\r\nimport { AuthenticationServiceService } from 'src/app/services/auth/authentication-service.service';\r\n\r\ninterface Payment {\r\n  id?: number;\r\n  date: Date;\r\n  amount: number;\r\n  purpose: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-sluzba-payments',\r\n  templateUrl: './sluzba-payments.component.html',\r\n  styleUrls: ['./sluzba-payments.component.css']\r\n})\r\nexport class SluzbaPaymentsComponent implements OnInit {\r\n\r\n  payments: Payment[];\r\n\r\n  subscription: Subscription;\r\n\r\n  constructor(private paymentService: SluzbaPaymentsServiceService, private router: Router, private authService: AuthenticationServiceService) {\r\n    this.subscription = paymentService.RegenerateData$.subscribe(() =>\r\n      this.getPayments()\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getPayments();\r\n  }\r\n\r\n  getPayments() {\r\n    this.paymentService.getPayments().subscribe(res =>\r\n      this.payments = res.body);\r\n  }\r\n\r\n  isLoggedIn():boolean{\r\n    return this.authService.isLoggedIn();\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"isLoggedIn()\" class= \"col-md-12\" style=\"padding-top: 2%;\">\r\n    <table class=\"table\">\r\n        <thead>\r\n        <tr>\r\n          <th scope=\"col\">#</th>\r\n          <th scope=\"col\">Title</th>\r\n          <th scope=\"col\">Type</th>\r\n          <th scope=\"col\">Download</th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        <tr *ngFor=\"let document of documents\">\r\n          <th scope=\"row\">{{ document.id }}</th>\r\n          <td>{{ document.title  }}</td>\r\n          <td>{{ document.type.name  }}</td>\r\n          <td><a href=\"#\">Download</a></td>\r\n        </tr>\r\n        </tbody>\r\n      </table>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { SluzbaDocumentsServiceService } from './sluzba-documents-service.service';\r\nimport { AuthenticationServiceService } from 'src/app/services/auth/authentication-service.service';\r\n\r\ninterface Document {\r\n  id?: number;\r\n  title: string;\r\n  type: DocumentType;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-sluzba-documents',\r\n  templateUrl: './sluzba-documents.component.html',\r\n  styleUrls: ['./sluzba-documents.component.css']\r\n})\r\nexport class SluzbaDocumentsComponent implements OnInit {\r\n\r\n  documents: Document[];\r\n\r\n  subscription: Subscription;\r\n\r\n  constructor(private documentService: SluzbaDocumentsServiceService, private router: Router, private authService: AuthenticationServiceService) {\r\n    this.subscription = documentService.RegenerateData$.subscribe(() =>\r\n      this.getDocuments()\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getDocuments();\r\n  }\r\n\r\n  getDocuments() {\r\n    this.documentService.getDocuments().subscribe(res =>\r\n      this.documents = res.body);\r\n  }\r\n\r\n  isLoggedIn():boolean{\r\n    return this.authService.isLoggedIn();\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpResponse, HttpClient } from '@angular/common/http';\r\nimport {Observable, Subject} from 'rxjs';\r\n\r\nimport { AuthenticationServiceService } from '../../services/auth/authentication-service.service';\r\nimport { Payment } from '../../model/payment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SluzbaPaymentsServiceService {\r\n\r\n  private paymentsUrl = 'payments';\r\n\r\n  constructor(private http: HttpClient, private authService: AuthenticationServiceService) { }\r\n\r\n  private RegenerateData = new Subject<void>();\r\n\r\n  RegenerateData$ = this.RegenerateData.asObservable();\r\n\r\n  announceChange() {\r\n      this.RegenerateData.next();\r\n  }\r\n  \r\n  getPayments(): Observable<HttpResponse<Payment[]>> {\r\n      let username = this.authService.getCurrentUser().username;\r\n      console.log(\"username: \" + username);\r\n      const url = `${this.paymentsUrl}/getAllPaymentsForUser/${username}`;\r\n      return this.http.get<Payment[]>(url, {observe: 'response'});\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-sluzba-enrollments',\r\n  templateUrl: './sluzba-enrollments.component.html',\r\n  styleUrls: ['./sluzba-enrollments.component.css']\r\n})\r\nexport class SluzbaEnrollmentsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>sluzba-enrollments works!</p>\r\n","<div *ngIf=\"isLoggedIn() && isAdmin()\" class= \"col-md-12\" style=\"padding-top: 2%;\">\r\n    <table class=\"table\">\r\n        <thead>\r\n        <tr>\r\n          <th scope=\"col\">#</th>\r\n          <th scope=\"col\">Firstname</th>\r\n          <th scope=\"col\">Lastname</th>\r\n          <th scope=\"col\">Username</th>\r\n          <th scope=\"col\">Cardname</th>\r\n\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        <tr *ngFor=\"let student of students\">\r\n          <th scope=\"row\">{{ student.id }}</th>\r\n          <td>{{ student.user.firstName }}</td>\r\n          <td>{{ student.user.lastName }}</td>\r\n          <td>{{ student.user.username }}</td>\r\n          <td>{{ student.cardName }}</td>\r\n        </tr>\r\n        </tbody>\r\n      </table>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { SluzbaStudentsServiceService } from './sluzba-students-service.service';\r\nimport { AuthenticationServiceService } from 'src/app/services/auth/authentication-service.service';\r\nimport { User } from 'src/app/model/user';\r\n\r\ninterface Student {\r\n  id?: number;\r\n  cardName: string;\r\n  user: User;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-sluzba-students',\r\n  templateUrl: './sluzba-students.component.html',\r\n  styleUrls: ['./sluzba-students.component.css']\r\n})\r\nexport class SluzbaStudentsComponent implements OnInit {\r\n\r\n  students: Student[];\r\n\r\n  subscription: Subscription;\r\n\r\n  constructor(private studentService: SluzbaStudentsServiceService, private router: Router, private authService: AuthenticationServiceService) {\r\n    this.subscription = studentService.RegenerateData$.subscribe(() =>\r\n      this.getStudents()\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getStudents();\r\n  }\r\n\r\n  getStudents() {\r\n    this.studentService.getStudents().subscribe(res =>\r\n      this.students = res.body);\r\n  }\r\n\r\n  isLoggedIn():boolean{\r\n    return this.authService.isLoggedIn();\r\n  }\r\n\r\n  isAdmin():boolean{\r\n    return this.authService.isAdmin();\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-sluzba-not-found-page',\r\n  templateUrl: './sluzba-not-found-page.component.html',\r\n  styleUrls: ['./sluzba-not-found-page.component.css']\r\n})\r\nexport class SluzbaNotFoundPageComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<h1>\r\n    Page not found!\r\n  </h1>\r\n  ","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class JwtUtilsService {\r\n\r\n  constructor() { }\r\n\r\n  getRoles(token: string) {\r\n    let jwtData = token.split('.')[1];\r\n    let decodedJwtJsonData = window.atob(jwtData);\r\n    let decodedJwtData = JSON.parse(decodedJwtJsonData);\r\n    console.log(decodedJwtData);\r\n\r\n    return [decodedJwtData.role];\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"isLoggedIn() && isAdmin()\" class= \"col-md-12\" style=\"padding-top: 2%;\">\r\n    <table class=\"table\">\r\n        <thead>\r\n        <tr>\r\n          <th scope=\"col\">#</th>\r\n          <th scope=\"col\">Firstname</th>\r\n          <th scope=\"col\">Lastname</th>\r\n          <th scope=\"col\">Username</th>\r\n\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        <tr *ngFor=\"let teacher of teachers\">\r\n          <th scope=\"row\">{{ teacher.id }}</th>\r\n          <td>{{ teacher.user.firstName }}</td>\r\n          <td>{{ teacher.user.lastName }}</td>\r\n          <td>{{ teacher.user.username }}</td>\r\n        </tr>\r\n        </tbody>\r\n      </table>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { SluzbaTeachersServiceService } from './sluzba-teachers-service.service';\r\nimport { AuthenticationServiceService } from 'src/app/services/auth/authentication-service.service';\r\nimport { User } from 'src/app/model/user';\r\n\r\ninterface Teacher {\r\n  id?: number;\r\n  user: User;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-sluzba-teachers',\r\n  templateUrl: './sluzba-teachers.component.html',\r\n  styleUrls: ['./sluzba-teachers.component.css']\r\n})\r\nexport class SluzbaTeachersComponent implements OnInit {\r\n\r\n  teachers: Teacher[];\r\n\r\n  subscription: Subscription;\r\n\r\n  constructor(private teacherService: SluzbaTeachersServiceService, private router: Router, private authService: AuthenticationServiceService) {\r\n    this.subscription = teacherService.RegenerateData$.subscribe(() =>\r\n      this.getTeachers()\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getTeachers();\r\n  }\r\n\r\n  getTeachers() {\r\n    this.teacherService.getTeachers().subscribe(res =>\r\n      this.teachers = res.body);\r\n  }\r\n\r\n  isLoggedIn():boolean{\r\n    return this.authService.isLoggedIn();\r\n  }\r\n\r\n  isAdmin():boolean{\r\n    return this.authService.isAdmin();\r\n  }\r\n\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { SluzbaPaymentsComponent } from './components/sluzba-payments/sluzba-payments.component';\r\nimport { SluzbaDocumentsComponent } from './components/sluzba-documents/sluzba-documents.component';\r\nimport { SluzbaLoginComponent } from './components/sluzba-login/sluzba-login.component';\r\nimport { SluzbaCoursesComponent } from './components/sluzba-courses/sluzba-courses.component';\r\nimport { SluzbaProfileComponent } from './components/sluzba-profile/sluzba-profile.component';\r\nimport { SluzbaStudentsComponent } from './components/sluzba-students/sluzba-students.component';\r\nimport { CanActivateAuthGuardService } from './services/auth/can-activate-auth.guard.service';\r\nimport { SluzbaNotFoundPageComponent } from './components/sluzba-not-found-page/sluzba-not-found-page.component';\r\nimport { SluzbaTeachersComponent } from './components/sluzba-teachers/sluzba-teachers.component';\r\nimport { SluzbaCourseDetailsComponent } from './components/sluzba-course-details/sluzba-course-details.component';\r\nimport { SluzbaHomeComponent } from './components/sluzba-home/sluzba-home.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'dashboard', component: SluzbaHomeComponent },\r\n  { path: 'login', component: SluzbaLoginComponent },\r\n  { path: 'profile', component: SluzbaProfileComponent, canActivate: [CanActivateAuthGuardService]},\r\n  { path: 'courses', component: SluzbaCoursesComponent, canActivate: [CanActivateAuthGuardService]},\r\n  { path: 'payments', component: SluzbaPaymentsComponent, canActivate: [CanActivateAuthGuardService]},\r\n  { path: 'documents', component: SluzbaDocumentsComponent, canActivate: [CanActivateAuthGuardService]},\r\n  { path: 'students', component: SluzbaStudentsComponent, canActivate: [CanActivateAuthGuardService]},\r\n  { path: 'teachers', component: SluzbaTeachersComponent, canActivate: [CanActivateAuthGuardService]},\r\n  { path: 'addCourse', component: SluzbaCourseDetailsComponent },\r\n  { path: 'editCourse/:id', component: SluzbaCourseDetailsComponent },\r\n  { path: '',\r\n    redirectTo: '/login',\r\n    pathMatch: 'full'\r\n  },\r\n  { path: '**', component: SluzbaNotFoundPageComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes,{useHash: true})\r\n  ],\r\n  exports: [RouterModule]\r\n  \r\n})\r\nexport class AppRoutingModule { }\r\n","<div *ngIf=\"isLoggedIn()\" class= \"col-md-12\" style=\"padding-top: 2%;\">\r\n    <table class=\"table\">\r\n        <thead>\r\n        <tr>\r\n          <th scope=\"col\">#</th>\r\n          <th scope=\"col\">Course name</th>\r\n          <th scope=\"col\">ECTS</th>\r\n          <th></th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        <tr *ngFor=\"let course of courses\">\r\n          <th scope=\"row\">{{ course.id }}</th>\r\n          <td>{{ course.name }}</td>\r\n          <td>{{ course.espb | number }}</td>\r\n          <td *ngIf=\"isAdmin()\">\r\n            <button type=\"button\" class=\"btn btn-primary\" aria-label=\"Edit\" (click)=\"gotoEdit(course)\">\r\n              <span class=\"fa fa-edit\" aria-hidden=\"true\"></span>\r\n            </button>\r\n      \r\n            <button type=\"button\" class=\"btn btn-danger\" aria-label=\"Delete\" (click)=\"deleteCourse(course.id, course.name)\">\r\n              <span class=\"fa fa-trash\" aria-hidden=\"true\"></span>\r\n            </button>\r\n          </td>\r\n        </tr>\r\n        </tbody>\r\n      </table>\r\n      <div *ngIf=\"isAdmin()\" class=\"right\">\r\n        <button type=\"button\" class=\"btn btn-success\" aria-label=\"Add\" (click)=\"gotoAdd()\">\r\n          <span class=\"fa fa-plus\" aria-hidden=\"true\"></span>\r\n        </button>\r\n      </div> \r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { SluzbaCoursesServiceService } from './sluzba-courses-service.service';\r\nimport { AuthenticationServiceService } from 'src/app/services/auth/authentication-service.service';\r\n\r\ninterface Course {\r\n  id?: number;\r\n  name: string;\r\n  espb: number;\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-sluzba-courses',\r\n  templateUrl: './sluzba-courses.component.html',\r\n  styleUrls: ['./sluzba-courses.component.css']\r\n})\r\nexport class SluzbaCoursesComponent implements OnInit {\r\n\r\n  courses: Course[];\r\n\r\n  subscription: Subscription;\r\n\r\n  constructor(private courseService: SluzbaCoursesServiceService, private router: Router, private authService: AuthenticationServiceService) {\r\n    this.subscription = courseService.RegenerateData$.subscribe(() =>\r\n      this.getCourses()\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getCourses();\r\n  }\r\n\r\n  getCourses() {\r\n    this.courseService.getCourses().subscribe(res =>\r\n      this.courses = res.body);\r\n  }\r\n\r\n  isLoggedIn():boolean{\r\n    return this.authService.isLoggedIn();\r\n  }\r\n\r\n  isAdmin():boolean{\r\n    return this.authService.isAdmin();\r\n  }\r\n\r\n  gotoAdd(): void {\r\n    this.router.navigate(['/addCourse']);\r\n  }\r\n\r\n  gotoEdit(course: Course): void {\r\n    this.router.navigate(['/editCourse', course.id]);\r\n  }\r\n\r\n  deleteCourse(courseId: number, courseName: string): void {\r\n    if(confirm(\"Are you sure to delete course \" + courseName + \"?\")){\r\n    this.courseService.deleteCourse(courseId).subscribe(\r\n      () => this.getCourses()\r\n    );\r\n    }\r\n  }\r\n}\r\n","<div class=\"sidebar-wrapper\">\n    <div class=\"logo\">\n        <a routerLink=\"/dashboard\" href=\"#\" class=\"simple-text\">\n            <div class=\"logo-img\">\n                <img src=\"assets/img/logo.jpeg\" class=\"logo\" alt=\"StudentskaSluzba\"/>\n            </div>\n            Student service\n        </a>\n    </div>\n    <ul class=\"nav responsive-nav\">\n        <li *ngIf=\"isMobileMenu()\">\n            <a class=\"dropdown-toggle\" data-toggle=\"dropdown\">\n                <i class=\"fa fa-dashboard\"></i>\n\t\t\t\t<p class=\"hidden-lg hidden-md\">{{ user? user.firstName : \"\"  }} {{ user? user.lastName : \"\"  }}</p>\n            </a>\n        </li>\n        <li *ngIf=\"isMobileMenu()\">\n            <a class=\"dropdown-item\" (click)=\"logout()\" href=\"#\">Log out</a>\n        </li>\n        <li class=\"separator hidden-lg hidden-md\" *ngIf=\"isMobileMenu()\"></li>\n        <ng-container routerLinkActive=\"active\" *ngFor=\"let menuItem of menuItems\" class=\" {{menuItem.class}} \">\n            <li *ngIf=\"[menuItem.if]\">\n                <a *ngIf=\"[menuItem.if]\" [routerLink]=\"[menuItem.path]\">\n                    <i class=\"{{menuItem.icon}}\"></i>\n                    <p>{{menuItem.title}}</p>\n                </a>\n            </li> \n         </ng-container>\n    </ul>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\nimport { User } from 'src/app/model/user';\nimport { AuthenticationServiceService } from '../../services/auth/authentication-service.service';\nimport { SluzbaSidebarServiceService } from './sluzba-sidebar-service.service';\n\ndeclare const $: any;\ndeclare interface RouteInfo {\n    path: string;\n    title: string;\n    icon: string;\n    class: string;\n    if: string;\n}\nexport const ROUTES: RouteInfo[] = [\n    { path: '/dashboard', title: 'Dashboard',  icon: 'pe-7s-graph', class: '', if:'' },\n    { path: '/profile', title: 'User Profile',  icon:'pe-7s-user', class: '',  if: '' },\n    { path: '/courses', title: 'Courses List',  icon:'pe-7s-notebook', class: '',  if: '' },\n    { path: '/payments', title: 'Payments',  icon:'pe-7s-cash paymants', class: '',  if: 'isStudent()' },\n    { path: '/documents', title: 'Documents',  icon:'pe-7s-note2', class: '', if: 'isStudent()' },\n    { path: '/students', title: 'Students',  icon:'pe-7s-users', class: '', if: 'isAdmin()' },\n    { path: '/teachers', title: 'Teachers',  icon:'pe-7s-users', class: '', if: 'isAdmin()' },\n];\n\n@Component({\n  selector: 'app-sluzba-sidebar',\n  templateUrl: './sluzba-sidebar.component.html',\n  styleUrls: ['./sluzba-sidebar.component.css']\n})\nexport class SluzbaSidebarComponent implements OnInit {\n\n  menuItems: any[];\n\n  user: User;\n\n  subscription: Subscription;\n\n  constructor(private sidebarService: SluzbaSidebarServiceService, private authenticationService:AuthenticationServiceService,private router: Router) \n  { \n    this.subscription = sidebarService.RegenerateData$.subscribe(() =>\n      this.getUser()\n    );\n  }\n\n  ngOnInit() {\n    this.getUser();\n    this.menuItems = ROUTES.filter(menuItem => menuItem);\n  }\n\n  isMobileMenu() {\n      if ($(window).width() > 991) {\n          return false;\n      }\n      return true;\n  };\n\n  getUser() {\n    this.sidebarService.getUser().subscribe(res =>\n      this.user = res.body);\n  }\n\n  logout():void{\n    this.authenticationService.logout();\n    this.router.navigate(['/login']);\n  }\n\n  isLoggedIn():boolean{\n    return this.authenticationService.isLoggedIn();\n  }\n\n  isStudent():boolean{\n    return this.authenticationService.isStudent();\n  }\n\n  isAdmin():boolean{\n    return this.authenticationService.isAdmin();\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthenticationServiceService } from './authentication-service.service';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CanActivateAuthGuardService implements CanActivate {\r\n\r\n  constructor(private authenticationService: AuthenticationServiceService, private router: Router) { }\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n    if (this.authenticationService.isLoggedIn()) {\r\n      return true;\r\n    }\r\n    else {\r\n      this.router.navigate(['/main']);\r\n      return false;\r\n    }\r\n  }\r\n\r\n}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}