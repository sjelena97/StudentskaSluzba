{"version":3,"sources":["./src/app/components/sluzba-profile/sluzba-profile.component.ts","./src/app/components/sluzba-profile/sluzba-profile.component.html","./src/app/services/auth/authentication-service.service.ts","./src/app/components/sluzba-sidebar/sluzba-sidebar-service.service.ts","./src/app/components/sluzba-documents/sluzba-documents-service.service.ts","./src/app/components/sluzba-teachings/sluzba-teachings.component.ts","./src/app/components/sluzba-teachings/sluzba-teachings.component.html","./src/app/model/course.ts","./src/app/components/sluzba-profile/sluzba-profile-service.service.ts","./src/environments/environment.ts","./src/app/components/sluzba-exam-taking-details/sluzba-exam-taking-details.component.ts","./src/app/components/sluzba-exam-taking-details/sluzba-exam-taking-details.component.html","./src/app/components/sluzba-user/sluzba-user.component.ts","./src/app/components/sluzba-user/sluzba-user.component.html","./src/app/components/sluzba-exam-takings/sluzba-exam-takings.component.ts","./src/app/components/sluzba-exam-takings/sluzba-exam-takings.component.html","./src/app/components/sluzba-document-details/sluzba-document-details-service.service.ts","./src/app/components/sluzba-home/sluzba-home.component.ts","./src/app/components/sluzba-home/sluzba-home.component.html","./src/app/components/sluzba-students/sluzba-students-service.service.ts","./src/app/components/sluzba-enrollments/sluzba-enrollments-service.service.ts","./src/app/services/auth/token-interceptor.service.ts","./src/app/components/sluzba-login/sluzba-login.component.ts","./src/app/components/sluzba-login/sluzba-login.component.html","./src/app/model/examPeriod.ts","./src/app/model/teaching.ts","./src/app/components/sluzba-courses/sluzba-courses-service.service.ts","./src/app/components/sluzba-teachings/sluzba-teachings-service.service.ts","./src/app/components/sluzba-navbar/sluzba-navbar-service.service.ts","./src/app/components/sluzba-course-details/sluzba-course-details.component.ts","./src/app/components/sluzba-course-details/sluzba-course-details.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/model/enrollment.ts","./src/app/components/sluzba-exam-takings/sluzba-exam-takings-service.service.ts","./src/app/components/sluzba-exams/sluzba-exams-service.service.ts","./src/app/model/payment.ts","./src/app/model/document.ts","./src/app/model/examPartType.ts","./src/app/components/sluzba-exam-periods/sluzba-exam-periods-service.service.ts","./src/app/components/sluzba-teachers/sluzba-teachers-service.service.ts","./src/app/model/teacher.ts","./src/app/app.module.ts","./src/app/model/examPart.ts","./src/app/components/sluzba-navbar/sluzba-navbar.component.ts","./src/app/components/sluzba-navbar/sluzba-navbar.component.html","./src/app/model/document-type.ts","./src/app/components/sluzba-account/sluzba-account-service.service.ts","./src/app/components/sluzba-payment-details/sluzba-payment-details.component.ts","./src/app/components/sluzba-payment-details/sluzba-payment-details.component.html","./src/app/model/student.ts","./src/app/components/sluzba-exam-periods/sluzba-exam-periods.component.ts","./src/app/components/sluzba-exam-periods/sluzba-exam-periods.component.html","./src/app/components/sluzba-payments/sluzba-payments.component.ts","./src/app/components/sluzba-payments/sluzba-payments.component.html","./src/app/components/sluzba-documents/sluzba-documents.component.ts","./src/app/components/sluzba-documents/sluzba-documents.component.html","./src/app/components/sluzba-teacher-details/sluzba-teacher-details.component.ts","./src/app/components/sluzba-teacher-details/sluzba-teacher-details.component.html","./src/app/components/sluzba-payments/sluzba-payments-service.service.ts","./src/app/model/account.ts","./src/app/model/teaching-type.ts","./src/app/components/sluzba-exam-period-details/sluzba-exam-period-details.component.ts","./src/app/components/sluzba-exam-period-details/sluzba-exam-period-details.component.html","./src/app/components/sluzba-enrollments/sluzba-enrollments.component.ts","./src/app/components/sluzba-enrollments/sluzba-enrollments.component.html","./src/app/model/user.ts","./src/app/components/sluzba-exam-details/sluzba-exam-details.component.ts","./src/app/components/sluzba-exam-details/sluzba-exam-details.component.html","./src/app/components/sluzba-students/sluzba-students.component.ts","./src/app/components/sluzba-students/sluzba-students.component.html","./src/app/components/sluzba-document-details/sluzba-document-details.component.ts","./src/app/components/sluzba-document-details/sluzba-document-details.component.html","./src/app/components/sluzba-not-found-page/sluzba-not-found-page.component.ts","./src/app/components/sluzba-not-found-page/sluzba-not-found-page.component.html","./src/app/services/auth/jwt-utils.service.ts","./src/app/components/sluzba-teachers/sluzba-teachers.component.ts","./src/app/components/sluzba-teachers/sluzba-teachers.component.html","./src/app/components/sluzba-user/sluzba-user-service.service.ts","./src/app/components/sluzba-student-details/sluzba-student-details.component.ts","./src/app/components/sluzba-student-details/sluzba-student-details.component.html","./src/app/app-routing.module.ts","./src/app/components/sluzba-courses/sluzba-courses.component.ts","./src/app/components/sluzba-courses/sluzba-courses.component.html","./src/app/components/sluzba-exams/sluzba-exams.component.ts","./src/app/components/sluzba-exams/sluzba-exams.component.html","./src/app/components/sluzba-sidebar/sluzba-sidebar.component.ts","./src/app/components/sluzba-sidebar/sluzba-sidebar.component.html","./src/app/services/auth/can-activate-auth.guard.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\nimport { User } from 'src/app/model/user';\r\nimport { SluzbaProfileServiceService } from './sluzba-profile-service.service';\r\nimport { AuthenticationServiceService } from 'src/app/services/auth/authentication-service.service';\r\nimport { Account } from 'src/app/model/account';\r\nimport { SluzbaAccountServiceService } from '../sluzba-account/sluzba-account-service.service';\r\n\r\ninterface Student {\r\n  id?: number;\r\n  cardName: String;\r\n  account: Account;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-sluzba-profile',\r\n  templateUrl: './sluzba-profile.component.html',\r\n  styleUrls: ['./sluzba-profile.component.css']\r\n})\r\nexport class SluzbaProfileComponent implements OnInit {\r\n\r\n  userForm: FormGroup;\r\n  studentForm: FormGroup;\r\n  passwordForm: FormGroup;\r\n  submitted = false;\r\n\r\n  user: User = new User({\r\n    username: '',\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    password: ''\r\n  });\r\n\r\n  student: Student;\r\n  available: 0 | number;\r\n\r\n  subscription: Subscription;\r\n  public showPassword: boolean;\r\n  public showPassword2: boolean;\r\n\r\n\r\n  constructor(private formBuilder: FormBuilder, private profileService: SluzbaProfileServiceService, private authenticationService: AuthenticationServiceService, private accountService: SluzbaAccountServiceService, private router: Router, private authService: AuthenticationServiceService) {\r\n    this.subscription = profileService.RegenerateData$.subscribe(() =>\r\n      this.getUser()\r\n    );\r\n  }\r\n\r\n  isShowDiv = false;\r\n\r\n  toggleDisplayDiv() {\r\n    this.isShowDiv = !this.isShowDiv;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getUser();\r\n    this.userForm = this.formBuilder.group({\r\n      firstName: ['', Validators.required],\r\n      lastName: ['', Validators.required],\r\n      username: ['', Validators.required],\r\n      email: ['', [Validators.required, Validators.email]]\r\n      \r\n    });\r\n    this.studentForm = this.formBuilder.group({\r\n      cardName: ['', Validators.required],\r\n      bankAccount: ['', Validators.required],\r\n      model: ['', Validators.required],\r\n      personalCallToNumber: ['', Validators.required]\r\n    });\r\n    this.passwordForm = this.formBuilder.group({\r\n      newPassword: ['', [Validators.required, Validators.minLength(6)]],\r\n      confirmPassword: ['', Validators.required]\r\n    }, {\r\n      validator: this.MustMatch('newPassword', 'confirmPassword')\r\n    });\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get u() { return this.userForm.controls; }\r\n  get s() { return this.studentForm.controls; }\r\n  get p() { return this.passwordForm.controls; }\r\n\r\n  getUser() {\r\n    this.profileService.getUser().subscribe(res => {\r\n      this.user = res.body;\r\n      this.userForm.get('firstName').setValue(this.user.firstName);\r\n      this.userForm.get('lastName').setValue(this.user.lastName);\r\n      this.userForm.get('username').setValue(this.user.username);\r\n      this.userForm.get('email').setValue(this.user.email);\r\n    });\r\n    if (this.authService.isStudent()) {\r\n      this.getStudent();\r\n    }\r\n  }\r\n\r\n  getStudent() {\r\n    this.profileService.getStudent().\r\n      subscribe(res => {\r\n        this.student = res.body;\r\n        this.studentForm.get('cardName').setValue(this.student.cardName);\r\n        this.studentForm.get('bankAccount').setValue(this.student.account.bankAccount);\r\n        this.studentForm.get('model').setValue(this.student.account.model);\r\n        this.studentForm.get('personalCallToNumber').setValue(this.student.account.personalCallToNumber);\r\n        this.getAvailableFunds();\r\n      });\r\n\r\n  }\r\n\r\n  MustMatch(controlName: string, matchingControlName: string) {\r\n    return (formGroup: FormGroup) => {\r\n      const control = formGroup.controls[controlName];\r\n      const matchingControl = formGroup.controls[matchingControlName];\r\n\r\n      if (matchingControl.errors && !matchingControl.errors.mustMatch) {\r\n        // return if another validator has already found an error on the matchingControl\r\n        return;\r\n      }\r\n\r\n      // set error on matchingControl if validation fails\r\n      if (control.value !== matchingControl.value) {\r\n        matchingControl.setErrors({ mustMatch: true });\r\n      } else {\r\n        matchingControl.setErrors(null);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  private getAvailableFunds(): void {\r\n    this.accountService.getAvailableFunds(this.student.account.id).subscribe(res => {\r\n      this.available = res.body;\r\n    });\r\n  }\r\n\r\n  save(): void {\r\n    this.submitted = true;\r\n\r\n    // stop here if form is invalid\r\n    if (this.userForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.user.firstName =  this.userForm.get('firstName').value;\r\n    this.user.lastName =  this.userForm.get('lastName').value;\r\n    this.user.username =  this.userForm.get('username').value;\r\n    this.user.email =  this.userForm.get('email').value;\r\n\r\n    this.profileService.editUser(this.user)\r\n      .subscribe(user => {\r\n        this.profileService.announceChange();\r\n        this.authenticationService.logout();\r\n        this.router.navigate(['/login']);\r\n      });\r\n  }\r\n\r\n  updatePassword(): void {\r\n    this.submitted = true;\r\n\r\n    // stop here if form is invalid\r\n    if (this.passwordForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    console.log(\"new: \" + this.passwordForm.get('newPassword').value);\r\n    this.profileService.updatePassword(this.user.id, this.passwordForm.get('newPassword').value)\r\n      .subscribe(user => {\r\n        this.profileService.announceChange();\r\n        this.authenticationService.logout();\r\n        this.router.navigate(['/login']);\r\n      });\r\n\r\n  }\r\n\r\n  isLoggedIn(): boolean {\r\n    return this.authService.isLoggedIn();\r\n  }\r\n\r\n\r\n  isStudent(): boolean {\r\n    return this.authService.isStudent();\r\n  }\r\n\r\n\r\n  isAdmin(): boolean {\r\n    return this.authService.isAdmin();\r\n  }\r\n\r\n}\r\n","<div class=\"main-content\">\r\n    <div class=\"container-fluid\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-8\">\r\n                <div class=\"card\">\r\n                    <div class=\"header\">\r\n                        <h4 class=\"title\">Profile</h4>\r\n                    </div>\r\n                    <div class=\"content\">\r\n                        <form [formGroup]=\"userForm\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label>First Name</label>\r\n                                        <input [readonly]= \"isStudent()\" type=\"text\" placeholder=\"First name\" formControlName=\"firstName\"\r\n                                            class=\"form-control text\"\r\n                                            [ngClass]=\"{ 'is-invalid': submitted && u.firstName.errors }\" />\r\n                                        <div *ngIf=\"submitted && u.firstName.errors\"\r\n                                            class=\"invalid-feedback alert alert-danger\">\r\n                                            <div *ngIf=\"u.firstName.errors.required\">First Name is required</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label>Last Name</label>\r\n                                        <input  [readonly]= \"isStudent()\" type=\"text\" placeholder=\"Last Name\" formControlName=\"lastName\"\r\n                                            class=\"form-control text\"\r\n                                            [ngClass]=\"{ 'is-invalid': submitted && u.lastName.errors }\" />\r\n                                        <div *ngIf=\"submitted && u.lastName.errors\"\r\n                                            class=\"invalid-feedback alert alert-danger\">\r\n                                            <div *ngIf=\"u.lastName.errors.required\">Last Name is required</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label>Username</label>\r\n                                        <input  [readonly]= \"isStudent()\" type=\"text\" placeholder=\"Username\" formControlName=\"username\"\r\n                                            class=\"form-control text\"\r\n                                            [ngClass]=\"{ 'is-invalid': submitted && u.username.errors }\" />\r\n                                        <div *ngIf=\"submitted && u.username.errors\"\r\n                                            class=\"invalid-feedback alert alert-danger\">\r\n                                            <div *ngIf=\"u.username.errors.required\">Username is required</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label>Email address</label>\r\n                                        <input  [readonly]= \"isStudent()\" type=\"email\" placeholder=\"Email\" formControlName=\"email\"\r\n                                            class=\"form-control text\"\r\n                                            [ngClass]=\"{ 'is-invalid': submitted && u.email.errors }\" />\r\n                                        <div *ngIf=\"submitted && u.email.errors\"\r\n                                            class=\"invalid-feedback alert alert-danger\">\r\n                                            <div *ngIf=\"u.email.errors.required\">Email is required</div>\r\n                                            <div *ngIf=\"u.email.errors.email\">Email must be a valid email address\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <button (click)=toggleDisplayDiv() class=\"btn btn-secondary btn-fill pull-left\">Change\r\n                                password</button>\r\n                            <div *ngIf=\"isAdmin()\">\r\n                                <button (click)=\"save()\" class=\"btn btn-info btn-fill pull-right\">Save</button>\r\n                            </div>\r\n                            <div class=\"clearfix\"></div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n                <div class=\"card\" [hidden]=\"!isShowDiv\">\r\n                    <div class=\"header\">\r\n                        <h4 class=\"title\">Change password</h4>\r\n                    </div>\r\n                    <div class=\"content\">\r\n                        <form [formGroup]=\"passwordForm\">\r\n\r\n                            <div class=\"row form-group inner-addon right-addon\">\r\n                                <div class=\"col-md-6 input-group\">\r\n                                    <label>New password</label>\r\n                                    <input [type]=\"showPassword ? 'text' : 'password'\" formControlName=\"newPassword\"\r\n                                        class=\"form-control\"\r\n                                        [ngClass]=\"{ 'is-invalid': submitted && p.newPassword.errors }\"\r\n                                        placeholder=\"New password\" name=\"newPassword\" />\r\n\r\n                                    <div>\r\n                                        <i alt=\"show\" class=\"fa fa-eye eye-show\" (click)=\"showPassword = !showPassword\"\r\n                                            [class.hide]=\"showPassword\"></i>\r\n                                        <i alt=\"hide\" class=\"fa fa-eye-slash eye-hide\"\r\n                                            (click)=\"showPassword = !showPassword\" [class.hide]=\"!showPassword\"></i>\r\n                                    </div>\r\n                                    <div *ngIf=\"submitted && p.newPassword.errors\"\r\n                                        class=\"invalid-feedback alert alert-danger\">\r\n                                        <div *ngIf=\"p.newPassword.errors.required\">Password is required</div>\r\n                                        <div *ngIf=\"p.newPassword.errors.minlength\">Password must be at least 6\r\n                                            characters</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row form-group inner-addon right-addon\">\r\n                                <div class=\"col-md-6 input-group\">\r\n                                    <label>Repeat password</label>\r\n                                    <input [type]=\"showPassword2 ? 'text' : 'password'\" placeholder=\"Repeat password\"\r\n                                        formControlName=\"confirmPassword\" class=\"form-control\"\r\n                                        [ngClass]=\"{ 'is-invalid': submitted && p.confirmPassword.errors }\" />\r\n\r\n                                    <div>\r\n                                        <i alt=\"show\" class=\"fa fa-eye eye-show\"\r\n                                            (click)=\"showPassword2 = !showPassword2\" [class.hide]=\"showPassword2\"></i>\r\n                                        <i alt=\"hide\" class=\"fa fa-eye-slash eye-hide\"\r\n                                            (click)=\"showPassword2 = !showPassword2\" [class.hide]=\"!showPassword2\"></i>\r\n                                    </div>\r\n                                    <div *ngIf=\"submitted && p.confirmPassword.errors\"\r\n                                        class=\"invalid-feedback alert alert-danger\">\r\n                                        <div *ngIf=\"p.confirmPassword.errors.required\">Confirm Password is\r\n                                            required</div>\r\n                                        <div *ngIf=\"p.confirmPassword.errors.mustMatch\">Passwords must match\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <button (click)=\"updatePassword()\" class=\"btn btn-info btn-fill\">Update\r\n                                password</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n                <div class=\"card\"  *ngIf=\"isStudent()\">\r\n                    <div class=\"content\">\r\n                        <form [formGroup]=\"studentForm\">\r\n                            <div class=\"row\">\r\n                                <div class=\"header\">\r\n                                    <h4 class=\"title\">Student informations</h4>\r\n                                </div>\r\n                                <div class=\"col-md-12\">\r\n                                    <div class=\"form-group\">\r\n                                        <label>Cardname</label>\r\n                                        <input [readonly]=\"true\" type=\"text\" class=\"form-control text\" placeholder=\"Cardname\"\r\n                                            formControlName=\"cardName\"\r\n                                            [ngClass]=\"{ 'is-invalid': submitted && s.cardName.errors }\" />\r\n                                        <div *ngIf=\"submitted && s.cardName.errors\" class=\"invalid-feedback\">\r\n                                            <div *ngIf=\"s.cardName.errors.required\">Cardname is required</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"header\">\r\n                                    <h4 class=\"title\">Account</h4>\r\n                                </div>\r\n                                <div class=\"col-md-3\">\r\n                                    <label for=\"field9c\" class=\"form-control-label text\">Available funds</label>\r\n                                    <p id=\"field9c\" name=\"field9\" class=\"form-control\">{{ available }} RSD</p>\r\n                                </div>\r\n                                <div class=\"col-md-3\">\r\n                                    <div class=\"form-group\">\r\n                                        <label>Model</label>\r\n                                        <input [readonly]=\"true\" type=\"text\" placeholder=\"Model\" class=\"form-control text\"\r\n                                            formControlName=\"model\"\r\n                                            [ngClass]=\"{ 'is-invalid': submitted && s.model.errors }\" />\r\n                                        <div *ngIf=\"submitted && s.model.errors\" class=\"invalid-feedback\">\r\n                                            <div *ngIf=\"s.model.errors.required\">Model is required\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-3\">\r\n                                    <div class=\"form-group\">\r\n                                        <label>Personal call to number</label>\r\n                                        <input [readonly]=\"true\" type=\"text\" placeholder=\"Personal call to number\" class=\"form-control text\"\r\n                                            formControlName=\"personalCallToNumber\"\r\n                                            [ngClass]=\"{ 'is-invalid': submitted && s.personalCallToNumber.errors }\" />\r\n                                        <div *ngIf=\"submitted && s.personalCallToNumber.errors\"\r\n                                            class=\"invalid-feedback\">\r\n                                            <div *ngIf=\"s.personalCallToNumber.errors.required\">Personal call to\r\n                                                number is required\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-3\">\r\n                                    <div class=\"form-group\">\r\n                                        <!-- <h3>Account</h3> -->\r\n                                        <label>Bank account</label>\r\n                                        <input [readonly]=\"true\" type=\"text\" placeholder=\"Bank account\" class=\"form-control text\"\r\n                                            formControlName=\"bankAccount\"\r\n                                            [ngClass]=\"{ 'is-invalid': submitted && s.bankAccount.errors }\" />\r\n                                        <div *ngIf=\"submitted && s.bankAccount.errors\" class=\"invalid-feedback\">\r\n                                            <div *ngIf=\"s.bankAccount.errors.required\">Bank account is required\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n            <div class=\"col-md-4\">\r\n                <div class=\"card card-user\">\r\n                    <div class=\"image\">\r\n                        <img src=\"https://ununsplash.imgix.net/photo-1431578500526-4d9613015464?fit=crop&fm=jpg&h=300&q=75&w=400\"\r\n                            alt=\"...\" />\r\n                    </div>\r\n                    <div class=\"content\">\r\n                        <div class=\"author\">\r\n                            <a href=\"#\">\r\n                                <img class=\"avatar border-gray\" src=\"assets/img/faces/face-0.jpg\" alt=\"...\" />\r\n\r\n                                <h4 class=\"title\">{{ user? user.firstName : \"\" }} {{ user? user.lastName : \"\" }} <br />\r\n                                    <small>{{ user? user.username : \"\" }}</small><BR>\r\n                                    <small *ngIf=\"isStudent()\">Balance: {{ available }} RSD</small>\r\n                                </h4>\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                    <hr>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { JwtUtilsService } from './jwt-utils.service';\r\n\r\n\r\n@Injectable()\r\nexport class AuthenticationServiceService {\r\n\r\n  private readonly loginPath = '/auth/login';\r\n\r\n  constructor(private http: HttpClient, private jwtUtilsService: JwtUtilsService) { }\r\n\r\n  login(username: string, password: string): Observable<boolean> {\r\n    var headers: HttpHeaders = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n    return this.http.post(this.loginPath, JSON.stringify({ username, password }), { headers })\r\n      .map((res: any) => {\r\n        let token = res && res['token'];\r\n        if (token) {\r\n          localStorage.setItem('currentUser', JSON.stringify({\r\n            username: username,\r\n            roles: this.jwtUtilsService.getRoles(token),\r\n            token: token\r\n          }));\r\n          return true;\r\n        }\r\n        else {\r\n          return false;\r\n        }\r\n      })\r\n      .catch((error: any) => {\r\n        if (error.status === 400) {\r\n          return Observable.throw('Ilegal login');\r\n        }\r\n        else {\r\n          return Observable.throw(error.json().error || 'Server error');\r\n        }\r\n      });\r\n  }\r\n\r\n  getToken(): String {\r\n    var currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n    var token = currentUser && currentUser.token;\r\n    return token ? token : \"\";\r\n  }\r\n\r\n  logout(): void {\r\n    localStorage.removeItem('currentUser');\r\n  }\r\n\r\n  isLoggedIn(): boolean {\r\n    if (this.getToken() != '') return true;\r\n    else return false;\r\n  }\r\n\r\n  getCurrentUser() {\r\n    if (localStorage.currentUser) {\r\n      return JSON.parse(localStorage.currentUser);\r\n    }\r\n    else {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  isStudent(): boolean {\r\n    if (localStorage.currentUser) {\r\n      var user = JSON.parse(localStorage.currentUser);\r\n      if (user.roles[0].some(t=>t.authority === \"STUDENT\")) return true;\r\n      else return false;\r\n    }\r\n  }\r\n\r\n  isTeacher(): boolean {\r\n    if (localStorage.currentUser) {\r\n      var user = JSON.parse(localStorage.currentUser);\r\n      if (user.roles[0].some(t=>t.authority === \"TEACHER\")) return true;\r\n      else return false;\r\n    }\r\n  }\r\n\r\n  isAdmin(): boolean {\r\n    if (localStorage.currentUser) {\r\n      var user = JSON.parse(localStorage.currentUser);\r\n      if (user.roles[0].some(t=>t.authority === \"ADMIN\")) return true;\r\n      else return false;\r\n    }\r\n  }\r\n\r\n  getCurrentUserUsername() {\r\n    if (localStorage.currentUser) {\r\n      return JSON.parse(localStorage.currentUser.username);\r\n    }\r\n    else {\r\n      return undefined;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpResponse, HttpClient } from '@angular/common/http';\r\nimport {Observable, Subject} from 'rxjs';\r\n\r\nimport { AuthenticationServiceService } from '../../services/auth/authentication-service.service';\r\nimport { User } from '../../model/user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SluzbaSidebarServiceService {\r\n\r\n  private usersUrl = 'users';\r\n\r\n  constructor(private http: HttpClient, private authService: AuthenticationServiceService) { }\r\n\r\n  private RegenerateData = new Subject<void>();\r\n\r\n  RegenerateData$ = this.RegenerateData.asObservable();\r\n\r\n  announceChange() {\r\n      this.RegenerateData.next();\r\n  }\r\n  \r\n  getUser(): Observable<HttpResponse<User>> {\r\n      let username = this.authService.getCurrentUser().username;\r\n      console.log(\"username: \" + username);\r\n      const url = `${this.usersUrl}/getUserByUsername/${username}`;\r\n      return this.http.get<User>(url, {observe: 'response'});\r\n  }\r\n  \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpResponse, HttpClient, HttpEvent, HttpRequest } from '@angular/common/http';\r\nimport {Observable, Subject} from 'rxjs';\r\n\r\nimport { AuthenticationServiceService } from '../../services/auth/authentication-service.service';\r\nimport { Document } from '../../model/document';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SluzbaDocumentsServiceService {\r\n\r\n  private documentsUrl = 'documents';\r\n\r\n  constructor(private http: HttpClient, private authService: AuthenticationServiceService) { }\r\n\r\n  private RegenerateData = new Subject<void>();\r\n\r\n  RegenerateData$ = this.RegenerateData.asObservable();\r\n\r\n  announceChange() {\r\n      this.RegenerateData.next();\r\n  }\r\n\r\n  download(documentId: number): Observable<Blob> {\r\n    const url = `${this.documentsUrl}/download/${documentId}`;\r\n    return this.http.get(url, {responseType: 'blob'});\r\n  }\r\n  \r\n  getDocuments(): Observable<HttpResponse<Document[]>> {\r\n      let username = this.authService.getCurrentUser().username;\r\n      console.log(\"username: \" + username);\r\n      const url = `${this.documentsUrl}/getAllDocumentsForUser/${username}`;\r\n      return this.http.get<Document[]>(url, {observe: 'response'});\r\n  }\r\n\r\n  deleteDocument(documentId: number): Observable<HttpResponse<any>> {\r\n    const url = `${this.documentsUrl}/deleteDocument/${documentId}`;\r\n    return this.http.put<any>(url, {observe: 'response'});\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\n\r\nimport { Teacher } from 'src/app/model/teacher';\r\nimport { Teaching } from 'src/app/model/teaching';\r\n\r\nimport { NgbDateStruct } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { SluzbaTeachersServiceService } from '../sluzba-teachers/sluzba-teachers-service.service';\r\nimport { SluzbaCoursesServiceService } from '../sluzba-courses/sluzba-courses-service.service';\r\nimport { SluzbaTeachingsServiceService } from './sluzba-teachings-service.service';\r\nimport { User } from 'src/app/model/user';\r\nimport { Course } from 'src/app/model/course';\r\nimport { TeachingType } from 'src/app/model/teaching-type';\r\n\r\n\r\n@Component({\r\n  selector: 'app-sluzba-teachings',\r\n  templateUrl: './sluzba-teachings.component.html',\r\n  styleUrls: ['./sluzba-teachings.component.css']\r\n})\r\nexport class SluzbaTeachingsComponent implements OnInit {\r\n  \r\n  teaching: Teaching;\r\n  teachers: Teacher[];\r\n  types: TeachingType[];\r\n\r\n  constructor(private route: ActivatedRoute, private courseService: SluzbaCoursesServiceService,\r\n    private teacherService: SluzbaTeachersServiceService, private teachingService: SluzbaTeachingsServiceService,\r\n    private location: Location) {\r\n    this.teaching = new Teaching({\r\n      startDate: null,\r\n      endDate: null,\r\n      teacher: new Teacher({\r\n        user: new User({\r\n          username: '',\r\n          firstName: '',\r\n          lastName: '',\r\n          email: '',\r\n          password: ''\r\n        })\r\n      }),\r\n      course: new Course({\r\n        name: '',\r\n        code: '',\r\n        espb: 0,\r\n        active: true\r\n      }),\r\n      type: new TeachingType({\r\n        name: '',\r\n        code: ''\r\n      })\r\n    });\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.route.queryParams.subscribe(params =>\r\n      this.courseService.getCourse(params['courseId'])\r\n        .subscribe(res => \r\n          this.teaching.course = res.body \r\n        ));\r\n\r\n    this.teacherService.getTeachersList().subscribe(res =>\r\n      this.teachers = res.body);\r\n\r\n    this.teachingService.getTeachingTypes().subscribe(res =>\r\n      this.types = res.body);\r\n  }\r\n\r\n  add(): void {\r\n    this.teachingService.addTeaching(this.teaching, this.teaching.course.id)\r\n      .subscribe(teaching => {\r\n        this.teachingService.announceChange();\r\n        this.goBack();\r\n      });\r\n  }\r\n\r\n  goBack(): void {\r\n    this.location.back();\r\n  }\r\n  \r\n\r\n\r\n}\r\n","<div class=\"main-content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <div class=\"card\" style=\"padding-left: 10px;\">\r\n          <h3>Enroll teachers in course {{teaching.course.name}} </h3>\r\n\r\n\r\n          <div class=\"form-group\">\r\n            <label>Select teacher</label>\r\n            <select class=\"form-control\" [(ngModel)]=\"teaching.teacher\">\r\n              <option *ngFor=\"let t of teachers\" [ngValue]=\"t\">{{t.user.firstName}} {{t.user.lastName}}</option>\r\n            </select>\r\n          </div>\r\n\r\n          <h4>Select teaching type</h4>\r\n          <div class=\"form-group\">\r\n            <select class=\"form-control\" [(ngModel)]=\"teaching.type\">\r\n              <option *ngFor=\"let tt of types\" [ngValue]=\"tt\">{{tt.name}}</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label>Choose start date</label>\r\n            <div class=\"input-group\">\r\n              <input type=\"date\" placeholder=\"yyyy-mm-dd\" [ngModel]=\"teaching.startDate | date:'yyyy-MM-dd'\"\r\n                (ngModelChange)=\"teaching.startDate=$event\" class=\"form-control\" id=\"field1c\" name=\"dp1\">\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <div class=\"form-group\">\r\n            <label>Choose end date</label>\r\n            <div class=\"input-group\">\r\n              <input type=\"date\" placeholder=\"yyyy-mm-dd\" [ngModel]=\"teaching.endDate | date:'yyyy-MM-dd'\"\r\n                (ngModelChange)=\"teaching.endDate=$event\" class=\"form-control\" id=\"field2c\" name=\"dp2\">\r\n            </div>\r\n          </div>\r\n\r\n\r\n\r\n          <div class=\"modal-footer\">\r\n            <button class=\"btn btn-success\" type=\"button\" (click)=\"add()\">OK</button>\r\n            <button class=\"btn btn-danger\" type=\"button\" (click)=\"goBack()\">Cancel</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","export class Course implements CourseInterface{\r\n\tpublic id: number;\r\n\tpublic name: string;\r\n\tpublic code: string;\r\n    public espb: number;\r\n\tpublic active: boolean;\r\n\t\t\r\n\tconstructor(courseCfg: CourseInterface)\r\n\t{\t\r\n\t\tthis.id = courseCfg.id;\r\n\t\tthis.name = courseCfg.name;\r\n\t\tthis.code = courseCfg.code;\r\n        this.espb = courseCfg.espb;\r\n\t\tthis.active = courseCfg.active;\r\n\t}\r\n}\r\n\r\ninterface CourseInterface {\r\n\tid?: number;\r\n\tname: string;\r\n\tcode: string;\r\n    espb: number;\r\n\tactive: boolean;\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpResponse, HttpClient } from '@angular/common/http';\r\nimport {Observable, Subject} from 'rxjs';\r\n\r\nimport { AuthenticationServiceService } from '../../services/auth/authentication-service.service';\r\nimport { User } from '../../model/user';\r\nimport { Student } from '../../model/student';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SluzbaProfileServiceService {\r\n\r\n  private usersUrl = 'users';\r\n  private studentsUrl = 'students';\r\n\r\n  constructor(private http: HttpClient, private authService: AuthenticationServiceService) { }\r\n\r\n  private RegenerateData = new Subject<void>();\r\n\r\n  RegenerateData$ = this.RegenerateData.asObservable();\r\n\r\n  announceChange() {\r\n      this.RegenerateData.next();\r\n  }\r\n  \r\n  getUser(): Observable<HttpResponse<User>> {\r\n      let username = this.authService.getCurrentUser().username;\r\n      console.log(\"username: \" + username);\r\n      const url = `${this.usersUrl}/getUserByUsername/${username}`;\r\n      return this.http.get<User>(url, {observe: 'response'});\r\n  }\r\n\r\n  getStudent(): Observable<HttpResponse<Student>> {\r\n    let username = this.authService.getCurrentUser().username;\r\n    console.log(\"username: \" + username);\r\n    const url = `${this.studentsUrl}/getStudentByUsername/${username}`;\r\n    return this.http.get<Student>(url, {observe: 'response'});\r\n  }\r\n\r\n  editUser(user: User): Observable<HttpResponse<User>> {\r\n    const urlPut =`${this.usersUrl}/updateUser/${user.id}`;\r\n    return this.http.put<User>(urlPut, user, {observe: 'response'});\r\n  }\r\n\r\n  updatePassword(id: number, password: String): Observable<HttpResponse<User>> {\r\n    const urlPut =`${this.usersUrl}/updatePassword/${id}`;\r\n    return this.http.put<User>(urlPut, password, {observe: 'response'});\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport {switchMap} from 'rxjs/operators';\r\n\r\nimport { ExamPartTaking } from 'src/app/model/examPartTaking';\r\nimport { ExamStatus } from 'src/app/model/examStatus';\r\nimport { SluzbaExamTakingsServiceService } from '../sluzba-exam-takings/sluzba-exam-takings-service.service';\r\nimport { AuthenticationServiceService } from 'src/app/services/auth/authentication-service.service';\r\n\r\n@Component({\r\n  selector: 'app-sluzba-exam-taking-details',\r\n  templateUrl: './sluzba-exam-taking-details.component.html',\r\n  styleUrls: ['./sluzba-exam-taking-details.component.css']\r\n})\r\nexport class SluzbaExamTakingDetailsComponent implements OnInit {\r\n\r\n  statuses: ExamStatus[];\r\n  examTaking: ExamPartTaking;\r\n\r\n  constructor(private examTakingService: SluzbaExamTakingsServiceService, \r\n    private route: ActivatedRoute, private location: Location, private router: Router, private authService: AuthenticationServiceService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.examTakingService.getExamStatuses().subscribe(res =>\r\n      this.statuses = res.body);\r\n\r\n    if (this.route.snapshot.params['id']) {\r\n      // fetch exam taking if we edit the existing exam taking\r\n      this.route.params.pipe(switchMap((params: Params) =>\r\n        this.examTakingService.getExamTaking(+params['id'])))\r\n        .subscribe(res => {\r\n          this.examTaking = res.body;\r\n        });\r\n    }\r\n  }\r\n\r\n  save(): void {\r\n    this.edit();\r\n  }\r\n\r\n  private edit(): void {\r\n    this.examTakingService.updateExamTaking(this.examTaking)\r\n      .subscribe(examTaking => {\r\n        this.examTakingService.announceChange();\r\n        this.goBack();\r\n      });\r\n  }\r\n\r\n  goBack(): void {\r\n    this.location.back();\r\n  }\r\n\r\n  isLoggedIn(): boolean {\r\n    return this.authService.isLoggedIn();\r\n  }\r\n\r\n  isAdmin(): boolean {\r\n    return this.authService.isAdmin();\r\n  }\r\n\r\n}\r\n","<div class=\"main-content\" *ngIf=\"isLoggedIn()\">\r\n    <div class=\"container-fluid\">\r\n        <div *ngIf=\"examTaking.id\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                    <h2>Exam taking for student {{ examTaking.enrollment.student.user.firstName }} {{ examTaking.enrollment.student.user.lastName }} {{ examTaking.enrollment.student.cardName }}</h2>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                    <div class=\"card\" style=\"padding-left: 10px;\">\r\n                        <div class=\"form-group\">\r\n                            <label>Select status</label>\r\n                            <select class=\"form-control\" [(ngModel)]=\"examTaking.status.id\">\r\n                                <option *ngFor=\"let s of statuses\" [ngValue]=\"s.id\">{{s.name}}({{s.code}})</option>\r\n                            </select>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label for=\"field1c\" class=\"form-control-label\">Score</label>\r\n                            <input type=\"number\" [(ngModel)]=\"examTaking.score\" placeholder=\"Score\" class=\"form-control\"\r\n                                id=\"field1c\" name=\"field1\">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div *ngIf=\"isAdmin()\">\r\n            <button class=\"btn btn-success\" (click)=\"save()\">OK</button>\r\n            <button class=\"btn btn-danger\" (click)=\"goBack()\">Cancel</button>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { AuthenticationServiceService } from 'src/app/services/auth/authentication-service.service';\r\nimport { User } from 'src/app/model/user';\r\nimport { SluzbaUserServiceService } from './sluzba-user-service.service';\r\n\r\n@Component({\r\n  selector: 'app-sluzba-user',\r\n  templateUrl: './sluzba-user.component.html',\r\n  styleUrls: ['./sluzba-user.component.css']\r\n})\r\nexport class SluzbaUserComponent implements OnInit {\r\n\r\n  userForm: FormGroup;\r\n  submitted = false;\r\n\r\n  user: User = new User({ // create an empty user\r\n    username: '',\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    password: ''\r\n  });\r\n\r\n  constructor(private formBuilder: FormBuilder, private userService: SluzbaUserServiceService, private location: Location, private authService: AuthenticationServiceService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.userForm = this.formBuilder.group({\r\n      firstName: ['', Validators.required],\r\n      lastName: ['', Validators.required],\r\n      username: ['', Validators.required],\r\n      email: ['', [Validators.required, Validators.email]]\r\n    });\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get u() { return this.userForm.controls; }\r\n\r\n  save(): void {\r\n    this.add();\r\n  }\r\n\r\n  private add(): void {\r\n    this.submitted = true;\r\n\r\n    // stop here if form is invalid\r\n    if (this.userForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.user.firstName = this.userForm.get('firstName').value;\r\n    this.user.lastName = this.userForm.get('lastName').value;\r\n    this.user.username = this.userForm.get('username').value;\r\n    this.user.email = this.userForm.get('email').value;\r\n\r\n    this.userService.addUser(this.user)\r\n      .subscribe(res => {\r\n        this.userService.announceChange();\r\n        this.goBack();\r\n      });\r\n  }\r\n\r\n  goBack(): void {\r\n    this.location.back();\r\n  }\r\n\r\n  isAdmin(): boolean {\r\n    return this.authService.isAdmin();\r\n  }\r\n\r\n}\r\n","<div class=\"main-content\">\r\n    <div class=\"container-fluid\" *ngIf=\"isAdmin()\">\r\n        <div class=\"row\">\r\n            <div class=\"card\">\r\n                <div class=\"header\">\r\n                    <h4 class=\"title\">Admin</h4>\r\n                </div>\r\n                <div class=\"content\">\r\n                    <form [formGroup]=\"userForm\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label>First Name</label>\r\n                                    <input type=\"text\" placeholder=\"First name\" formControlName=\"firstName\"\r\n                                        class=\"form-control text\"\r\n                                        [ngClass]=\"{ 'is-invalid': submitted && u.firstName.errors }\" />\r\n                                    <div *ngIf=\"submitted && u.firstName.errors\"\r\n                                        class=\"invalid-feedback alert alert-danger\">\r\n                                        <div *ngIf=\"u.firstName.errors.required\">First Name is required</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label>Last Name</label>\r\n                                    <input type=\"text\" placeholder=\"Last Name\" formControlName=\"lastName\"\r\n                                        class=\"form-control text\"\r\n                                        [ngClass]=\"{ 'is-invalid': submitted && u.lastName.errors }\" />\r\n                                    <div *ngIf=\"submitted && u.lastName.errors\"\r\n                                        class=\"invalid-feedback alert alert-danger\">\r\n                                        <div *ngIf=\"u.lastName.errors.required\">Last Name is required</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label>Username</label>\r\n                                    <input type=\"text\" placeholder=\"Username\" formControlName=\"username\"\r\n                                        class=\"form-control text\"\r\n                                        [ngClass]=\"{ 'is-invalid': submitted && u.username.errors }\" />\r\n                                    <div *ngIf=\"submitted && u.username.errors\"\r\n                                        class=\"invalid-feedback alert alert-danger\">\r\n                                        <div *ngIf=\"u.username.errors.required\">Username is required</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label>Email address</label>\r\n                                    <input type=\"email\" placeholder=\"Email\" formControlName=\"email\"\r\n                                        class=\"form-control text\"\r\n                                        [ngClass]=\"{ 'is-invalid': submitted && u.email.errors }\" />\r\n                                    <div *ngIf=\"submitted && u.email.errors\"\r\n                                        class=\"invalid-feedback alert alert-danger\">\r\n                                        <div *ngIf=\"u.email.errors.required\">Email is required</div>\r\n                                        <div *ngIf=\"u.email.errors.email\">Email must be a valid email address\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"clearfix\"></div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div>\r\n            <button class=\"btn btn-success\" (click)=\"save()\">OK</button>\r\n            <button class=\"btn btn-danger\" (click)=\"goBack()\">Cancel</button>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ExamPart } from 'src/app/model/examPart';\r\nimport { ExamPartTaking } from 'src/app/model/examPartTaking';\r\nimport { AuthenticationServiceService } from 'src/app/services/auth/authentication-service.service';\r\nimport { SluzbaExamsServiceService } from '../sluzba-exams/sluzba-exams-service.service';\r\nimport { SluzbaExamTakingsServiceService } from './sluzba-exam-takings-service.service';\r\n\r\n@Component({\r\n  selector: 'app-sluzba-exam-takings',\r\n  templateUrl: './sluzba-exam-takings.component.html',\r\n  styleUrls: ['./sluzba-exam-takings.component.css']\r\n})\r\nexport class SluzbaExamTakingsComponent implements OnInit {\r\n\r\n  examPart: ExamPart;\r\n  takings: ExamPartTaking[];\r\n  selectedEnrollmentId: number;\r\n  examPartId: number;\r\n  canSignUp: Boolean;\r\n  canSignOut: Boolean;\r\n\r\n  constructor(private examTakingsService: SluzbaExamTakingsServiceService, private examService: SluzbaExamsServiceService, private route: ActivatedRoute, private router: Router, private authService: AuthenticationServiceService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.route.queryParams.subscribe(params =>\r\n      this.examService.getExamPart(params['examPartId']).subscribe(res =>\r\n        this.examPart = res.body\r\n      ));\r\n\r\n    if (this.isStudent()) {\r\n      this.route.queryParams.subscribe(params => {\r\n        this.selectedEnrollmentId = params['enrollmentId'];\r\n        this.examPartId = params['examPartId'];\r\n      });\r\n    } \r\n    this.getTakings();\r\n\r\n  }\r\n\r\n  getTakings() {\r\n    if(this.isStudent()){\r\n      this.getCanSignUp();\r\n      this.getCanSignOut();\r\n      this.route.queryParams.subscribe(params =>\r\n        this.examTakingsService.getExamTakingsForStudent(params['examPartId'], params['enrollmentId']).subscribe(res =>\r\n          this.takings = res.body\r\n        ));\r\n    }else{\r\n      this.route.queryParams.subscribe(params =>\r\n        this.examTakingsService.getExamTakings(params['examPartId']).subscribe(res =>\r\n          this.takings = res.body\r\n        ));\r\n    }\r\n  }\r\n\r\n  getCanSignUp() {\r\n    this.examTakingsService.canSignUpExam(this.examPartId, this.selectedEnrollmentId).subscribe(res =>\r\n      this.canSignUp = res.body);\r\n  }\r\n\r\n  getCanSignOut() {\r\n    this.examTakingsService.canSignOutExam(this.examPartId, this.selectedEnrollmentId).subscribe(res =>\r\n      this.canSignOut = res.body);\r\n  }\r\n\r\n  signUp(){\r\n    if(confirm(\"Registering for this exam will reduce 200RSD from your account. Are you sure?\")){\r\n      this.examTakingsService.signUp(this.examPart.id, this.selectedEnrollmentId).subscribe(\r\n        () => this.getTakings()\r\n      );\r\n      }\r\n  }\r\n\r\n  signOut(){\r\n    if(confirm(\"You wont be registered anymore for this exam. Are you sure?\")){\r\n      this.examTakingsService.signOut(this.examPart.id, this.selectedEnrollmentId).subscribe(\r\n        () => this.getTakings()\r\n      );\r\n      }\r\n  }\r\n\r\n  gotoEdit(taking: ExamPartTaking): void {\r\n    this.router.navigate(['/editTaking', taking.id]);\r\n  }\r\n\r\n  isLoggedIn(): boolean {\r\n    return this.authService.isLoggedIn();\r\n  }\r\n\r\n  isAdmin(): boolean {\r\n    return this.authService.isAdmin();\r\n  }\r\n\r\n  isTeacher(): boolean {\r\n    return this.authService.isTeacher();\r\n  }\r\n\r\n  isStudent(): boolean {\r\n    return this.authService.isStudent();\r\n  }\r\n\r\n}\r\n","<div class=\"main-content\">\r\n    <div class=\"container-fluid\">\r\n        <div>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-9\">\r\n                    <h3>Exam {{ examPart.course.name }} : {{ examPart.type.name }} on {{ examPart.date | date:\r\n                        'dd.MM.yyyy'}} in {{\r\n                        examPart.location}}</h3>\r\n                </div>\r\n                <div *ngIf=\"isStudent()\" class=\"col-md-3\" style=\"float: right; padding-top: 15px;\">\r\n                    <div *ngIf=\"canSignUp\">\r\n                        <button style=\"float: right;\" type=\"button\" class=\"btn btn-primary\" aria-label=\"Sign up\" (click)=\"signUp()\">\r\n                            <span>Sign Up</span>\r\n                        </button>\r\n                    </div>\r\n                    <div *ngIf=\"canSignOut\">\r\n                        <button style=\"float: right;\" type=\"button\" class=\"btn btn-danger\" aria-label=\"Sign out\"\r\n                            (click)=\"signOut()\">\r\n                            <span>Sign Out</span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n           \r\n            <div class=\"row\">\r\n                <div class=\"col-md-12 mx-auto\">\r\n                    <h4>Takings</h4>\r\n                    <div class=\"md-form\">\r\n                        <input type=\"text\" class=\"form-control inputSearch\" placeholder=\"Search\" autocomplete=\"off\"\r\n                            id=\"search\" />\r\n                        <label></label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                    <div class=\"card\">\r\n                        <div *ngIf=\"isLoggedIn()\" class=\"content table-responsive table-full-width\"\r\n                            style=\"padding-top: 2%;\">\r\n                            <table class=\"table table-hover\" style=\"text-align: center;\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope=\"col\">#</th>\r\n                                        <th scope=\"col\">Student</th>\r\n                                        <th scope=\"col\">Score</th>\r\n                                        <th scope=\"col\">Status</th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr *ngFor=\"let taking of takings;let k = index\">\r\n                                        <th scope=\"row\">{{ k + 1 }}</th>\r\n                                        <td>{{ taking.enrollment.student.cardName }} {{\r\n                                            taking.enrollment.student.user.firstName }} {{\r\n                                            taking.enrollment.student.user.lastName }}</td>\r\n                                        <td>{{ taking.score }} / {{examPart.points}}</td>\r\n                                        <td>{{ taking.status.name }}</td>\r\n                                        <td *ngIf=\"isAdmin() || isTeacher()\">\r\n                                            <button type=\"button\" class=\"btn btn-primary\" aria-label=\"Edit\"\r\n                                                (click)=\"gotoEdit(taking)\">\r\n                                                <span class=\"fa fa-edit\" aria-hidden=\"true\"></span>\r\n                                            </button>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { HttpResponse, HttpClient, HttpEvent, HttpRequest } from '@angular/common/http';\r\nimport {Observable, Subject} from 'rxjs';\r\n\r\nimport { AuthenticationServiceService } from '../../services/auth/authentication-service.service';\r\nimport { DocumentType } from 'src/app/model/document-type';\r\nimport { Document } from 'src/app/model/document';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SluzbaDocumentDetailsServiceService {\r\n\r\n  private documentUrl = 'documents';\r\n  private documentTypesUrl = 'documentTypes';\r\n\r\n  constructor(private http: HttpClient, private authService: AuthenticationServiceService) { }\r\n\r\n  private RegenerateData = new Subject<void>();\r\n\r\n  RegenerateData$ = this.RegenerateData.asObservable();\r\n\r\n  announceChange() {\r\n      this.RegenerateData.next();\r\n  }\r\n\r\n  getDocument(id: number): Observable<HttpResponse<Document>> {\r\n    const url = `${this.documentUrl}/getDocumentById/${id}`;\r\n    return this.http.get<Document>(url, {observe: 'response'});\r\n  }\r\n\r\n  getDocumentTypes(): Observable<HttpResponse<DocumentType[]>> {\r\n    const url = `${this.documentTypesUrl}/getAllDocumentTypes`;\r\n    return this.http.get<DocumentType[]>(url, {observe: 'response'});\r\n  }\r\n\r\n  upload(file: File, studentId: number, typeId: number): Observable<HttpResponse<Document>> {\r\n    const formData: FormData = new FormData();\r\n    formData.append('file', file);\r\n\r\n    const urlPost = `${this.documentUrl}/upload/${studentId}/${typeId}`;\r\n    return this.http.post<Document>(urlPost, formData, {observe: 'response'});\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-sluzba-home',\r\n  templateUrl: './sluzba-home.component.html',\r\n  styleUrls: ['./sluzba-home.component.css']\r\n})\r\nexport class SluzbaHomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>Welcome</p>","import { Injectable } from '@angular/core';\r\nimport { HttpResponse, HttpClient } from '@angular/common/http';\r\nimport {Observable, Subject} from 'rxjs';\r\n\r\nimport { AuthenticationServiceService } from '../../services/auth/authentication-service.service';\r\nimport { Student } from '../../model/student';\r\nimport { Document } from 'src/app/model/document';\r\nimport { Payment } from 'src/app/model/payment';\r\nimport { Enrollment } from 'src/app/model/enrollment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SluzbaStudentsServiceService {\r\n\r\n  private studentsUrl = 'students';\r\n  private enrollmentsUrl = 'enrollments';\r\n  private documentsUrl = 'documents';\r\n  private paymentsUrl = 'payments';\r\n\r\n  constructor(private http: HttpClient, private authService: AuthenticationServiceService) { }\r\n\r\n  private RegenerateData = new Subject<void>();\r\n\r\n  RegenerateData$ = this.RegenerateData.asObservable();\r\n\r\n  announceChange() {\r\n      this.RegenerateData.next();\r\n  }\r\n\r\n  getStudentsList(): Observable<HttpResponse<Student[]>> {\r\n    const url = `${this.studentsUrl}/getAllStudentsList`;\r\n    return this.http.get<Student[]>(url, {observe: 'response'});\r\n}\r\n  \r\n  getStudents(params: any): Observable<any>{\r\n      const url = `${this.studentsUrl}/getAllStudents`;\r\n      return this.http.get<any>(  url, { params });\r\n  }\r\n\r\n  getStudent(id: number): Observable<HttpResponse<Student>> {\r\n    const url = `${this.studentsUrl}/getStudentById/${id}`;\r\n    return this.http.get<Student>(url, {observe: 'response'});\r\n  }\r\n\r\n  addStudent(student: Student): Observable<HttpResponse<Student>> {\r\n    const urlPost = `${this.studentsUrl}/addStudent`;\r\n    return this.http.post<Student>(urlPost, student, {observe: 'response'});\r\n  } \r\n\r\n  editStudent(student: Student): Observable<HttpResponse<Student>> {\r\n    const urlPut =`${this.studentsUrl}/updateStudent/${student.id}`;\r\n    return this.http.put<Student>(urlPut, student, {observe: 'response'});\r\n  }\r\n\r\n  deleteStudent(studentId: number): Observable<HttpResponse<any>> {\r\n    const url = `${this.studentsUrl}/deleteStudent/${studentId}`;\r\n    return this.http.put<any>(url, {observe: 'response'});\r\n  }\r\n\r\n  getStudentDocuments(studentId: number): Observable<HttpResponse<Document[]>> {\r\n    const url = `${this.documentsUrl}/getAllDocumentsForStudent/${studentId}`;\r\n    return this.http.get<Document[]>(url, {observe: 'response'});\r\n  }\r\n\r\n  getAccountPayments(accountId: number): Observable<HttpResponse<Payment[]>> {\r\n    const url = `${this.paymentsUrl}/getAllPaymentsForAccount/${accountId}`;\r\n    return this.http.get<Payment[]>(url, {observe: 'response'});\r\n  }\r\n\r\n  getStudentEnrollments(studentId: number): Observable<HttpResponse<Enrollment[]>> {\r\n    const url = `${this.enrollmentsUrl}/getAllEnrollmentsForStudent/${studentId}`;\r\n    return this.http.get<Enrollment[]>(url, {observe: 'response'});\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpResponse, HttpClient } from '@angular/common/http';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { Enrollment } from 'src/app/model/enrollment';\r\nimport { AuthenticationServiceService } from 'src/app/services/auth/authentication-service.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SluzbaEnrollmentsServiceService {\r\n\r\n  private enrollmentsUrl = 'enrollments';\r\n\r\n  constructor(private http: HttpClient, private authService: AuthenticationServiceService) { }\r\n\r\n  private RegenerateData = new Subject<void>();\r\n\r\n  RegenerateData$ = this.RegenerateData.asObservable();\r\n\r\n  announceChange() {\r\n    this.RegenerateData.next();\r\n  }\r\n\r\n  getEnrollments(): Observable<HttpResponse<Enrollment[]>> {\r\n    let username = this.authService.getCurrentUser().username;\r\n    console.log(\"username: \" + username);\r\n    const url = `${this.enrollmentsUrl}/getAllEnrollmentsForUser/${username}`;\r\n    return this.http.get<Enrollment[]>(url, { observe: 'response' });\r\n  }\r\n\r\n  addEnrollment(enrollment: Enrollment, courseId: number): Observable<HttpResponse<Enrollment>> {\r\n    const urlPost = `${this.enrollmentsUrl}/addEnrollment/${courseId}`;\r\n    return this.http.post<Enrollment>(urlPost, enrollment, { observe: 'response' });\r\n  }\r\n\r\n  deleteEnrollment(enrollmentId: number): Observable<HttpResponse<any>> {\r\n    const url = `${this.enrollmentsUrl}/deleteEnrollment/${enrollmentId}`;\r\n    return this.http.put<any>(url, { observe: 'response' });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor } from '@angular/common/http';\r\nimport { AuthenticationServiceService } from './authentication-service.service';\r\nimport { HttpRequest } from '@angular/common/http';\r\nimport { HttpHandler } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpEvent } from '@angular/common/http';\r\nimport { Injector } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TokenInterceptorService implements HttpInterceptor {\r\n\r\n  constructor(private inj: Injector) { }\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    let authenticationService:AuthenticationServiceService = this.inj.get(AuthenticationServiceService);\r\n    request = request.clone({\r\n      setHeaders: {\r\n        'Authorization': `${authenticationService.getToken()}`\r\n      }\r\n    });\r\n\r\n    return next.handle(request);\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { Router } from '@angular/router';\r\nimport { AuthenticationServiceService } from '../../services/auth/authentication-service.service';\r\n\r\n@Component({\r\n  selector: 'app-sluzba-login',\r\n  templateUrl: './sluzba-login.component.html',\r\n  styleUrls: ['./sluzba-login.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class SluzbaLoginComponent implements OnInit {\r\n\r\n  public user;\r\n\r\n  public wrongUsernameOrPass:boolean;\r\n\r\n  constructor(private authenticationService:AuthenticationServiceService,\r\n              private router: Router) {\r\n    this.user = {};\r\n    this.wrongUsernameOrPass = false;\r\n   }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  login():void{\r\n    this.authenticationService.login(this.user.username, this.user.password).subscribe(\r\n      (loggedIn:boolean) => {\r\n        if(loggedIn){\r\n          this.router.navigate(['/dashboard']).then(() => {\r\n            window.location.reload();\r\n          });;\r\n        }\r\n      }\r\n    ,\r\n    (err:Error) => {\r\n      if(err.toString()==='Ilegal login'){\r\n        this.wrongUsernameOrPass = true;\r\n        console.log(err);\r\n      }\r\n      else{\r\n        Observable.throw(err);\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<!-- <div id=\"loginContainer\" class=\"container\" style=\"width: 100%;\">\r\n<form class=\"text-center border border-light p-5\" >\r\n\r\n    <p>Login</p>\r\n  \r\n    <input type=\"text\" id=\"username\" class=\"form-control mb-4 cs-12\" name=\"username\"  placeholder=\"Username\">\r\n  \r\n    <input type=\"password\" id=\"inputPassword\" class=\"form-control mb-4 s-12\" name=\"password\">\r\n  \r\n    <div class=\"row\" style=\"margin: auto; max-width: 100%;\">\r\n        <div class=\"col-7\" style=\"margin: auto; height: max-content;\"></div>\r\n        <div id=\"forgot\" class=\"col-5\" style=\"margin: auto;\">\r\n            <div  style=\"margin: auto;\">\r\n                <a href=\"\" >Forgot password ?</a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\" style=\"margin: auto; max-width: 100%;\">\r\n        <div class=\"col-12\" style=\"margin: auto; height: max-content;\">\r\n            <button class=\"waves-light btn-default btn\" type=\"submit\" color=\"default\">Sign in</button>\r\n        </div>\r\n    </div> \r\n  \r\n  \r\n\r\n \r\n  </form>\r\n  <div *ngIf=wrongUsernameOrPass class=\"alert alert-warning box-msg\" role=\"alert\">\r\n    Wrong username or password.\r\n  </div>\r\n</div> \r\n -->\r\n\r\n<!--  <div class=\"login\">\r\n    <div class=\"account-login\">\r\n       <form class=\"login-form\" (ngSubmit)=\"login()\">\r\n          <div class=\"form-group\">\r\n             <input type=\"text\" class=\"form-control\" name=\"username\"  placeholder=\"Username\" [(ngModel)]=\"user.username\"   required autofocus>\r\n          </div>\r\n          <div class=\"form-group\">\r\n             <input type=\"password\" name=\"password\" placeholder=\"Password\"  [(ngModel)]=\"user.password\" placeholder=\"Password\"  required  class=\"form-control\">\r\n          </div>\r\n          <div class=\"remember\">\r\n             <a href=\"#\" class=\"pull-right\">Forgot Password?</a>\r\n          </div>\r\n          <button class=\"btn\">Login</button>\r\n       </form>\r\n       <div *ngIf=wrongUsernameOrPass class=\"alert alert-warning box-msg\" role=\"alert\">\r\n        Wrong username or password.\r\n      </div>\r\n    </div>\r\n</div> --> \r\n\r\n <div class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-3\"></div>\r\n    <div class=\"col-md-6\">\r\n      <h1 class=\"text-center\">Login</h1>\r\n      <form  (ngSubmit)=\"login()\">\r\n      <div class=\"input-group\">\r\n        <input type=\"text\" class=\"form-control\" name=\"username\"  placeholder=\"Username\" [(ngModel)]=\"user.username\"   required autofocus>\r\n        <span class=\"input-group-addon\"><span class=\"glyphicon glyphicon-user\"></span></span>\r\n      </div>\r\n      <div class=\"input-group\">\r\n        <input type=\"password\" class=\"form-control\" name=\"password\" placeholder=\"Password\"  [(ngModel)]=\"user.password\" placeholder=\"Password\"  required />\r\n        <span class=\"input-group-addon\"><span class=\"glyphicon glyphicon-lock\"></span></span>\r\n      </div>\r\n      <p class=\"text-center\">Are you forgot your password? <a href=\"#\">Click here</a></p>\r\n      <button class=\"btn btn-default\">Login</button>\r\n    </form>\r\n    <div *ngIf=wrongUsernameOrPass class=\"alert alert-warning box-msg\" role=\"alert\">\r\n      Wrong username or password.\r\n    </div>\r\n    <div class=\"col-md-3\"></div>\r\n  </div>\r\n</div> ","\r\nexport class ExamPeriod implements ExamPeriodInterface{\r\n\tpublic id: number;\r\n\tpublic startDate: Date;\r\n\tpublic endDate: Date;\r\n\tpublic name: String;\r\n\tpublic active: boolean;\r\n\t\t\r\n\tconstructor(examPeriodCfg:ExamPeriodInterface)\r\n\t{\t\r\n\t\tthis.id = examPeriodCfg.id;\r\n\t\tthis.startDate = examPeriodCfg.startDate;\r\n\t\tthis.endDate = examPeriodCfg.endDate;\t\r\n\t\tthis.name = examPeriodCfg.name;\r\n\t\tthis.active = examPeriodCfg.active;\r\n\t}\r\n}\r\n\r\ninterface ExamPeriodInterface{\r\n\tid?: number;\r\n\tstartDate: Date;\r\n\tendDate: Date;\r\n    name: String;\r\n\tactive: boolean;\r\n}","import { Course } from \"./course\";\r\nimport { Teacher } from \"./teacher\";\r\nimport { TeachingType } from \"./teaching-type\";\r\n\r\nexport class Teaching implements TeachingInterface{\r\n\tpublic id: number;\r\n\tpublic startDate: Date;\r\n\tpublic endDate: Date;\r\n\tpublic teacher: Teacher;\r\n    public course: Course;\r\n    public type: TeachingType;\r\n\t\t\r\n\tconstructor(teachingCfg:TeachingInterface)\r\n\t{\t\r\n\t\tthis.id = teachingCfg.id;\r\n\t\tthis.startDate = teachingCfg.startDate;\r\n\t\tthis.endDate = teachingCfg.endDate;\t\r\n\t\tthis.teacher = teachingCfg.teacher;\r\n        this.course = teachingCfg.course;\r\n        this.type = teachingCfg.type;\r\n\t}\r\n}\r\n\r\ninterface TeachingInterface{\r\n\tid?: number;\r\n\tstartDate: Date;\r\n\tendDate: Date;\r\n    teacher: Teacher;\r\n    course: Course;\r\n    type: TeachingType;\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpResponse, HttpClient } from '@angular/common/http';\r\nimport {Observable, Subject} from 'rxjs';\r\n\r\nimport { AuthenticationServiceService } from '../../services/auth/authentication-service.service';\r\nimport { Course } from '../../model/course';\r\nimport { Enrollment } from 'src/app/model/enrollment';\r\nimport { Teaching } from 'src/app/model/teaching';\r\n\r\n@Injectable()\r\nexport class SluzbaCoursesServiceService {\r\n\r\n  private coursesUrl = 'courses';\r\n  private enrollmentsUrl = 'enrollments';\r\n  private teachingsUrl = 'teachings';\r\n\r\n  constructor(private http: HttpClient, private authService: AuthenticationServiceService) { }\r\n\r\n  private RegenerateData = new Subject<void>();\r\n\r\n  RegenerateData$ = this.RegenerateData.asObservable();\r\n\r\n  announceChange() {\r\n      this.RegenerateData.next();\r\n  }\r\n  \r\n  getCourses(): Observable<HttpResponse<Course[]>> {\r\n      let username = this.authService.getCurrentUser().username;\r\n      console.log(\"username: \" + username);\r\n      const url = `${this.coursesUrl}/getAllCoursesForUser/${username}`;\r\n      return this.http.get<Course[]>(url, {observe: 'response'});\r\n  }\r\n\r\n  getCourse(id: number): Observable<HttpResponse<Course>> {\r\n    const url = `${this.coursesUrl}/getCourseById/${id}`;\r\n    return this.http.get<Course>(url, {observe: 'response'});\r\n  }\r\n\r\n  addCourse(course: Course): Observable<HttpResponse<Course>> {\r\n    const urlPost = `${this.coursesUrl}/addCourse`;\r\n    return this.http.post<Course>(urlPost, course, {observe: 'response'});\r\n  } \r\n\r\n  editCourse(course: Course): Observable<HttpResponse<Course>> {\r\n    const urlPut =`${this.coursesUrl}/updateCourse/${course.id}`;\r\n    return this.http.put<Course>(urlPut, course, {observe: 'response'});\r\n  }\r\n\r\n  deleteCourse(courseId: number): Observable<HttpResponse<any>> {\r\n    const url = `${this.coursesUrl}/deleteCourse/${courseId}`;\r\n    return this.http.put<any>(url, {observe: 'response'});\r\n  }\r\n\r\n  getCourseEnrollments(courseId: number): Observable<HttpResponse<Enrollment[]>> {\r\n    const url = `${this.enrollmentsUrl}/getAllEnrollmentsForCourse/${courseId}`;\r\n    return this.http.get<Enrollment[]>(url, {observe: 'response'});\r\n  }\r\n\r\n  getCourseTeachings(courseId: number): Observable<HttpResponse<Teaching[]>> {\r\n    const url = `${this.teachingsUrl}/getAllTeachingsForCourse/${courseId}`;\r\n    return this.http.get<Teaching[]>(url, {observe: 'response'});\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpResponse, HttpClient } from '@angular/common/http';\r\nimport {Observable, Subject} from 'rxjs';\r\nimport { Teaching } from 'src/app/model/teaching';\r\nimport { TeachingType } from 'src/app/model/teaching-type';\r\nimport { AuthenticationServiceService } from 'src/app/services/auth/authentication-service.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SluzbaTeachingsServiceService {\r\n\r\n  private teachingsUrl = 'teachings';\r\n  private teachingTypesUrl = 'teachingTypes';\r\n\r\n  constructor(private http: HttpClient, private authService: AuthenticationServiceService) { }\r\n\r\n  private RegenerateData = new Subject<void>();\r\n\r\n  RegenerateData$ = this.RegenerateData.asObservable();\r\n\r\n  announceChange() {\r\n      this.RegenerateData.next();\r\n  }\r\n\r\n  getTeachings(): Observable<HttpResponse<Teaching[]>> {\r\n    let username = this.authService.getCurrentUser().username;\r\n    console.log(\"username: \" + username);\r\n    const url = `${this.teachingsUrl}/getAllTeachingsForUser/${username}`;\r\n    return this.http.get<Teaching[]>(url, { observe: 'response' });\r\n  }\r\n  \r\n  addTeaching(teaching: Teaching, courseId: number): Observable<HttpResponse<Teaching>> {\r\n    const urlPost = `${this.teachingsUrl}/addTeaching/${courseId}`;\r\n    return this.http.post<Teaching>(urlPost, teaching, {observe: 'response'});\r\n  }\r\n  \r\n  deleteTeaching(teachingId: number): Observable<HttpResponse<any>> {\r\n      const url = `${this.teachingsUrl}/deleteTeaching/${teachingId}`;\r\n      return this.http.put<any>(url, {observe: 'response'});\r\n  }\r\n\r\n  getTeachingTypes(): Observable<HttpResponse<TeachingType[]>> {\r\n    const url = `${this.teachingTypesUrl}/getAllTeachingTypes`;\r\n    return this.http.get<TeachingType[]>(url, {observe: 'response'});\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpResponse, HttpClient } from '@angular/common/http';\r\nimport {Observable, Subject} from 'rxjs';\r\n\r\nimport { AuthenticationServiceService } from '../../services/auth/authentication-service.service';\r\nimport { User } from '../../model/user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SluzbaNavbarServiceService {\r\n\r\n  private usersUrl = 'users';\r\n\r\n  constructor(private http: HttpClient, private authService: AuthenticationServiceService) { }\r\n\r\n  private RegenerateData = new Subject<void>();\r\n\r\n  RegenerateData$ = this.RegenerateData.asObservable();\r\n\r\n  announceChange() {\r\n      this.RegenerateData.next();\r\n  }\r\n  \r\n  getUser(): Observable<HttpResponse<User>> {\r\n      let username = this.authService.getCurrentUser().username;\r\n      console.log(\"username: \" + username);\r\n      const url = `${this.usersUrl}/getUserByUsername/${username}`;\r\n      return this.http.get<User>(url, {observe: 'response'});\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\n\r\nimport {switchMap} from 'rxjs/operators';\r\nimport { SluzbaCoursesServiceService } from '../sluzba-courses/sluzba-courses-service.service';\r\nimport { Course } from 'src/app/model/course';\r\nimport { Enrollment } from 'src/app/model/enrollment';\r\nimport { SluzbaEnrollmentsServiceService } from '../sluzba-enrollments/sluzba-enrollments-service.service';\r\nimport { AuthenticationServiceService } from 'src/app/services/auth/authentication-service.service';\r\nimport { Teaching } from 'src/app/model/teaching';\r\nimport { SluzbaTeachingsServiceService } from '../sluzba-teachings/sluzba-teachings-service.service';\r\n\r\n@Component({\r\n  selector: 'app-sluzba-course-details',\r\n  templateUrl: './sluzba-course-details.component.html',\r\n  styleUrls: ['./sluzba-course-details.component.css']\r\n})\r\nexport class SluzbaCourseDetailsComponent implements OnInit {\r\n\r\n  course: Course = new Course({ // if we add a new course, create an empty course\r\n    name: '',\r\n    code: '',\r\n    espb: 0,\r\n    active: true\r\n  });\r\n\r\n  enrollments: Enrollment[];\r\n  teachings: Teaching[];\r\n\r\n  mode: string = 'ADD';\r\n\r\n  constructor(private courseService: SluzbaCoursesServiceService, private enrollmentService: SluzbaEnrollmentsServiceService, private teachingService: SluzbaTeachingsServiceService,\r\n    private route: ActivatedRoute, private location: Location, private router: Router, private authService: AuthenticationServiceService) {\r\n    enrollmentService.RegenerateData$.subscribe(() =>\r\n      this.getEnrollments()\r\n    );\r\n    teachingService.RegenerateData$.subscribe(() =>\r\n      this.getTeachings()\r\n    );\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.route.snapshot.params['id']) {\r\n      this.mode = 'EDIT';\r\n      // fetch course if we edit the existing course\r\n      this.route.params.pipe(switchMap((params: Params) =>\r\n          this.courseService.getCourse(+params['id'])))\r\n        .subscribe(res => {\r\n          this.course = res.body;\r\n          this.getEnrollments();\r\n          this.getTeachings();\r\n        });\r\n    }\r\n  }\r\n\r\n  private getEnrollments(): void {\r\n    this.courseService.getCourseEnrollments(this.course.id).subscribe(res =>\r\n      this.enrollments = res.body);\r\n  }\r\n\r\n  private getTeachings(): void {\r\n    this.courseService.getCourseTeachings(this.course.id).subscribe(res =>\r\n      this.teachings = res.body);\r\n  }\r\n\r\n\r\n  save(): void {\r\n    this.mode == 'ADD' ? this.add() : this.edit();\r\n  }\r\n\r\n  private add(): void {\r\n    this.courseService.addCourse(this.course)\r\n      .subscribe(res => {\r\n        this.courseService.announceChange();\r\n        this.goBack();\r\n      });\r\n  }\r\n\r\n  private edit(): void {\r\n    this.courseService.editCourse(this.course)\r\n      .subscribe(course => {\r\n        this.courseService.announceChange();\r\n        this.goBack();\r\n      });\r\n  }\r\n\r\n  goBack(): void {\r\n    this.location.back();\r\n  }\r\n\r\n  \r\n  isAdmin():boolean{\r\n    return this.authService.isAdmin();\r\n  }\r\n\r\n  gotoAddEnrollment(): void {\r\n    this.router.navigate(['/addEnrollment'], { queryParams: { courseId: this.course.id } });\r\n  }\r\n\r\n  deleteEnrollment(enrollmentId: number, studentName: string, studentLastName: string, courseName: string): void {\r\n    if(confirm(\"Are you sure to delete student \" + studentName + \" \" + studentLastName + \" from course \" + courseName+ \"?\" )){\r\n    this.enrollmentService.deleteEnrollment(enrollmentId).subscribe(\r\n      () => this.getEnrollments()\r\n    );\r\n    }\r\n  }\r\n\r\n  gotoAddTeaching(): void {\r\n    this.router.navigate(['/addTeaching'], { queryParams: { courseId: this.course.id } });\r\n  }\r\n\r\n  deleteTeaching(teachingId: number, teacherName: String, teacherLastName: String, courseName: string): void {\r\n    if(confirm(\"Are you sure to delete teacher \" + teacherName + \" \" + teacherLastName + \" from course\" + courseName + \"?\")){\r\n    this.teachingService.deleteTeaching(teachingId).subscribe(\r\n      () => this.getTeachings()\r\n    );\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n","<div class=\"main-content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <div class=\"card\" style=\"padding-left: 10px;\">\r\n          <h3>Course</h3>\r\n          <form>\r\n            <div class=\"form-group\">\r\n              <label for=\"field1c\" class=\"form-control-label\">Name</label>\r\n              <input type=\"text\" [(ngModel)]=\"course.name\" placeholder=\"Name\" class=\"form-control\" id=\"field1c\"\r\n                name=\"field1\">\r\n              <label for=\"field3c\" class=\"form-control-label\">Code</label>\r\n              <input type=\"text\" [(ngModel)]=\"course.code\" placeholder=\"Code\" class=\"form-control\" id=\"field3c\"\r\n                name=\"field3\">\r\n              <label for=\"field2c\" class=\"form-control-label\">ESPB</label>\r\n              <input type=\"number\" [(ngModel)]=\"course.espb\" placeholder=\"ESPB\" class=\"form-control\" id=\"field2c\"\r\n                name=\"field2\">\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div *ngIf=\"course.id\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n          <div class=\"card\" style=\"padding-left: 10px;\">\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6 col-xs-6\" >\r\n                <h3>Teachers</h3>\r\n              </div>\r\n              <div class=\"col-md-6 col-xs-6\"  style=\"float: right; padding-top: 15px;\">\r\n                <button style=\"float: right;\" type=\"button\" class=\"btn btn-primary\" aria-label=\"Add\" (click)=\"gotoAddTeaching()\">\r\n                  <span class=\"fa fa-plus\" aria-hidden=\"true\"></span>\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-12 mx-auto\">\r\n                <div class=\"md-form\">\r\n                  <input type=\"text\" class=\"form-control inputSearch\" placeholder=\"Search\" autocomplete=\"off\"\r\n                    id=\"search\" />\r\n                  <label></label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"content table-responsive table-full-width\" style=\"padding-top: 2%;\">\r\n              <table class=\"table table-bordered\">\r\n                <tr *ngFor=\"let teaching of teachings\">\r\n                  <td>\r\n                    {{teaching.type.name}} {{teaching.teacher.user.firstName}} {{teaching.teacher.user.lastName}}\r\n                    [Since {{teaching.startDate | date: 'dd.MM.yyyy'}} until {{teaching.endDate | date: 'dd.MM.yyyy'}}]\r\n                  </td>\r\n                  <td style=\"float: right\">\r\n                    <button type=\"button\" class=\"btn btn-danger right\" aria-label=\"Delete\"\r\n                      (click)=\"deleteTeaching(teaching.id,teaching.teacher.user.firstName,teaching.teacher.user.lastName ,course.name)\">\r\n                      <span class=\"fa fa-trash\" aria-hidden=\"true\"></span>\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-12\">\r\n          <div class=\"card\" style=\"padding-left: 10px;\">\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6 col-xs-6\">\r\n                <h3>Students</h3>\r\n              </div>\r\n              <div class=\"col-md-6 col-xs-6\" style=\"float: right; padding-top: 15px;\">\r\n                <button style=\"float: right;\" type=\"button\" class=\"btn btn-primary\" aria-label=\"Add\" (click)=\"gotoAddEnrollment()\">\r\n                  <span class=\"fa fa-plus\" aria-hidden=\"true\"></span>\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-12 mx-auto\">\r\n                <div class=\"md-form\">\r\n                  <input type=\"text\" class=\"form-control inputSearch\" placeholder=\"Search\" autocomplete=\"off\"\r\n                    id=\"search\" />\r\n                  <label></label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"content table-responsive table-full-width\" style=\"padding-top: 2%;\">\r\n              <table class=\"table table-bordered\">\r\n                <tr *ngFor=\"let enrollment of enrollments\">\r\n                  <td>\r\n                    {{enrollment.student.user.firstName}} {{enrollment.student.user.lastName}}\r\n                    {{enrollment.student.cardName}}\r\n                    [Since {{enrollment.startDate | date: 'dd.MM.yyyy'}} until {{enrollment.endDate | date:\r\n                    'dd.MM.yyyy'}}]\r\n                  </td>\r\n                  <td style=\"float: right\">\r\n                    <button type=\"button\" class=\"btn btn-danger right\" aria-label=\"Delete\"\r\n                      (click)=\"deleteEnrollment(enrollment.id,enrollment.student.user.firstName,enrollment.student.user.lastName ,course.name)\">\r\n                      <span class=\"fa fa-trash\" aria-hidden=\"true\"></span>\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div *ngIf=\"isAdmin()\">\r\n      <button class=\"btn btn-success\" (click)=\"save()\">OK</button>\r\n      <button class=\"btn btn-danger\" (click)=\"goBack()\">Cancel</button>\r\n    </div>\r\n  </div>\r\n</div>","import { AuthenticationServiceService } from './services/auth/authentication-service.service';\r\nimport { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { Location, LocationStrategy, PathLocationStrategy, PopStateEvent } from '@angular/common';\r\nimport 'rxjs/add/operator/filter';\r\nimport { Router, NavigationEnd, NavigationStart } from '@angular/router';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport PerfectScrollbar from 'perfect-scrollbar';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit{\r\n  title = 'angularApp';\r\n  private _router: Subscription;\r\n  private lastPoppedUrl: string;\r\n  private yScrollStack: number[] = [];\r\n\r\n  constructor(public location: Location, private authService: AuthenticationServiceService,\r\n    private router: Router){\r\n\r\n  }\r\n  \r\n  ngOnInit() {\r\n    console.log(this.router)\r\n      // const isWindows = navigator.platform.indexOf('Win') > -1 ? true : false;\r\n\r\n      // if (isWindows) {\r\n      //     // if we are on windows OS we activate the perfectScrollbar function\r\n      //     document.getElementsByTagName('body')[0].classList.add('perfect-scrollbar-on');\r\n      // } else {\r\n      //     document.getElementsByTagName('body')[0].classList.remove('perfect-scrollbar-off');\r\n      // }\r\n      // const elemMainPanel = <HTMLElement>document.querySelector('.main-panel');\r\n      // const elemSidebar = <HTMLElement>document.querySelector('.sidebar .sidebar-wrapper');\r\n\r\n      // this.location.subscribe((ev:PopStateEvent) => {\r\n      //     this.lastPoppedUrl = ev.url;\r\n      // });\r\n      //  this.router.events.subscribe((event:any) => {\r\n      //     if (event instanceof NavigationStart) {\r\n      //        if (event.url != this.lastPoppedUrl)\r\n      //            this.yScrollStack.push(window.scrollY);\r\n      //    } else if (event instanceof NavigationEnd) {\r\n      //        if (event.url == this.lastPoppedUrl) {\r\n      //            this.lastPoppedUrl = undefined;\r\n      //            window.scrollTo(0, this.yScrollStack.pop());\r\n      //        } else\r\n      //            window.scrollTo(0, 0);\r\n      //    }\r\n      // });\r\n      // this._router = this.router.events.filter(event => event instanceof NavigationEnd).subscribe((event: NavigationEnd) => {\r\n      //      elemMainPanel.scrollTop = 0;\r\n      //      elemSidebar.scrollTop = 0;\r\n      // });\r\n      // if (window.matchMedia(`(min-width: 960px)`).matches && !this.isMac()) {\r\n      //     let ps = new PerfectScrollbar(elemMainPanel);\r\n      //     ps = new PerfectScrollbar(elemSidebar);\r\n      // }\r\n  }\r\n  // ngAfterViewInit() {\r\n  //     this.runOnRouteChange();\r\n  // }\r\n  // runOnRouteChange(): void {\r\n  //   if (window.matchMedia(`(min-width: 960px)`).matches && !this.isMac()) {\r\n  //     const elemMainPanel = <HTMLElement>document.querySelector('.main-panel');\r\n  //     elemMainPanel.scrollTop = 0;\r\n  //     const ps = new PerfectScrollbar(elemMainPanel);\r\n  //     ps.update();\r\n  //   }\r\n  // }\r\n  // isMac(): boolean {\r\n  //     let bool = false;\r\n  //     if (navigator.platform.toUpperCase().indexOf('MAC') >= 0 || navigator.platform.toUpperCase().indexOf('IPAD') >= 0) {\r\n  //         bool = true;\r\n  //     }\r\n  //     return bool;\r\n  // }\r\n  \r\n  isLoggedIn():boolean{\r\n    return this.authService.isLoggedIn();\r\n  }\r\n  \r\n}\r\n","<div class=\"container\">\r\n  <div class=\"wrapper\">\r\n    <div class=\"sidebar\" *ngIf=\"isLoggedIn()\"  data-color=\"azzure\" data-image=\"\">\r\n        <app-sluzba-sidebar></app-sluzba-sidebar>\r\n        <div class=\"sidebar-background\" style=\"background-image: url(assets/img/sidebar-4.jpg)\"></div>\r\n    </div>\r\n  \r\n    <div class=\"main-panel\">\r\n        <navbar-cmp></navbar-cmp>\r\n        <router-outlet></router-outlet>\r\n    </div>\r\n  \r\n  </div>\r\n</div>\r\n","import { Course } from \"./course\";\r\nimport { Student } from \"./student\";\r\n\r\nexport class Enrollment implements EnrollmentInterface{\r\n\tpublic id: number;\r\n\tpublic startDate: Date;\r\n\tpublic endDate: Date;\r\n\tpublic student: Student;\r\n    public course: Course;\r\n\t\t\r\n\tconstructor(enrollmentCfg:EnrollmentInterface)\r\n\t{\t\r\n\t\tthis.id = enrollmentCfg.id;\r\n\t\tthis.startDate = enrollmentCfg.startDate;\r\n\t\tthis.endDate = enrollmentCfg.endDate;\t\r\n\t\tthis.student = enrollmentCfg.student;\r\n        this.course = enrollmentCfg.course;\r\n\t}\r\n}\r\n\r\ninterface EnrollmentInterface{\r\n\tid?: number;\r\n\tstartDate: Date;\r\n\tendDate: Date;\r\n    student: Student;\r\n    course: Course;\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpResponse, HttpClient } from '@angular/common/http';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { ExamPartTaking } from 'src/app/model/examPartTaking';\r\nimport { AuthenticationServiceService } from 'src/app/services/auth/authentication-service.service';\r\nimport { ExamStatus } from 'src/app/model/examStatus';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SluzbaExamTakingsServiceService {\r\n\r\n  private examTakingsUrl = 'examPartTakings';\r\n  private examPartStatusesUrl = 'examPartStatuses';\r\n\r\n  constructor(private http: HttpClient, private authService: AuthenticationServiceService) { }\r\n\r\n  private RegenerateData = new Subject<void>();\r\n\r\n  RegenerateData$ = this.RegenerateData.asObservable();\r\n\r\n  announceChange() {\r\n    this.RegenerateData.next();\r\n  }\r\n\r\n  getExamTaking(id: number): Observable<HttpResponse<ExamPartTaking>> {\r\n    const url = `${this.examTakingsUrl}/getExamTakingById/${id}`;\r\n    return this.http.get<ExamPartTaking>(url, {observe: 'response'});\r\n  }\r\n\r\n  getExamTakings(examPartId: number): Observable<HttpResponse<ExamPartTaking[]>> {\r\n    let username = this.authService.getCurrentUser().username;\r\n    console.log(\"username: \" + username);\r\n    const url = `${this.examTakingsUrl}/getAllExamTakingsForUser/${username}/${examPartId}`;\r\n    return this.http.get<ExamPartTaking[]>(url, { observe: 'response' });\r\n  }\r\n\r\n  getExamTakingsForStudent(examPartId: number, enrollmentId: number): Observable<HttpResponse<ExamPartTaking[]>> {\r\n    let username = this.authService.getCurrentUser().username;\r\n    console.log(\"username: \" + username);\r\n    const url = `${this.examTakingsUrl}/getAllExamTakingsForStudent/${examPartId}/${enrollmentId}`;\r\n    return this.http.get<ExamPartTaking[]>(url, { observe: 'response' });\r\n  }\r\n\r\n  getExamStatuses(): Observable<HttpResponse<ExamStatus[]>> {\r\n    const url = `${this.examPartStatusesUrl}/getAllExamPartStatuses`;\r\n    return this.http.get<ExamStatus[]>(url, {observe: 'response'});\r\n  }\r\n\r\n  updateExamTaking(examTaking: ExamPartTaking): Observable<HttpResponse<ExamPartTaking>> {\r\n    const urlPut =`${this.examTakingsUrl}/updateExamTaking/${examTaking.id}`;\r\n    return this.http.put<ExamPartTaking>(urlPut, examTaking, {observe: 'response'});\r\n  }\r\n\r\n  canSignUpExam(examPartId: number, selectedEnrollmentId: number): Observable<HttpResponse<Boolean>>{\r\n    const url =`${this.examTakingsUrl}/canSignUp/${examPartId}/${selectedEnrollmentId}`;\r\n    return this.http.get<Boolean>(url, {observe: 'response'});\r\n  }\r\n\r\n  canSignOutExam(examPartId: number, selectedEnrollmentId: number): Observable<HttpResponse<Boolean>>{\r\n    const url =`${this.examTakingsUrl}/canSignOut/${examPartId}/${selectedEnrollmentId}`;\r\n    return this.http.get<Boolean>(url, {observe: 'response'});\r\n  }\r\n\r\n  signUp(examPartId: number, selectedEnrollmentId: number): Observable<ExamPartTaking>{\r\n    const url =`${this.examTakingsUrl}/signUp/${examPartId}/${selectedEnrollmentId}`;\r\n    return this.http.post<ExamPartTaking>(url, {observe: 'response'});\r\n  }\r\n\r\n  signOut(examPartId: number, selectedEnrollmentId: number): Observable<ExamPartTaking>{\r\n    const url =`${this.examTakingsUrl}/signOut/${examPartId}/${selectedEnrollmentId}`;\r\n    return this.http.put<ExamPartTaking>(url, {observe: 'response'});\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpResponse, HttpClient } from '@angular/common/http';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { AuthenticationServiceService } from 'src/app/services/auth/authentication-service.service';\r\nimport { ExamPart } from 'src/app/model/examPart';\r\nimport { ExamPartType } from 'src/app/model/examPartType';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SluzbaExamsServiceService {\r\n  \r\n  private examPartsUrl = 'examParts';\r\n  private examPartTypesUrl = 'examPartTypes';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  private RegenerateData = new Subject<void>();\r\n\r\n  RegenerateData$ = this.RegenerateData.asObservable();\r\n\r\n  announceChange() {\r\n    this.RegenerateData.next();\r\n  }\r\n\r\n  getExamPart(id: number): Observable<HttpResponse<ExamPart>> {\r\n    const url = `${this.examPartsUrl}/getExamPartById/${id}`;\r\n    return this.http.get<ExamPart>(url, {observe: 'response'});\r\n  }\r\n\r\n  getExamPartsForCourse(id: number): Observable<HttpResponse<ExamPart[]>> {\r\n    const url = `${this.examPartsUrl}/getAllExamPartsForCourse/${id}`;\r\n    return this.http.get<ExamPart[]>(url, { observe: 'response' });\r\n  }\r\n\r\n  getExamPartsForEnrollment(id: number): Observable<HttpResponse<ExamPart[]>> {\r\n    const url = `${this.examPartsUrl}/getAllExamPartsForEnrollment/${id}`;\r\n    return this.http.get<ExamPart[]>(url, { observe: 'response' });\r\n  }\r\n\r\n  getExamPartsForTeaching(id: number): Observable<HttpResponse<ExamPart[]>> {\r\n    const url = `${this.examPartsUrl}/getAllExamPartsForTeaching/${id}`;\r\n    return this.http.get<ExamPart[]>(url, { observe: 'response' });\r\n  }\r\n\r\n  getExamPartTypes(): Observable<HttpResponse<ExamPartType[]>> {\r\n    const url = `${this.examPartTypesUrl}/getAllExamPartTypes`;\r\n    return this.http.get<ExamPartType[]>(url, {observe: 'response'});\r\n  }\r\n\r\n  addExamPart(examPart: ExamPart): Observable<HttpResponse<ExamPart>> {\r\n    const urlPost = `${this.examPartsUrl}/addExamPart`;\r\n    return this.http.post<ExamPart>(urlPost, examPart, {observe: 'response'});\r\n  } \r\n\r\n  editExamPart(examPart: ExamPart): Observable<HttpResponse<ExamPart>> {\r\n    const urlPut =`${this.examPartsUrl}/updateExamPart/${examPart.id}`;\r\n    return this.http.put<ExamPart>(urlPut, examPart, {observe: 'response'});\r\n  }\r\n  \r\n}\r\n","import { Account } from \"./account\";\r\n\r\nexport class Payment implements PaymentInterface{\r\n\tpublic id: number;\r\n\tpublic date: Date;\r\n    public amount: number;\r\n    public purpose : string;\r\n\tpublic account: Account;\r\n\t\t\r\n\tconstructor(paymentCfg: PaymentInterface)\r\n\t{\t\r\n\t\tthis.id = paymentCfg.id;\r\n\t\tthis.date = paymentCfg.date;\r\n        this.amount = paymentCfg.amount;\r\n        this.purpose = paymentCfg.purpose;\r\n\t\tthis.account = paymentCfg.account;\r\n\t}\r\n}\r\n\r\ninterface PaymentInterface {\r\n\tid?: number;\r\n\tdate: Date;\r\n    amount: number;\r\n    purpose : string;\r\n\taccount: Account;\r\n}","import { DocumentType } from \"./document-type\";\r\nimport { Student } from \"./student\";\r\n\r\nexport class Document implements DocumentInterface{\r\n\tpublic id: number;\r\n\tpublic title: string;\r\n\tpublic url: string;\r\n    public type: DocumentType;\r\n\tpublic student: Student;\r\n\t\t\r\n\tconstructor(documentCfg: DocumentInterface)\r\n\t{\t\r\n\t\tthis.id = documentCfg.id;\r\n\t\tthis.title = documentCfg.title;\r\n\t\tthis.url = documentCfg.url;\r\n        this.type = documentCfg.type;\r\n\t\tthis.student = documentCfg.student;\r\n\t}\r\n}\r\n\r\ninterface DocumentInterface {\r\n\tid?: number;\r\n\ttitle: string;\r\n\turl: string;\r\n    type: DocumentType;\r\n\tstudent: Student;\r\n}","import { Course } from \"./course\";\r\n\r\nexport class ExamPartType implements ExamPartTypeInterface{\r\n\tpublic id: number;\r\n\tpublic name: String;\r\n\tpublic code: String;\r\n\t\t\r\n\tconstructor(examPartTypeCfg:ExamPartTypeInterface)\r\n\t{\t\r\n\t\tthis.id = examPartTypeCfg.id;\r\n\t\tthis.name = examPartTypeCfg.name;\r\n\t\tthis.code = examPartTypeCfg.code;\t\r\n\t}\r\n}\r\n\r\ninterface ExamPartTypeInterface{\r\n\tid?: number;\r\n\tname: String;\r\n\tcode: String;\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpResponse, HttpClient } from '@angular/common/http';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { AuthenticationServiceService } from 'src/app/services/auth/authentication-service.service';\r\nimport { ExamPeriod } from 'src/app/model/examPeriod';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SluzbaExamPeriodsServiceService {\r\n\r\n  private examPeriodsUrl = 'examPeriods';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  private RegenerateData = new Subject<void>();\r\n\r\n  RegenerateData$ = this.RegenerateData.asObservable();\r\n\r\n  announceChange() {\r\n    this.RegenerateData.next();\r\n  }\r\n\r\n  getExamPeriod(id: number): Observable<HttpResponse<ExamPeriod>> {\r\n    const url = `${this.examPeriodsUrl}/getExamPeriodById/${id}`;\r\n    return this.http.get<ExamPeriod>(url, {observe: 'response'});\r\n  }\r\n\r\n  getActiveExamPeriods(): Observable<HttpResponse<ExamPeriod[]>> {\r\n    const url = `${this.examPeriodsUrl}/getAllActiveExamPeriods`;\r\n    return this.http.get<ExamPeriod[]>(url, {observe: 'response'});\r\n  }\r\n\r\n  getExamPeriods(): Observable<HttpResponse<ExamPeriod[]>> {\r\n    const url = `${this.examPeriodsUrl}/getAllExamPeriods`;\r\n    return this.http.get<ExamPeriod[]>(url, {observe: 'response'});\r\n  }\r\n\r\n  addExamPeriod(examPeriod: ExamPeriod): Observable<HttpResponse<ExamPeriod>> {\r\n    const urlPost = `${this.examPeriodsUrl}/addExamPeriod`;\r\n    return this.http.post<ExamPeriod>(urlPost, examPeriod, {observe: 'response'});\r\n  } \r\n\r\n  editExamPeriod(examPeriod: ExamPeriod): Observable<HttpResponse<ExamPeriod>> {\r\n    const urlPut =`${this.examPeriodsUrl}/updateExamPeriod/${examPeriod.id}`;\r\n    return this.http.put<ExamPeriod>(urlPut, examPeriod, {observe: 'response'});\r\n  }\r\n\r\n  deletePeriod(periodId: number): Observable<HttpResponse<any>> {\r\n    const url = `${this.examPeriodsUrl}/deleteExamPeriod/${periodId}`;\r\n    return this.http.delete<any>(url, {observe: 'response'});\r\n  }\r\n  \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpResponse, HttpClient } from '@angular/common/http';\r\nimport {Observable, Subject} from 'rxjs';\r\n\r\nimport { Teacher } from '../../model/teacher';\r\nimport { Teaching } from 'src/app/model/teaching';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SluzbaTeachersServiceService {\r\n\r\n  private teachersUrl = 'teachers';\r\n  private teachingsUrl = 'teachings';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  private RegenerateData = new Subject<void>();\r\n\r\n  RegenerateData$ = this.RegenerateData.asObservable();\r\n\r\n  announceChange() {\r\n      this.RegenerateData.next();\r\n  }\r\n  \r\n  getTeachers(params: any): Observable<any>{\r\n    const url = `${this.teachersUrl}/getAllTeachers`;\r\n    return this.http.get<any>(  url, { params });\r\n  }\r\n\r\n  getTeachersList(): Observable<HttpResponse<Teacher[]>> {\r\n    const url = `${this.teachersUrl}/getAllTeachersList`;\r\n    return this.http.get<Teacher[]>(url, {observe: 'response'});\r\n}\r\n\r\n  getTeacher(id: number): Observable<HttpResponse<Teacher>> {\r\n    const url = `${this.teachersUrl}/getTeacherById/${id}`;\r\n    return this.http.get<Teacher>(url, {observe: 'response'});\r\n  }\r\n\r\n  addTeacher(teacher: Teacher): Observable<HttpResponse<Teacher>> {\r\n    const urlPost = `${this.teachersUrl}/addTeacher`;\r\n    return this.http.post<Teacher>(urlPost, teacher, {observe: 'response'});\r\n  } \r\n\r\n  editTeacher(teacher: Teacher): Observable<HttpResponse<Teacher>> {\r\n    const urlPut =`${this.teachersUrl}/updateTeacher/${teacher.id}`;\r\n    return this.http.put<Teacher>(urlPut, teacher, {observe: 'response'});\r\n  }\r\n\r\n  deleteTeacher(teacherId: number): Observable<HttpResponse<any>> {\r\n    const url = `${this.teachersUrl}/deleteTeacher/${teacherId}`;\r\n    return this.http.put<any>(url, {observe: 'response'});\r\n  }\r\n\r\n  getTeacherTeachings(teacherId: number): Observable<HttpResponse<Teaching[]>> {\r\n    const url = `${this.teachingsUrl}/getAllTeachingsForTeacher/${teacherId}`;\r\n    return this.http.get<Teaching[]>(url, {observe: 'response'});\r\n  }\r\n}\r\n","import { User } from \"./user\";\r\n\r\nexport class Teacher implements TeacherInterface{\r\n\tpublic id: number;\r\n\tpublic user: User;\r\n\t\t\r\n\tconstructor(teacherCfg:TeacherInterface)\r\n\t{\t\r\n\t\tthis.id = teacherCfg.id;\t\r\n\t\tthis.user = teacherCfg.user;\r\n\t}\r\n}\r\n\r\ninterface TeacherInterface{\r\n\tid?: number;\r\n\tuser: User;\r\n}","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { SluzbaProfileComponent } from './components/sluzba-profile/sluzba-profile.component';\r\n\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\r\nimport { SluzbaLoginComponent } from './components/sluzba-login/sluzba-login.component';\r\nimport { SluzbaNotFoundPageComponent } from './components/sluzba-not-found-page/sluzba-not-found-page.component';\r\nimport { SluzbaCoursesComponent } from './components/sluzba-courses/sluzba-courses.component';\r\nimport { SluzbaCoursesServiceService } from './components/sluzba-courses/sluzba-courses-service.service';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { JwtUtilsService } from './services/auth/jwt-utils.service';\r\nimport { TokenInterceptorService } from './services/auth/token-interceptor.service';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { AuthenticationServiceService } from './services/auth/authentication-service.service';\r\nimport { CanActivateAuthGuardService } from './services/auth/can-activate-auth.guard.service';\r\nimport { SluzbaPaymentsComponent } from './components/sluzba-payments/sluzba-payments.component';\r\nimport { SluzbaDocumentsComponent } from './components/sluzba-documents/sluzba-documents.component';\r\nimport { SluzbaStudentsComponent } from './components/sluzba-students/sluzba-students.component';\r\nimport { SluzbaTeachersComponent } from './components/sluzba-teachers/sluzba-teachers.component';\r\nimport { SluzbaCourseDetailsComponent } from './components/sluzba-course-details/sluzba-course-details.component';\r\nimport { SluzbaEnrollmentsComponent } from './components/sluzba-enrollments/sluzba-enrollments.component';\r\nimport { SluzbaHomeComponent } from './components/sluzba-home/sluzba-home.component';\r\nimport { SluzbaNavbarComponent } from './components/sluzba-navbar/sluzba-navbar.component';\r\nimport { SluzbaSidebarComponent } from './components/sluzba-sidebar/sluzba-sidebar.component';\r\nimport { SluzbaTeachingsComponent } from './components/sluzba-teachings/sluzba-teachings.component';\r\nimport { SluzbaStudentDetailsComponent } from './components/sluzba-student-details/sluzba-student-details.component';\r\nimport { SluzbaDocumentDetailsComponent } from './components/sluzba-document-details/sluzba-document-details.component';\r\nimport { SluzbaPaymentDetailsComponent } from './components/sluzba-payment-details/sluzba-payment-details.component';\r\nimport { SluzbaTeacherDetailsComponent } from './components/sluzba-teacher-details/sluzba-teacher-details.component';\r\nimport { SluzbaExamsComponent } from './components/sluzba-exams/sluzba-exams.component';\r\nimport { SluzbaExamDetailsComponent } from './components/sluzba-exam-details/sluzba-exam-details.component';\r\nimport { SluzbaExamPeriodsComponent } from './components/sluzba-exam-periods/sluzba-exam-periods.component';\r\nimport { SluzbaExamTakingsComponent } from './components/sluzba-exam-takings/sluzba-exam-takings.component';\r\nimport { SluzbaExamTakingDetailsComponent } from './components/sluzba-exam-taking-details/sluzba-exam-taking-details.component';\r\nimport { SluzbaUserComponent } from './components/sluzba-user/sluzba-user.component';\r\nimport { SluzbaExamPeriodDetailsComponent } from './components/sluzba-exam-period-details/sluzba-exam-period-details.component';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    SluzbaProfileComponent,\r\n    SluzbaLoginComponent,\r\n    SluzbaNotFoundPageComponent,\r\n    SluzbaCoursesComponent,\r\n    SluzbaPaymentsComponent,\r\n    SluzbaDocumentsComponent,\r\n    SluzbaStudentsComponent,\r\n    SluzbaTeachersComponent,\r\n    SluzbaCourseDetailsComponent,\r\n    SluzbaEnrollmentsComponent,\r\n    SluzbaHomeComponent,\r\n    SluzbaNavbarComponent,\r\n    SluzbaSidebarComponent,\r\n    SluzbaTeachingsComponent,\r\n    SluzbaStudentDetailsComponent,\r\n    SluzbaDocumentDetailsComponent,\r\n    SluzbaPaymentDetailsComponent,\r\n    SluzbaTeacherDetailsComponent,\r\n    SluzbaExamsComponent,\r\n    SluzbaExamDetailsComponent,\r\n    SluzbaExamPeriodsComponent,\r\n    SluzbaExamTakingsComponent,\r\n    SluzbaExamTakingDetailsComponent,\r\n    SluzbaUserComponent,\r\n    SluzbaExamPeriodDetailsComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgbModule,\r\n    HttpClientModule,\r\n    AppRoutingModule,\r\n    RouterModule,\r\n    NgxPaginationModule\r\n  ],\r\n  providers: [\r\n    SluzbaCoursesServiceService,\r\n    AuthenticationServiceService,\r\n    CanActivateAuthGuardService,\r\n    JwtUtilsService,\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: TokenInterceptorService,\r\n      multi: true\r\n    },\r\n  ],\r\n  schemas: [ CUSTOM_ELEMENTS_SCHEMA],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Course } from \"./course\";\r\nimport { ExamPartType } from \"./examPartType\";\r\nimport { ExamPeriod } from \"./examPeriod\";\r\n\r\nexport class ExamPart implements ExamPartInterface{\r\n\tpublic id: number;\r\n\tpublic points: number;\r\n\tpublic date: Date;\r\n\tpublic location: String;\r\n    public type: ExamPartType;\r\n    public period: ExamPeriod;\r\n    public course: Course;\r\n    public active: boolean;\r\n\t\t\r\n\tconstructor(examPartCfg:ExamPartInterface)\r\n\t{\t\r\n\t\tthis.id = examPartCfg.id;\r\n\t\tthis.points = examPartCfg.points;\r\n\t\tthis.date = examPartCfg.date;\t\r\n\t\tthis.location = examPartCfg.location;\r\n        this.type = examPartCfg.type;\r\n        this.period = examPartCfg.period;\r\n        this.course = examPartCfg.course;\r\n        this.active = examPartCfg.active;\r\n\t}\r\n}\r\n\r\ninterface ExamPartInterface{\r\n\tid?: number;\r\n\tpoints: number;\r\n\tdate: Date;\r\n    location: String;\r\n    type: ExamPartType;\r\n    period: ExamPeriod;\r\n    course: Course;\r\n    active: boolean;\r\n}","import { Component, OnInit, ElementRef } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { ROUTES } from '../sluzba-sidebar/sluzba-sidebar.component';\r\nimport {Location, LocationStrategy, PathLocationStrategy} from '@angular/common';\r\nimport { AuthenticationServiceService } from 'src/app/services/auth/authentication-service.service';\r\nimport { User } from 'src/app/model/user';\r\nimport { SluzbaNavbarServiceService } from './sluzba-navbar-service.service';\r\n\r\n@Component({\r\n  selector: 'navbar-cmp',\r\n  templateUrl: './sluzba-navbar.component.html'\r\n})\r\nexport class SluzbaNavbarComponent implements OnInit {\r\n\r\n    private listTitles: any[];\r\n    location: Location;\r\n    private toggleButton: any;\r\n    private sidebarVisible: boolean;\r\n    user: User;\r\n    subscription: Subscription;\r\n\r\n    constructor(private navbarService: SluzbaNavbarServiceService,  location: Location,  private element: ElementRef, private authenticationService:AuthenticationServiceService, private router: Router) {\r\n      this.subscription = navbarService.RegenerateData$.subscribe(() =>\r\n      this.getUser()\r\n      );\r\n      this.location = location;\r\n      this.sidebarVisible = false;\r\n    }\r\n\r\n    ngOnInit(){\r\n      this.getUser();\r\n      this.listTitles = ROUTES.filter(listTitle => listTitle);\r\n      const navbar: HTMLElement = this.element.nativeElement;\r\n      this.toggleButton = navbar.getElementsByClassName('navbar-toggle')[0];\r\n    }\r\n\r\n    getUser() {\r\n      this.navbarService.getUser().subscribe(res =>\r\n        this.user = res.body);\r\n    }\r\n\r\n    logout():void{\r\n      this.authenticationService.logout();\r\n      this.router.navigate(['/login']);\r\n    }\r\n\r\n    sidebarOpen() {\r\n        const toggleButton = this.toggleButton;\r\n        const body = document.getElementsByTagName('body')[0];\r\n        setTimeout(function(){\r\n            toggleButton.classList.add('toggled');\r\n        }, 500);\r\n        body.classList.add('nav-open');\r\n\r\n        this.sidebarVisible = true;\r\n    };\r\n    sidebarClose() {\r\n        const body = document.getElementsByTagName('body')[0];\r\n        this.toggleButton.classList.remove('toggled');\r\n        this.sidebarVisible = false;\r\n        body.classList.remove('nav-open');\r\n    };\r\n    sidebarToggle() {\r\n        // const toggleButton = this.toggleButton;\r\n        // const body = document.getElementsByTagName('body')[0];\r\n        if (this.sidebarVisible === false) {\r\n            this.sidebarOpen();\r\n            console.log('opened');\r\n        } else {\r\n            this.sidebarClose();\r\n            console.log('closed');\r\n        }\r\n    };\r\n\r\n    getTitle(){\r\n      var titlee = this.location.prepareExternalUrl(this.location.path());\r\n      if(titlee.charAt(0) === '#'){\r\n          titlee = titlee.slice( 1 );\r\n      }\r\n\r\n      for(var item = 0; item < this.listTitles.length; item++){\r\n          if(this.listTitles[item].path === titlee){\r\n              return this.listTitles[item].title;\r\n          }\r\n      }\r\n      return 'Dashboard';\r\n    }\r\n\r\n    isLoggedIn():boolean{\r\n      return this.authenticationService.isLoggedIn();\r\n    }\r\n\r\n}\r\n","<nav class=\"navbar navbar-default\" *ngIf=\"isLoggedIn()\">\r\n    <div class=\"container-fluid\">\r\n        <div class=\"navbar-header\">\r\n            <button type=\"button\" class=\"navbar-toggle\" data-toggle=\"collapse\" (click)=\"sidebarToggle()\">\r\n                <span class=\"sr-only\">Toggle navigation</span>\r\n                <span class=\"icon-bar\"></span>\r\n                <span class=\"icon-bar\"></span>\r\n                <span class=\"icon-bar\"></span>\r\n            </button>\r\n            <a class=\"navbar-brand\">{{getTitle()}}</a>\r\n        </div>\r\n        <div class=\"collapse navbar-collapse\">\r\n            <ul class=\"nav navbar-nav navbar-left\">\r\n                <li>\r\n                    <a routerLink=\"/dashboard\" class=\"dropdown-toggle\" data-toggle=\"dropdown\">\r\n                        <i class=\"fa fa-dashboard\"></i>\r\n                        <p class=\"hidden-lg hidden-md\">{{getTitle()}}</p>\r\n                    </a>\r\n                </li>\r\n                <li>\r\n                    <a routerLink=\"/profile\">\r\n                        {{ user? user.firstName : \"\"  }} {{ user? user.lastName : \"\"  }}\r\n                    </a>\r\n                </li>\r\n            </ul>\r\n\r\n            <ul class=\"nav navbar-nav navbar-right\">\r\n                <li>\r\n                    <a  (click)=\"logout()\" href=\"#\">\r\n                        Log out\r\n                    </a>\r\n                </li>\r\n                <li class=\"separator hidden-lg hidden-md\"></li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</nav>\r\n","export class DocumentType implements DocumentTypeInterface{\r\n\tpublic id: number;\r\n\tpublic code: string;\r\n    public name: string;\r\n\t\t\r\n\tconstructor(documentTypeCfg: DocumentTypeInterface)\r\n\t{\t\r\n\t\tthis.id = documentTypeCfg.id;\r\n\t\tthis.code = documentTypeCfg.code;\r\n        this.name = documentTypeCfg.name;\r\n\t}\r\n}\r\n\r\ninterface DocumentTypeInterface {\r\n\tid?: number;\r\n\tcode: string;\r\n    name: string;\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpResponse, HttpClient } from '@angular/common/http';\r\nimport {Observable, Subject} from 'rxjs';\r\n\r\nimport { AuthenticationServiceService } from '../../services/auth/authentication-service.service';\r\nimport { Account } from 'src/app/model/account';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SluzbaAccountServiceService {\r\n\r\n  private accountUrl = 'accounts';\r\n\r\n  constructor(private http: HttpClient, private authService: AuthenticationServiceService) { }\r\n\r\n  private RegenerateData = new Subject<void>();\r\n\r\n  RegenerateData$ = this.RegenerateData.asObservable();\r\n\r\n  announceChange() {\r\n      this.RegenerateData.next();\r\n  }\r\n\r\n  getAccount(id: number): Observable<HttpResponse<Account>> {\r\n    const url = `${this.accountUrl}/getAccountById/${id}`;\r\n    return this.http.get<Account>(url, {observe: 'response'});\r\n  }\r\n\r\n  getAvailableFunds(id: number): Observable<HttpResponse<number>> {\r\n    const url = `${this.accountUrl}/getAvailableFundsForAccount/${id}`;\r\n    return this.http.get<number>(url, {observe: 'response'});\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport {switchMap} from 'rxjs/operators';\r\n\r\nimport { Payment } from 'src/app/model/payment';\r\nimport { AuthenticationServiceService } from 'src/app/services/auth/authentication-service.service';\r\nimport { Account } from 'src/app/model/account';\r\nimport { SluzbaPaymentsServiceService } from '../sluzba-payments/sluzba-payments-service.service';\r\nimport { SluzbaAccountServiceService } from '../sluzba-account/sluzba-account-service.service';\r\n\r\n@Component({\r\n  selector: 'app-sluzba-payment-details',\r\n  templateUrl: './sluzba-payment-details.component.html',\r\n  styleUrls: ['./sluzba-payment-details.component.css']\r\n})\r\nexport class SluzbaPaymentDetailsComponent implements OnInit {\r\n\r\n  payment: Payment= new Payment({ // if we add a new payment, create an empty payment\r\n    date: null,\r\n    purpose: '',\r\n    amount: 0,\r\n    account: new Account({\r\n      bankAccount:'',\r\n      model: '',\r\n      personalCallToNumber:''\r\n    })\r\n  });\r\n\r\n  mode: string = 'ADD';\r\n\r\n  constructor(private accountService: SluzbaAccountServiceService, private paymentService: SluzbaPaymentsServiceService, \r\n    private route: ActivatedRoute, private location: Location, private router: Router, private authService: AuthenticationServiceService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.route.snapshot.params['id']) {\r\n      this.mode = 'EDIT';\r\n      // fetch payment if we edit the existing payment\r\n      this.route.params.pipe(switchMap((params: Params) =>\r\n          this.paymentService.getPayment(+params['id'])))\r\n        .subscribe(res => {\r\n          this.payment = res.body;\r\n        });\r\n    }else{\r\n      this.route.queryParams.subscribe(params =>\r\n        this.accountService.getAccount(params['accountId'])\r\n          .subscribe(res => \r\n            this.payment.account = res.body\r\n          ));\r\n    }\r\n  }\r\n\r\n  save(): void {\r\n    this.mode == 'ADD' ? this.add() : this.edit();\r\n  }\r\n\r\n  private add(): void {\r\n    this.paymentService.addPayment(this.payment)\r\n      .subscribe(payment => {\r\n        this.paymentService.announceChange();\r\n        this.goBack();\r\n      });\r\n  }\r\n\r\n  private edit(): void {\r\n    this.paymentService.editPayment(this.payment)\r\n      .subscribe(payment => {\r\n        this.paymentService.announceChange();\r\n        this.goBack();\r\n      });\r\n  }\r\n\r\n  goBack(): void {\r\n    this.location.back();\r\n  }\r\n\r\n  isAdmin():boolean{\r\n    return this.authService.isAdmin();\r\n  }\r\n\r\n}\r\n","<div class=\"main-content\">\r\n    <div class=\"container-fluid\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n                <div class=\"card\" style=\"padding-left: 10px;\">\r\n                    <div>\r\n                        <div class=\"form-group\">\r\n                            <label for=\"field1c\" class=\"form-control-label\">Date</label>\r\n                            <input type=\"date\" [ngModel]=\"payment.date | date:'yyyy-MM-dd'\"\r\n                                (ngModelChange)=\"payment.date=$event\" class=\"form-control\" id=\"field1c\" name=\"field1\">\r\n                        </div>\r\n\r\n                        <div class=\"form-group\">\r\n                            <label for=\"field2c\" class=\"form-control-label\">Purpose</label>\r\n                            <input type=\"text\" [(ngModel)]=\"payment.purpose\" placeholder=\"Purpose\" class=\"form-control\"\r\n                                id=\"field2c\" name=\"field2\">\r\n                        </div>\r\n\r\n                        <div class=\"form-group\">\r\n                            <label for=\"field3c\" class=\"form-control-label\">Amount</label>\r\n                            <input type=\"number\" [(ngModel)]=\"payment.amount\" placeholder=\"Amount\" class=\"form-control\"\r\n                                id=\"field3c\" name=\"field3\">\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"modal-footer\" *ngIf=\"isAdmin()\">\r\n                        <button class=\"btn btn-success\" (click)=\"save()\">OK</button>\r\n                        <button class=\"btn btn-danger\" (click)=\"goBack()\">Cancel</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Account } from \"./account\";\r\nimport { User } from \"./user\";\r\n\r\nexport class Student implements StudentInterface{\r\n\tpublic id: number;\r\n\tpublic cardName: string;\r\n\tpublic account: Account;\r\n\tpublic user: User;\r\n\t\t\r\n\tconstructor(studentCfg:StudentInterface)\r\n\t{\t\r\n\t\tthis.id = studentCfg.id;\r\n\t\tthis.cardName = studentCfg.cardName;\r\n\t\tthis.account = studentCfg.account;\t\r\n\t\tthis.user = studentCfg.user;\r\n\t}\r\n}\r\n\r\ninterface StudentInterface{\r\n\tid?: number;\r\n\tcardName: string;\r\n\taccount: Account;\r\n\tuser: User;\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { ExamPeriod } from 'src/app/model/examPeriod';\r\nimport { SluzbaExamPeriodsServiceService } from './sluzba-exam-periods-service.service';\r\nimport { AuthenticationServiceService } from 'src/app/services/auth/authentication-service.service';\r\n\r\n@Component({\r\n  selector: 'app-sluzba-exam-periods',\r\n  templateUrl: './sluzba-exam-periods.component.html',\r\n  styleUrls: ['./sluzba-exam-periods.component.css']\r\n})\r\nexport class SluzbaExamPeriodsComponent implements OnInit {\r\n\r\n  periods: ExamPeriod[];\r\n\r\n  subscription: Subscription;\r\n\r\n  constructor(private periodService: SluzbaExamPeriodsServiceService, private router: Router, private authService: AuthenticationServiceService) {\r\n    this.subscription = periodService.RegenerateData$.subscribe(() =>\r\n      this.getPeriods()\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getPeriods();\r\n  }\r\n\r\n  getPeriods() {\r\n    if(this.isAdmin()){\r\n      this.periodService.getExamPeriods().subscribe(res =>\r\n        this.periods = res.body);\r\n    }else if(this.isStudent() || this.isTeacher()){\r\n      this.periodService.getActiveExamPeriods().subscribe(res =>\r\n        this.periods = res.body);\r\n    }\r\n   \r\n  }\r\n\r\n  isLoggedIn():boolean{\r\n    return this.authService.isLoggedIn();\r\n  }\r\n\r\n  isAdmin():boolean{\r\n    return this.authService.isAdmin();\r\n  }\r\n\r\n  isTeacher(): boolean {\r\n    return this.authService.isTeacher();\r\n  }\r\n\r\n  isStudent(): boolean {\r\n    return this.authService.isStudent();\r\n  }\r\n\r\n  gotoAdd(): void {\r\n    this.router.navigate(['/addExamPeriod']);\r\n  }\r\n\r\n  gotoEdit(period: ExamPeriod): void {\r\n    this.router.navigate(['/editExamPeriod', period.id]);\r\n  }\r\n\r\n  deletePeriod(periodId: number, periodName: string): void {\r\n    if(confirm(\"Are you sure to delete exam period: \" + periodName + \"?\")){\r\n    this.periodService.deletePeriod(periodId).subscribe(\r\n      () => this.getPeriods()\r\n    );\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"main-content\">\r\n    <div class=\"container-fluid\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-12 mx-auto\">\r\n          <div class=\"md-form\">\r\n            <input type=\"text\" class=\"form-control inputSearch\" placeholder=\"Search\" autocomplete=\"off\" id=\"search\" />\r\n            <label></label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n          <div class=\"card\">\r\n            <div *ngIf=\"isLoggedIn()\" class=\"content table-responsive table-full-width\" style=\"padding-top: 2%;\">\r\n              <table class=\"table table-hover\" style=\"text-align: center;\">\r\n                <thead>\r\n                  <tr>\r\n                    <th scope=\"col\">#</th>\r\n                    <th scope=\"col\">Exam period name</th>\r\n                    <th scope=\"col\">Start date-End date</th>\r\n                    <th></th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr *ngFor=\"let period of periods; let i = index\">\r\n                    <th scope=\"row\">{{ i + 1 }}</th>\r\n                    <td>{{ period.name }}</td>\r\n                    <td>[Since {{period.startDate | date: 'dd.MM.yyyy'}} until {{period.endDate |\r\n                        date:\r\n                        'dd.MM.yyyy'}}]</td>\r\n                    <td *ngIf=\"isAdmin()\">\r\n                      <button type=\"button\" class=\"btn btn-primary\" aria-label=\"Edit\" (click)=\"gotoEdit(period)\">\r\n                        <span class=\"fa fa-edit\" aria-hidden=\"true\"></span>\r\n                      </button>\r\n  \r\n                      <button type=\"button\" class=\"btn btn-danger\" aria-label=\"Delete\"\r\n                        (click)=\"deletePeriod(period.id, period.name)\">\r\n                        <span class=\"fa fa-trash\" aria-hidden=\"true\"></span>\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n          <div *ngIf=\"isAdmin()\" class=\"right\">\r\n            <button type=\"button\" class=\"btn btn-success\" aria-label=\"Add\" (click)=\"gotoAdd()\">\r\n              <span class=\"fa fa-plus\" aria-hidden=\"true\"></span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>","import { Component, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { SluzbaPaymentsServiceService } from './sluzba-payments-service.service';\r\nimport { AuthenticationServiceService } from 'src/app/services/auth/authentication-service.service';\r\n\r\ninterface Payment {\r\n  id?: number;\r\n  date: Date;\r\n  amount: number;\r\n  purpose: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-sluzba-payments',\r\n  templateUrl: './sluzba-payments.component.html',\r\n  styleUrls: ['./sluzba-payments.component.css']\r\n})\r\nexport class SluzbaPaymentsComponent implements OnInit {\r\n\r\n  payments: Payment[];\r\n\r\n  subscription: Subscription;\r\n\r\n  constructor(private paymentService: SluzbaPaymentsServiceService, private router: Router, private authService: AuthenticationServiceService) {\r\n    this.subscription = paymentService.RegenerateData$.subscribe(() =>\r\n      this.getPayments()\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getPayments();\r\n  }\r\n\r\n  getPayments() {\r\n    this.paymentService.getPayments().subscribe(res =>\r\n      this.payments = res.body);\r\n  }\r\n\r\n  isLoggedIn():boolean{\r\n    return this.authService.isLoggedIn();\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"isLoggedIn()\" class= \"main-content\" style=\"padding-top: 2%;\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12 mx-auto\">\r\n        <div class=\"md-form\">\r\n          <input type=\"text\" class=\"form-control inputSearch\" placeholder=\"Search\" autocomplete=\"off\" id=\"search\" />\r\n          <label></label>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n          <div class=\"card\">\r\n          <!--         <div class=\"header\">\r\n                        <h4 class=\"title\">Striped Table with Hover</h4>\r\n                        <p class=\"category\">Here is a subtitle for this table</p>\r\n                    </div> -->\r\n        <div class=\"content table-responsive table-full-width\" style=\"padding-top: 2%;\">\r\n            <table class=\"table table-hover\" style=\"text-align: center;\">\r\n              <thead>\r\n              <tr>\r\n                <th scope=\"col\">#</th>\r\n                <th scope=\"col\">Date</th>\r\n                <th scope=\"col\">Amount</th>\r\n                <th scope=\"col\">Purpose</th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr *ngFor=\"let payment of payments; let i = index\">\r\n                <th scope=\"row\">{{ i + 1 }}</th>\r\n                <td>{{ payment.date | date  }}</td>\r\n                <td>{{ payment.amount | number }}</td>\r\n                <td>{{ payment.purpose }}</td>\r\n              </tr>\r\n              </tbody>\r\n            </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { SluzbaDocumentsServiceService } from './sluzba-documents-service.service';\r\nimport { AuthenticationServiceService } from 'src/app/services/auth/authentication-service.service';\r\nimport { Student } from 'src/app/model/student';\r\nimport { DocumentType } from 'src/app/model/document-type';\r\nimport { saveAs } from 'file-saver';\r\n\r\ninterface Document {\r\n  id?: number;\r\n  title: string;\r\n  url: string;\r\n  type: DocumentType;\r\n  student: Student;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-sluzba-documents',\r\n  templateUrl: './sluzba-documents.component.html',\r\n  styleUrls: ['./sluzba-documents.component.css']\r\n})\r\nexport class SluzbaDocumentsComponent implements OnInit {\r\n\r\n  documents: Document[];\r\n\r\n  subscription: Subscription;\r\n\r\n  constructor(private documentService: SluzbaDocumentsServiceService, private router: Router, private authService: AuthenticationServiceService) {\r\n    this.subscription = documentService.RegenerateData$.subscribe(() =>\r\n      this.getDocuments()\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getDocuments();\r\n  }\r\n\r\n  download(document: Document): void {\r\n    this.documentService\r\n      .download(document.id)\r\n      .subscribe(blob => saveAs(blob, document.title));\r\n  }\r\n\r\n  getDocuments() {\r\n    this.documentService.getDocuments().subscribe(res =>\r\n      this.documents = res.body);\r\n  }\r\n\r\n  isLoggedIn():boolean{\r\n    return this.authService.isLoggedIn();\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"isLoggedIn()\" class=\"main-content\" style=\"padding-top: 2%;\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12 mx-auto\">\r\n        <div class=\"md-form\">\r\n          <input type=\"text\" class=\"form-control inputSearch\" placeholder=\"Search\" autocomplete=\"off\" id=\"search\" />\r\n          <label></label>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <div class=\"card\">\r\n          <!--         <div class=\"header\">\r\n                        <h4 class=\"title\">Striped Table with Hover</h4>\r\n                        <p class=\"category\">Here is a subtitle for this table</p>\r\n                    </div> -->\r\n          <div class=\"content table-responsive table-full-width\" style=\"padding-top: 2%;\">\r\n            <table class=\"table table-hover\" style=\"text-align: center;\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">#</th>\r\n                  <th scope=\"col\">Title</th>\r\n                  <th scope=\"col\">Type</th>\r\n                  <th scope=\"col\">Download</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr *ngFor=\"let document of documents; let i = index\">\r\n                  <th scope=\"row\">{{i + 1 }}</th>\r\n                  <td>{{ document.title }}</td>\r\n                  <td>{{ document.type.name }}</td>\r\n                  <td>\r\n                    <button type=\"button\" class=\"btn btn-primary\" aria-label=\"Download\" (click)=\"download(document)\">\r\n                      <span class=\"pe-7s-download\" aria-hidden=\"true\"></span>\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { AuthenticationServiceService } from 'src/app/services/auth/authentication-service.service';\r\nimport { Teacher } from 'src/app/model/teacher';\r\nimport { User } from 'src/app/model/user';\r\nimport { Teaching } from 'src/app/model/teaching';\r\nimport { SluzbaProfileServiceService } from '../sluzba-profile/sluzba-profile-service.service';\r\nimport { SluzbaTeachersServiceService } from '../sluzba-teachers/sluzba-teachers-service.service';\r\n\r\n@Component({\r\n  selector: 'app-sluzba-teacher-details',\r\n  templateUrl: './sluzba-teacher-details.component.html',\r\n  styleUrls: ['./sluzba-teacher-details.component.css']\r\n})\r\nexport class SluzbaTeacherDetailsComponent implements OnInit {\r\n\r\n  userForm: FormGroup;\r\n  passwordForm: FormGroup;\r\n  submitted = false;\r\n\r\n  teacher: Teacher = new Teacher({ // if we add a new teacher, create an empty teacher\r\n    user: new User({\r\n      username: '',\r\n      firstName: '',\r\n      lastName: '',\r\n      email: '',\r\n      password: ''\r\n    })\r\n  });\r\n\r\n  teachings: Teaching[];\r\n\r\n  public showPassword: boolean;\r\n  public showPassword2: boolean;\r\n\r\n  mode: string = 'ADD';\r\n\r\n  constructor(private formBuilder: FormBuilder, private profileService: SluzbaProfileServiceService, private teacherService: SluzbaTeachersServiceService, \r\n    private route: ActivatedRoute, private location: Location, private router: Router, private authService: AuthenticationServiceService) {\r\n  }\r\n\r\n  isShowDiv = false;\r\n\r\n  toggleDisplayDiv() {\r\n    this.isShowDiv = !this.isShowDiv;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.userForm = this.formBuilder.group({\r\n      firstName: ['', Validators.required],\r\n      lastName: ['', Validators.required],\r\n      username: ['', Validators.required],\r\n      email: ['', [Validators.required, Validators.email]]\r\n    });\r\n    this.passwordForm = this.formBuilder.group({\r\n      newPassword: ['', [Validators.required, Validators.minLength(6)]],\r\n      confirmNewPassword: ['', Validators.required]\r\n    }, {\r\n      validator: this.MustMatch('newPassword', 'confirmNewPassword')\r\n    });\r\n\r\n    if (this.route.snapshot.params['id']) {\r\n      this.mode = 'EDIT';\r\n      // fetch student if we edit the existing student\r\n      this.route.params.pipe(switchMap((params: Params) =>\r\n        this.teacherService.getTeacher(+params['id'])))\r\n        .subscribe(res => {\r\n          this.teacher = res.body;\r\n          this.userForm.get('firstName').setValue(this.teacher.user.firstName);\r\n          this.userForm.get('lastName').setValue(this.teacher.user.lastName);\r\n          this.userForm.get('username').setValue(this.teacher.user.username);\r\n          this.userForm.get('email').setValue(this.teacher.user.email);\r\n          this.getTeachings();\r\n        });\r\n    }\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get u() { return this.userForm.controls; }\r\n  get p() { return this.passwordForm.controls; }\r\n\r\n  private getTeachings(): void {\r\n    this.teacherService.getTeacherTeachings(this.teacher.id).subscribe(res =>\r\n      this.teachings = res.body);\r\n  }\r\n\r\n  MustMatch(controlName: string, matchingControlName: string) {\r\n    return (formGroup: FormGroup) => {\r\n      const control = formGroup.controls[controlName];\r\n      const matchingControl = formGroup.controls[matchingControlName];\r\n\r\n      if (matchingControl.errors && !matchingControl.errors.mustMatch) {\r\n        // return if another validator has already found an error on the matchingControl\r\n        return;\r\n      }\r\n\r\n      // set error on matchingControl if validation fails\r\n      if (control.value !== matchingControl.value) {\r\n        matchingControl.setErrors({ mustMatch: true });\r\n      } else {\r\n        matchingControl.setErrors(null);\r\n      }\r\n    }\r\n  }\r\n\r\n  save(): void {\r\n    this.mode == 'ADD' ? this.add() : this.edit();\r\n  }\r\n\r\n  private add(): void {\r\n    this.submitted = true;\r\n\r\n    // stop here if form is invalid\r\n    if (this.userForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.teacher.user.firstName = this.userForm.get('firstName').value;\r\n    this.teacher.user.lastName = this.userForm.get('lastName').value;\r\n    this.teacher.user.username = this.userForm.get('username').value;\r\n    this.teacher.user.email = this.userForm.get('email').value;\r\n\r\n    this.teacherService.addTeacher(this.teacher)\r\n      .subscribe(res => {\r\n        this.teacherService.announceChange();\r\n        this.goBack();\r\n      });\r\n  }\r\n\r\n  private edit(): void {\r\n    this.submitted = true;\r\n\r\n    // stop here if form is invalid\r\n    if (this.userForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.teacher.user.firstName = this.userForm.get('firstName').value;\r\n    this.teacher.user.lastName = this.userForm.get('lastName').value;\r\n    this.teacher.user.username = this.userForm.get('username').value;\r\n    this.teacher.user.email = this.userForm.get('email').value;\r\n\r\n    this.teacherService.editTeacher(this.teacher)\r\n      .subscribe(teacher => {\r\n        this.teacherService.announceChange();\r\n        this.goBack();\r\n      });\r\n  }\r\n\r\n  updatePassword(): void {\r\n    this.submitted = true;\r\n\r\n    // stop here if form is invalid\r\n    if (this.passwordForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    console.log(\"new: \" + this.passwordForm.get('newPassword').value);\r\n    this.profileService.updatePassword(this.teacher.user.id, this.passwordForm.get('newPassword').value)\r\n      .subscribe(teacher => {\r\n        this.profileService.announceChange();\r\n        this.goBack();\r\n      });\r\n\r\n  }\r\n\r\n  goBack(): void {\r\n    this.location.back();\r\n  }\r\n\r\n\r\n  isAdmin(): boolean {\r\n    return this.authService.isAdmin();\r\n  }\r\n\r\n}\r\n","<div class=\"main-content\">\r\n    <div class=\"container-fluid\" *ngIf=\"isAdmin()\">\r\n        <div class=\"row\">\r\n            <div class=\"card\">\r\n                <div class=\"header\">\r\n                    <h4 class=\"title\">Teacher</h4>\r\n                </div>\r\n                <div class=\"content\">\r\n                    <form [formGroup]=\"userForm\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label>First Name</label>\r\n                                    <input type=\"text\" placeholder=\"First name\" formControlName=\"firstName\"\r\n                                        class=\"form-control text\"\r\n                                        [ngClass]=\"{ 'is-invalid': submitted && u.firstName.errors }\" />\r\n                                    <div *ngIf=\"submitted && u.firstName.errors\"\r\n                                        class=\"invalid-feedback alert alert-danger\">\r\n                                        <div *ngIf=\"u.firstName.errors.required\">First Name is required</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label>Last Name</label>\r\n                                    <input type=\"text\" placeholder=\"Last Name\" formControlName=\"lastName\"\r\n                                        class=\"form-control text\"\r\n                                        [ngClass]=\"{ 'is-invalid': submitted && u.lastName.errors }\" />\r\n                                    <div *ngIf=\"submitted && u.lastName.errors\"\r\n                                        class=\"invalid-feedback alert alert-danger\">\r\n                                        <div *ngIf=\"u.lastName.errors.required\">Last Name is required</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label>Username</label>\r\n                                    <input type=\"text\" placeholder=\"Username\" formControlName=\"username\"\r\n                                        class=\"form-control text\"\r\n                                        [ngClass]=\"{ 'is-invalid': submitted && u.username.errors }\" />\r\n                                    <div *ngIf=\"submitted && u.username.errors\"\r\n                                        class=\"invalid-feedback alert alert-danger\">\r\n                                        <div *ngIf=\"u.username.errors.required\">Username is required</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label>Email address</label>\r\n                                    <input type=\"email\" placeholder=\"Email\" formControlName=\"email\"\r\n                                        class=\"form-control text\"\r\n                                        [ngClass]=\"{ 'is-invalid': submitted && u.email.errors }\" />\r\n                                    <div *ngIf=\"submitted && u.email.errors\"\r\n                                        class=\"invalid-feedback alert alert-danger\">\r\n                                        <div *ngIf=\"u.email.errors.required\">Email is required</div>\r\n                                        <div *ngIf=\"u.email.errors.email\">Email must be a valid email address\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div *ngIf=\"teacher.id\">\r\n                            <button (click)=toggleDisplayDiv() class=\"btn btn-secondary btn-fill pull-left\">Change\r\n                                password</button>\r\n                        </div>\r\n\r\n                        <div class=\"clearfix\"></div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n            <div *ngIf=\"teacher.id\" class=\"card\" [hidden]=\"!isShowDiv\">\r\n                <div class=\"header\">\r\n                    <h4 class=\"title\">Change password</h4>\r\n                </div>\r\n                <div class=\"content\">\r\n                    <form [formGroup]=\"passwordForm\">\r\n\r\n                        <div class=\"row form-group inner-addon right-addon\">\r\n                            <div class=\"col-md-6 input-group\">\r\n                                <label>New password</label>\r\n                                <input [type]=\"showPassword ? 'text' : 'password'\" formControlName=\"newPassword\"\r\n                                    class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && p.newPassword.errors }\"\r\n                                    placeholder=\"New password\" name=\"newPassword\" />\r\n\r\n                                <div>\r\n                                    <i alt=\"show\" class=\"fa fa-eye eye-show\" (click)=\"showPassword = !showPassword\"\r\n                                        [class.hide]=\"showPassword\"></i>\r\n                                    <i alt=\"hide\" class=\"fa fa-eye-slash eye-hide\"\r\n                                        (click)=\"showPassword = !showPassword\" [class.hide]=\"!showPassword\"></i>\r\n                                </div>\r\n                                <div *ngIf=\"submitted && p.newPassword.errors\"\r\n                                    class=\"invalid-feedback alert alert-danger\">\r\n                                    <div *ngIf=\"p.newPassword.errors.required\">Password is required</div>\r\n                                    <div *ngIf=\"p.newPassword.errors.minlength\">Password must be at least 6\r\n                                        characters</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row form-group inner-addon right-addon\">\r\n                            <div class=\"col-md-6 input-group\">\r\n                                <label>Repeat password</label>\r\n                                <input [type]=\"showPassword2 ? 'text' : 'password'\" placeholder=\"Repeat password\"\r\n                                    formControlName=\"confirmNewPassword\" class=\"form-control\"\r\n                                    [ngClass]=\"{ 'is-invalid': submitted && p.confirmNewPassword.errors }\" />\r\n\r\n                                <div>\r\n                                    <i alt=\"show\" class=\"fa fa-eye eye-show\" (click)=\"showPassword2 = !showPassword2\"\r\n                                        [class.hide]=\"showPassword2\"></i>\r\n                                    <i alt=\"hide\" class=\"fa fa-eye-slash eye-hide\"\r\n                                        (click)=\"showPassword2 = !showPassword2\" [class.hide]=\"!showPassword2\"></i>\r\n                                </div>\r\n                                <div *ngIf=\"submitted && p.confirmNewPassword.errors\"\r\n                                    class=\"invalid-feedback alert alert-danger\">\r\n                                    <div *ngIf=\"p.confirmNewPassword.errors.required\">Confirm Password is\r\n                                        required</div>\r\n                                    <div *ngIf=\"p.confirmNewPassword.errors.mustMatch\">Passwords must match\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <button (click)=\"updatePassword()\" class=\"btn btn-info btn-fill\">Update\r\n                            password</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div *ngIf=\"teacher.id\" class=\"row\">\r\n            <div class=\"col-md-12\">\r\n                <div class=\"card\" style=\"padding-left: 10px;\">\r\n                    <div>\r\n                        <h3>Teachings</h3>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-12 mx-auto\">\r\n                            <div class=\"md-form\">\r\n                                <input type=\"text\" class=\"form-control inputSearch\" placeholder=\"Search\"\r\n                                    autocomplete=\"off\" id=\"search\" />\r\n                                <label></label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"content table-responsive table-full-width\" style=\"padding-top: 2%;\">\r\n                        <table class=\"table table-bordered\">\r\n                            <tr *ngFor=\"let teaching of teachings\">\r\n                                <td>\r\n                                    {{teaching.course.name}} {{teaching.type.name}} \r\n                                    [Since {{teaching.startDate | date: 'dd.MM.yyyy'}} until {{teaching.endDate | date:\r\n                                    'dd.MM.yyyy'}}]\r\n                                </td>\r\n                            </tr>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div>\r\n            <button class=\"btn btn-success\" (click)=\"save()\">OK</button>\r\n            <button class=\"btn btn-danger\" (click)=\"goBack()\">Cancel</button>\r\n        </div>\r\n    </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { HttpResponse, HttpClient } from '@angular/common/http';\r\nimport {Observable, Subject} from 'rxjs';\r\n\r\nimport { AuthenticationServiceService } from '../../services/auth/authentication-service.service';\r\nimport { Payment } from '../../model/payment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SluzbaPaymentsServiceService {\r\n\r\n  private paymentsUrl = 'payments';\r\n\r\n  constructor(private http: HttpClient, private authService: AuthenticationServiceService) { }\r\n\r\n  private RegenerateData = new Subject<void>();\r\n\r\n  RegenerateData$ = this.RegenerateData.asObservable();\r\n\r\n  announceChange() {\r\n      this.RegenerateData.next();\r\n  }\r\n  \r\n  getPayments(): Observable<HttpResponse<Payment[]>> {\r\n      let username = this.authService.getCurrentUser().username;\r\n      console.log(\"username: \" + username);\r\n      const url = `${this.paymentsUrl}/getAllPaymentsForUser/${username}`;\r\n      return this.http.get<Payment[]>(url, {observe: 'response'});\r\n  }\r\n\r\n  getPayment(id: number): Observable<HttpResponse<Payment>> {\r\n    const url = `${this.paymentsUrl}/getPaymentById/${id}`;\r\n    return this.http.get<Payment>(url, {observe: 'response'});\r\n  }\r\n\r\n  addPayment(payment: Payment): Observable<HttpResponse<Payment>> {\r\n    const urlPost = `${this.paymentsUrl}/addPayment/${payment.account.id}`;\r\n    return this.http.post<Payment>(urlPost, payment, {observe: 'response'});\r\n  } \r\n\r\n  editPayment(payment: Payment): Observable<HttpResponse<Payment>> {\r\n    const urlPut =`${this.paymentsUrl}/updatePayment/${payment.id}`;\r\n    return this.http.put<Payment>(urlPut, payment, {observe: 'response'});\r\n  }\r\n\r\n  deletePayment(paymentId: number): Observable<HttpResponse<any>> {\r\n    const url = `${this.paymentsUrl}/deletePayment/${paymentId}`;\r\n    return this.http.delete<any>(url, {observe: 'response'});\r\n  }\r\n}\r\n","export class Account implements AccountInterface{\r\n\tpublic id: number;\r\n\tpublic bankAccount: string;\r\n\tpublic model: string;\r\n\tpublic personalCallToNumber: string;\r\n\t\t\r\n\tconstructor(accountCfg:AccountInterface)\r\n\t{\t\r\n\t\tthis.id = accountCfg.id;\r\n\t\tthis.bankAccount = accountCfg.bankAccount;\r\n\t\tthis.model = accountCfg.model;\r\n\t\tthis.personalCallToNumber = accountCfg.personalCallToNumber;\r\n\t}\r\n}\r\n\r\ninterface AccountInterface{\r\n\tid?: number;\r\n\tbankAccount: string;\r\n\tmodel: string;\r\n\tpersonalCallToNumber: string;\r\n}","export class TeachingType implements TeachingTypeInterface{\r\n\tpublic id: number;\r\n\tpublic code: string;\r\n    public name: string;\r\n\t\t\r\n\tconstructor(teachingTypeCfg: TeachingTypeInterface)\r\n\t{\t\r\n\t\tthis.id = teachingTypeCfg.id;\r\n\t\tthis.code = teachingTypeCfg.code;\r\n        this.name = teachingTypeCfg.name;\r\n\t}\r\n}\r\n\r\ninterface TeachingTypeInterface {\r\n\tid?: number;\r\n\tcode: string;\r\n    name: string;\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport {switchMap} from 'rxjs/operators';\r\nimport { ExamPeriod } from 'src/app/model/examPeriod';\r\nimport { SluzbaExamPeriodsServiceService } from '../sluzba-exam-periods/sluzba-exam-periods-service.service';\r\nimport { AuthenticationServiceService } from 'src/app/services/auth/authentication-service.service';\r\n\r\n@Component({\r\n  selector: 'app-sluzba-exam-period-details',\r\n  templateUrl: './sluzba-exam-period-details.component.html',\r\n  styleUrls: ['./sluzba-exam-period-details.component.css']\r\n})\r\nexport class SluzbaExamPeriodDetailsComponent implements OnInit {\r\n\r\n  period: ExamPeriod = new ExamPeriod({ // if we add a new period, create an empty period\r\n      startDate: null,\r\n      endDate: null,\r\n      name: '',\r\n      active:true\r\n  });\r\n\r\n  mode: string = 'ADD';\r\n\r\n  constructor(private examPeriodService: SluzbaExamPeriodsServiceService,\r\n    private route: ActivatedRoute, private location: Location, private router: Router, private authService: AuthenticationServiceService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    if (this.route.snapshot.params['id']) {\r\n      this.mode = 'EDIT';\r\n      // fetch exam part if we edit the existing exam part\r\n      this.route.params.pipe(switchMap((params: Params) =>\r\n        this.examPeriodService.getExamPeriod(+params['id'])))\r\n        .subscribe(res => {\r\n          this.period = res.body;\r\n        });\r\n    }\r\n  }\r\n\r\n  save(): void {\r\n    this.mode == 'ADD' ? this.add() : this.edit();\r\n  }\r\n\r\n  private add(): void {\r\n    this.examPeriodService.addExamPeriod(this.period)\r\n      .subscribe(res => {\r\n        this.examPeriodService.announceChange();\r\n        this.goBack();\r\n      });\r\n  }\r\n\r\n  private edit(): void {\r\n    this.examPeriodService.editExamPeriod(this.period)\r\n      .subscribe(examPeriod => {\r\n        this.examPeriodService.announceChange();\r\n        this.goBack();\r\n      });\r\n  }\r\n\r\n  goBack(): void {\r\n    this.location.back();\r\n  }\r\n\r\n  isAdmin(): boolean {\r\n    return this.authService.isAdmin();\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"isAdmin()\" class=\"main-content\">\r\n    <div class=\"container-fluid\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n                <div class=\"card\" style=\"padding-left: 10px;\">\r\n                    <h3>Exam Period</h3>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"field1c\" class=\"form-control-label\">Name</label>\r\n                        <input type=\"text\" [(ngModel)]=\"period.name\" placeholder=\"Name\" class=\"form-control\"\r\n                            id=\"field1c\" name=\"field1\">\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label>Choose start date</label>\r\n                        <div class=\"input-group\">\r\n                            <input type=\"date\" placeholder=\"yyyy-mm-dd\" [ngModel]=\"period.startDate | date:'yyyy-MM-dd'\"\r\n                                (ngModelChange)=\"period.startDate=$event\" class=\"form-control\" id=\"field2c\" name=\"dp1\">\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label>Choose end date</label>\r\n                        <div class=\"input-group\">\r\n                            <input type=\"date\" placeholder=\"yyyy-mm-dd\" [ngModel]=\"period.endDate | date:'yyyy-MM-dd'\"\r\n                                (ngModelChange)=\"period.endDate=$event\" class=\"form-control\" id=\"field3c\" name=\"dp2\">\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <div class=\"form-group\">\r\n                        <label>Select status</label>\r\n                        <select class=\"form-control\" [(ngModel)]=\"period.active\">\r\n                            <option [ngValue]=\"false\">unactive</option>\r\n                            <option [ngValue]=\"true\">active</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div *ngIf=\"isAdmin()\">\r\n            <button class=\"btn btn-success\" (click)=\"save()\">OK</button>\r\n            <button class=\"btn btn-danger\" (click)=\"goBack()\">Cancel</button>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\n\r\nimport { Enrollment } from 'src/app/model/enrollment';\r\nimport { Student } from 'src/app/model/student';\r\n\r\nimport { NgbDateStruct } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { Account } from 'src/app/model/account';\r\nimport { User } from 'src/app/model/user';\r\nimport { SluzbaStudentsServiceService } from '../sluzba-students/sluzba-students-service.service';\r\nimport { SluzbaCoursesServiceService } from '../sluzba-courses/sluzba-courses-service.service';\r\nimport { SluzbaEnrollmentsServiceService } from './sluzba-enrollments-service.service';\r\nimport { Course } from 'src/app/model/course';\r\n\r\n@Component({\r\n  selector: 'app-sluzba-enrollments',\r\n  templateUrl: './sluzba-enrollments.component.html',\r\n  styleUrls: ['./sluzba-enrollments.component.css']\r\n})\r\nexport class SluzbaEnrollmentsComponent implements OnInit {\r\n\r\n  enrollment: Enrollment;\r\n  students: Student[];\r\n\r\n  constructor(private route: ActivatedRoute, private courseService: SluzbaCoursesServiceService,\r\n    private studentService: SluzbaStudentsServiceService, private enrollmentService: SluzbaEnrollmentsServiceService,\r\n    private location: Location) {\r\n    this.enrollment = new Enrollment({\r\n      startDate: null,\r\n      endDate: null,\r\n      student: new Student({\r\n        cardName: '',\r\n        account: new Account({\r\n          bankAccount:'',\r\n          model: '',\r\n          personalCallToNumber:''\r\n        }),\r\n        user: new User({\r\n          username: '',\r\n          firstName: '',\r\n          lastName: '',\r\n          email: '',\r\n          password: ''\r\n        })\r\n      }),\r\n      course: new Course({\r\n        name: '',\r\n        code: '',\r\n        espb: 0,\r\n        active: true\r\n      })\r\n    });\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.route.queryParams.subscribe(params =>\r\n      this.courseService.getCourse(params['courseId'])\r\n        .subscribe(res => \r\n          this.enrollment.course = res.body \r\n        ));\r\n\r\n    this.studentService.getStudentsList().subscribe(res =>\r\n      this.students = res.body);\r\n  }\r\n\r\n  add(): void {\r\n    this.enrollmentService.addEnrollment(this.enrollment, this.enrollment.course.id)\r\n      .subscribe(enrollment => {\r\n        this.enrollmentService.announceChange();\r\n        this.goBack();\r\n      });\r\n  }\r\n\r\n  goBack(): void {\r\n    this.location.back();\r\n  }\r\n  \r\n\r\n}\r\n","<div class=\"main-content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <div class=\"card\" style=\"padding-left: 10px;\">\r\n          <h3>Enroll students in course {{enrollment.course.name}} </h3>\r\n\r\n          <div class=\"form-group\">\r\n            <label>Select student</label>\r\n            <select class=\"form-control\" [(ngModel)]=\"enrollment.student\">\r\n              <option *ngFor=\"let s of students\" [ngValue]=\"s\">{{s.user.firstName}} {{s.user.lastName}} {{s.cardName}}\r\n              </option>\r\n            </select>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label>Choose start date</label>\r\n\r\n            <div class=\"input-group\">\r\n              <input type=\"date\" placeholder=\"yyyy-mm-dd\" [ngModel]=\"enrollment.startDate | date:'yyyy-MM-dd'\"\r\n                (ngModelChange)=\"enrollment.startDate=$event\" class=\"form-control\" id=\"field1c\" name=\"dp1\">\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <div class=\"form-group\">\r\n            <label>Choose end date</label>\r\n            <div class=\"input-group\">\r\n              <input type=\"date\" placeholder=\"yyyy-mm-dd\" [ngModel]=\"enrollment.endDate | date:'yyyy-MM-dd'\"\r\n                (ngModelChange)=\"enrollment.endDate=$event\" class=\"form-control\" id=\"field2c\" name=\"dp2\">\r\n\r\n            </div>\r\n          </div>\r\n\r\n\r\n\r\n          <div class=\"modal-footer\">\r\n            <button class=\"btn btn-success\" type=\"button\" (click)=\"add()\">OK</button>\r\n            <button class=\"btn btn-danger\" type=\"button\" (click)=\"goBack()\">Cancel</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","export class User implements UserInterface{\r\n\tpublic id: number;\r\n\tpublic username: string;\r\n\tpublic firstName: string;\r\n\tpublic lastName: string;\r\n\tpublic email: string;\r\n\tpublic password: string;\r\n\t\t\r\n\tconstructor(userCfg:UserInterface)\r\n\t{\t\r\n\t\tthis.id = userCfg.id;\r\n\t\tthis.username = userCfg.username;\r\n\t\tthis.firstName = userCfg.firstName;\r\n\t\tthis.lastName = userCfg.lastName;\t\r\n\t\tthis.email = userCfg.email;\r\n\t\tthis.password = userCfg.password;\t\r\n\t}\r\n}\r\n\r\ninterface UserInterface{\r\n\tid?: number;\r\n\tusername: string;\r\n\tfirstName: string;\t\r\n\tlastName: string;\r\n\temail: string;\r\n\tpassword: string;\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport {switchMap} from 'rxjs/operators';\r\n\r\nimport { Course } from 'src/app/model/course';\r\nimport { ExamPart } from 'src/app/model/examPart';\r\nimport { ExamPartType } from 'src/app/model/examPartType';\r\nimport { ExamPeriod } from 'src/app/model/examPeriod';\r\nimport { AuthenticationServiceService } from 'src/app/services/auth/authentication-service.service';\r\nimport { SluzbaCoursesServiceService } from '../sluzba-courses/sluzba-courses-service.service';\r\nimport { SluzbaExamPeriodsServiceService } from '../sluzba-exam-periods/sluzba-exam-periods-service.service';\r\nimport { SluzbaExamsServiceService } from '../sluzba-exams/sluzba-exams-service.service';\r\n\r\n@Component({\r\n  selector: 'app-sluzba-exam-details',\r\n  templateUrl: './sluzba-exam-details.component.html',\r\n  styleUrls: ['./sluzba-exam-details.component.css']\r\n})\r\nexport class SluzbaExamDetailsComponent implements OnInit {\r\n\r\n  examPart: ExamPart = new ExamPart({ // if we add a new exam, create an empty exam\r\n    period: new ExamPeriod({\r\n      startDate: null,\r\n      endDate: null,\r\n      name: '',\r\n      active:true\r\n    }),\r\n    type: new ExamPartType({\r\n      name: '',\r\n      code: ''\r\n    }),\r\n    date: null,\r\n    location: '',\r\n    points: 0,\r\n    active: true,\r\n    course: new Course({\r\n      name: '',\r\n      espb: 0,\r\n      code: '',\r\n      active: true\r\n    }),\r\n  });\r\n\r\n  types: ExamPartType[];\r\n  periods: ExamPeriod[];\r\n  courses: Course[];\r\n\r\n  mode: string = 'ADD';\r\n\r\n  constructor(private courseService: SluzbaCoursesServiceService, private examService: SluzbaExamsServiceService, private examPeriodService: SluzbaExamPeriodsServiceService,\r\n    private route: ActivatedRoute, private location: Location, private router: Router, private authService: AuthenticationServiceService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.examService.getExamPartTypes().subscribe(res =>\r\n      this.types = res.body);\r\n    \r\n    this.courseService.getCourses().subscribe(res =>\r\n      this.courses = res.body);\r\n\r\n    if (this.route.snapshot.params['id']) {\r\n      this.mode = 'EDIT';\r\n      this.examPeriodService.getExamPeriods().subscribe(res =>\r\n        this.periods = res.body);\r\n      // fetch exam part if we edit the existing exam part\r\n      this.route.params.pipe(switchMap((params: Params) =>\r\n        this.examService.getExamPart(+params['id'])))\r\n        .subscribe(res => {\r\n          this.examPart = res.body;\r\n        });\r\n    }else{\r\n      this.examPeriodService.getActiveExamPeriods().subscribe(res =>\r\n        this.periods = res.body);\r\n    }\r\n  }\r\n\r\n  save(): void {\r\n    this.mode == 'ADD' ? this.add() : this.edit();\r\n  }\r\n\r\n  private add(): void {\r\n    this.examService.addExamPart(this.examPart)\r\n      .subscribe(res => {\r\n        this.examService.announceChange();\r\n        this.goBack();\r\n      });\r\n  }\r\n\r\n  private edit(): void {\r\n    this.examService.editExamPart(this.examPart)\r\n      .subscribe(examPart => {\r\n        this.examService.announceChange();\r\n        this.goBack();\r\n      });\r\n  }\r\n\r\n  goBack(): void {\r\n    this.location.back();\r\n  }\r\n\r\n\r\n  isAdmin(): boolean {\r\n    return this.authService.isAdmin();\r\n  }\r\n\r\n}\r\n","<div class=\"main-content\">\r\n    <div class=\"container-fluid\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n                <div class=\"card\" style=\"padding-left: 10px;\">\r\n                    <h3>Exam Part</h3>\r\n                    <div class=\"form-group\">\r\n                        <label>Select course</label>\r\n                        <select class=\"form-control\" [(ngModel)]=\"examPart.course.id\">\r\n                            <option *ngFor=\"let c of courses\" [ngValue]=\"c.id\">{{c.name}}({{c.code}})</option>\r\n                        </select>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label>Select type</label>\r\n                        <select class=\"form-control\" [(ngModel)]=\"examPart.type.id\">\r\n                            <option *ngFor=\"let t of types\" [ngValue]=\"t.id\">{{t.name}}({{t.code}})</option>\r\n                        </select>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label>Select period</label>\r\n                        <select class=\"form-control\" [(ngModel)]=\"examPart.period.id\">\r\n                            <option *ngFor=\"let p of periods\" [ngValue]=\"p.id\">{{p.name}} [Since {{ p.startDate | date:\r\n                                'dd.MM.yyyy'}} until {{ p.endDate | date: 'dd.MM.yyyy'}}]</option>\r\n                        </select>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label>Choose date</label>\r\n                        <div class=\"input-group\">\r\n                            <input type=\"date\" placeholder=\"yyyy-mm-dd\" [ngModel]=\"examPart.date | date:'yyyy-MM-dd'\"\r\n                                (ngModelChange)=\"examPart.date=$event\" class=\"form-control\" id=\"field1c\" name=\"dp1\">\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"field2c\" class=\"form-control-label\">Location</label>\r\n                        <input type=\"text\" [(ngModel)]=\"examPart.location\" placeholder=\"Location\" class=\"form-control\"\r\n                            id=\"field2c\" name=\"field2\">\r\n                        <label for=\"field3c\" class=\"form-control-label\">Max points</label>\r\n                        <input type=\"number\" [(ngModel)]=\"examPart.points\" placeholder=\"Max points\" class=\"form-control\"\r\n                            id=\"field3c\" name=\"field3\">\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label>Select status</label>\r\n                        <select class=\"form-control\" [(ngModel)]=\"examPart.active\">\r\n                            <option [ngValue]=\"false\">canceled</option>\r\n                            <option [ngValue]=\"true\">active</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div *ngIf=\"isAdmin()\">\r\n            <button class=\"btn btn-success\" (click)=\"save()\">OK</button>\r\n            <button class=\"btn btn-danger\" (click)=\"goBack()\">Cancel</button>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { SluzbaStudentsServiceService } from './sluzba-students-service.service';\r\nimport { AuthenticationServiceService } from 'src/app/services/auth/authentication-service.service';\r\nimport { User } from 'src/app/model/user';\r\n\r\ninterface Student {\r\n  id?: number;\r\n  cardName: string;\r\n  user: User;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-sluzba-students',\r\n  templateUrl: './sluzba-students.component.html',\r\n  styleUrls: ['./sluzba-students.component.css']\r\n})\r\nexport class SluzbaStudentsComponent implements OnInit {\r\n\r\n  students: Student[];\r\n\r\n  search = '';\r\n  sort = '';\r\n\r\n  page = 0;\r\n  count = 0;\r\n  size = 3;\r\n  pageSizes = [3, 6, 9];\r\n\r\n  subscription: Subscription;\r\n\r\n  constructor(private studentService: SluzbaStudentsServiceService, private router: Router, private authService: AuthenticationServiceService) {\r\n    this.subscription = studentService.RegenerateData$.subscribe(() =>\r\n      this.getStudents()\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getStudents();\r\n  }\r\n\r\n  getRequestParams(search: string, page: number, pageSize: number, sort: string): any {\r\n    // tslint:disable-next-line:prefer-const\r\n    let params: any = {};\r\n\r\n    if (search) {\r\n      params[`search`] = search;\r\n    }\r\n\r\n    if (page) {\r\n      params[`page`] = page - 1;\r\n    }\r\n\r\n    if (pageSize) {\r\n      params[`size`] = pageSize;\r\n    }\r\n\r\n    if (sort) {\r\n      params[`sort`] = sort;\r\n    }\r\n\r\n    return params;\r\n  }\r\n\r\n  getStudents(): void {\r\n    const params = this.getRequestParams(this.search, this.page, this.size,this.sort);\r\n\r\n    this.studentService.getStudents(params)\r\n    .subscribe(\r\n      response => {\r\n        const { students, totalItems, currentPage} = response;\r\n        this.students = students;\r\n        this.count = totalItems;\r\n        this.page = currentPage +1;\r\n        console.log(response);\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  handlePageChange(event: number): void {\r\n    this.page = event;\r\n    this.getStudents();\r\n  }\r\n\r\n  handlePageSizeChange(event: any): void {\r\n    this.size = event.target.value;\r\n    this.page = 1;\r\n    this.getStudents();\r\n  }\r\n\r\n  // getStudents() {\r\n  //   this.studentService.getStudents().subscribe(res =>\r\n  //     this.students = res.body);\r\n  // }\r\n\r\n  \r\n  gotoAdd(): void {\r\n    this.router.navigate(['/addStudent']);\r\n  }\r\n\r\n  gotoEdit(student: Student): void {\r\n    this.router.navigate(['/editStudent', student.id]);\r\n  }\r\n\r\n  deleteStudent(studentId: number, studentFirstName: string, studentLastName: string): void {\r\n    if(confirm(\"Are you sure to delete student \" + studentFirstName + \" \" + studentLastName + \"?\")){\r\n    this.studentService.deleteStudent(studentId).subscribe(\r\n      () => this.getStudents()\r\n    );\r\n    }\r\n  }\r\n\r\n  isLoggedIn():boolean{\r\n    return this.authService.isLoggedIn();\r\n  }\r\n\r\n  isAdmin():boolean{\r\n    return this.authService.isAdmin();\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"isLoggedIn()  && isAdmin()\" class=\"main-content\" style=\"padding-top: 2%;\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12 mx-auto\">\r\n        <div class=\"md-form\">\r\n          <input type=\"text\" class=\"form-control inputSearch\" placeholder=\"Search\" autocomplete=\"off\" id=\"search\" [(ngModel)]=\"search\" (keyup)=\"getStudents()\"/>\r\n          <label></label>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <div class=\"card\">\r\n          <!--         <div class=\"header\">\r\n                          <h4 class=\"title\">Striped Table with Hover</h4>\r\n                          <p class=\"category\">Here is a subtitle for this table</p>\r\n                      </div> -->\r\n          <div class=\"content table-responsive table-full-width\" style=\"padding-top: 2%;\">\r\n            <table class=\"table table-hover\" style=\"text-align: center;\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">#</th>\r\n                  <th scope=\"col\">Firstname</th>\r\n                  <th scope=\"col\">Lastname</th>\r\n                  <th scope=\"col\">Username</th>\r\n                  <th scope=\"col\">Email</th>\r\n                  <th scope=\"col\">Cardname</th>\r\n\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr *ngFor=\"let student of students|paginate: {\r\n                  itemsPerPage: size,\r\n                  currentPage: page,\r\n                  totalItems: count\r\n                }; let i = index\">\r\n                  <th scope=\"row\">{{ i + 1 }}</th>\r\n                  <td>{{ student.user.firstName }}</td>\r\n                  <td>{{ student.user.lastName }}</td>\r\n                  <td>{{ student.user.username }}</td>\r\n                  <td>{{ student.user.email }}</td>\r\n                  <td>{{ student.cardName }}</td>\r\n                  <td *ngIf=\"isAdmin()\">\r\n                    <button type=\"button\" class=\"btn btn-primary\" aria-label=\"Edit\" (click)=\"gotoEdit(student)\">\r\n                      <span class=\"fa fa-edit\" aria-hidden=\"true\"></span>\r\n                    </button>\r\n\r\n                    <button type=\"button\" class=\"btn btn-danger\" aria-label=\"Delete\"\r\n                      (click)=\"deleteStudent(student.id, student.user.firstName, student.user.lastName)\">\r\n                      <span class=\"fa fa-trash\" aria-hidden=\"true\"></span>\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-9\">\r\n                  <pagination-controls\r\n                    previousLabel=\"Prev\"\r\n                    nextLabel=\"Next\"\r\n                    [responsive]=\"true\"\r\n                    (pageChange)=\"handlePageChange($event)\"\r\n                  ></pagination-controls>\r\n              </div>   \r\n              <div class=\"col-md-\">          \r\n                Items per Page:\r\n                <select (change)=\"handlePageSizeChange($event)\">\r\n                  <option *ngFor=\"let size of pageSizes\" [ngValue]=\"size\">\r\n                    {{ size }}\r\n                  </option>\r\n                </select>\r\n              </div>           \r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div *ngIf=\"isAdmin()\" class=\"right\">\r\n          <button type=\"button\" class=\"btn btn-success\" aria-label=\"Add\" (click)=\"gotoAdd()\">\r\n            <span class=\"fa fa-plus\" aria-hidden=\"true\"></span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport {switchMap} from 'rxjs/operators';\r\nimport { HttpEventType, HttpResponse } from '@angular/common/http';\r\n\r\nimport { SluzbaStudentsServiceService } from '../sluzba-students/sluzba-students-service.service';\r\nimport { SluzbaDocumentDetailsServiceService } from './sluzba-document-details-service.service';\r\nimport { AuthenticationServiceService } from 'src/app/services/auth/authentication-service.service';\r\nimport { DocumentType } from 'src/app/model/document-type';\r\nimport { Student } from 'src/app/model/student';\r\nimport { Account } from 'src/app/model/account';\r\nimport { User } from 'src/app/model/user';\r\nimport { Document } from 'src/app/model/document';\r\n\r\n@Component({\r\n  selector: 'app-sluzba-document-details',\r\n  templateUrl: './sluzba-document-details.component.html',\r\n  styleUrls: ['./sluzba-document-details.component.css']\r\n})\r\nexport class SluzbaDocumentDetailsComponent implements OnInit {\r\n\r\n  selectedFiles?: FileList;\r\n  currentFile?: File;\r\n  message = '';\r\n  errorMsg = '';\r\n\r\n  document: Document= new Document({ // if we add a new document, create an empty document\r\n    title: '',\r\n    url:'',\r\n    type: new DocumentType({\r\n      name: '',\r\n      code: ''\r\n    }),\r\n    student: new Student({\r\n      cardName: '',\r\n      account: new Account({\r\n        bankAccount:'',\r\n        model: '',\r\n        personalCallToNumber:''\r\n      }),\r\n      user: new User({\r\n        username: '',\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        password: ''\r\n      })\r\n    })\r\n  });\r\n\r\n  types: DocumentType[];\r\n\r\n  constructor(private studentService: SluzbaStudentsServiceService, private documentService: SluzbaDocumentDetailsServiceService, \r\n    private route: ActivatedRoute, private location: Location, private router: Router, private authService: AuthenticationServiceService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.documentService.getDocumentTypes().subscribe(res =>\r\n      this.types = res.body);\r\n\r\n\r\n      this.route.queryParams.subscribe(params =>\r\n        this.studentService.getStudent(params['studentId'])\r\n          .subscribe(res => \r\n            this.document.student = res.body \r\n          ));\r\n  }\r\n\r\n\r\n  goBack(): void {\r\n    this.location.back();\r\n  }\r\n\r\n  isAdmin():boolean{\r\n    return this.authService.isAdmin();\r\n  }\r\n\r\n  selectFile(event: any): void {\r\n    this.selectedFiles = event.target.files;\r\n    console.log(this.selectedFiles);\r\n  }\r\n\r\n  upload(): void {\r\n    this.errorMsg = '';\r\n\r\n    if (this.selectedFiles) {\r\n      const file: File | null = this.selectedFiles.item(0);\r\n\r\n      if (file) {\r\n        this.currentFile = file;\r\n\r\n        this.documentService.upload(this.currentFile, this.document.student.id, this.document.type.id).subscribe(\r\n          document => {\r\n            this.documentService.announceChange();\r\n            this.goBack();\r\n          });\r\n      }\r\n\r\n      this.selectedFiles = undefined;\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"main-content\">\r\n    <div class=\"container-fluid\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n                <div class=\"card\" style=\"padding-left: 10px;\">\r\n                    <h4>Select document type</h4>\r\n                    <div class=\"form-group\">\r\n                        <select class=\"form-control\" [(ngModel)]=\"document.type.id\">\r\n                            <option *ngFor=\"let dt of types\" [ngValue]=\"dt.id\">{{dt.name}}</option>\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div class=\"row\">\r\n                        <div>\r\n                            <label class=\"btn btn-default p-0\">\r\n                                <input type=\"file\" (change)=\"selectFile($event)\"/>\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"modal-footer\" *ngIf=\"isAdmin()\">\r\n                    <button class=\"btn btn-success\" [disabled]=\"!selectedFiles\" (click)=\"upload()\">\r\n                        Upload file\r\n                    </button>\r\n                    <button class=\"btn btn-danger\" (click)=\"goBack()\">Cancel</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-sluzba-not-found-page',\r\n  templateUrl: './sluzba-not-found-page.component.html',\r\n  styleUrls: ['./sluzba-not-found-page.component.css']\r\n})\r\nexport class SluzbaNotFoundPageComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<h1>\r\n    Page not found!\r\n  </h1>\r\n  ","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class JwtUtilsService {\r\n\r\n  constructor() { }\r\n\r\n  getRoles(token: string) {\r\n    let jwtData = token.split('.')[1];\r\n    let decodedJwtJsonData = window.atob(jwtData);\r\n    let decodedJwtData = JSON.parse(decodedJwtJsonData);\r\n    console.log(decodedJwtData);\r\n\r\n    return [decodedJwtData.role];\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { SluzbaTeachersServiceService } from './sluzba-teachers-service.service';\r\nimport { AuthenticationServiceService } from 'src/app/services/auth/authentication-service.service';\r\nimport { User } from 'src/app/model/user';\r\n\r\ninterface Teacher {\r\n  id?: number;\r\n  user: User;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-sluzba-teachers',\r\n  templateUrl: './sluzba-teachers.component.html',\r\n  styleUrls: ['./sluzba-teachers.component.css']\r\n})\r\nexport class SluzbaTeachersComponent implements OnInit {\r\n\r\n  teachers: Teacher[];\r\n\r\n  search = '';\r\n  sort = '';\r\n\r\n  page = 0;\r\n  count = 0;\r\n  size = 3;\r\n  pageSizes = [3, 6, 9];\r\n\r\n  subscription: Subscription;\r\n\r\n  constructor(private teacherService: SluzbaTeachersServiceService, private router: Router, private authService: AuthenticationServiceService) {\r\n    this.subscription = teacherService.RegenerateData$.subscribe(() =>\r\n      this.getTeachers()\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getTeachers();\r\n  }\r\n\r\n  \r\n  getRequestParams(search: string, page: number, pageSize: number, sort: string): any {\r\n    // tslint:disable-next-line:prefer-const\r\n    let params: any = {};\r\n\r\n    if (search) {\r\n      params[`search`] = search;\r\n    }\r\n\r\n    if (page) {\r\n      params[`page`] = page - 1;\r\n    }\r\n\r\n    if (pageSize) {\r\n      params[`size`] = pageSize;\r\n    }\r\n\r\n    if (sort) {\r\n      params[`sort`] = sort;\r\n    }\r\n\r\n    return params;\r\n  }\r\n\r\n  getTeachers(): void {\r\n    const params = this.getRequestParams(this.search, this.page, this.size,this.sort);\r\n\r\n    this.teacherService.getTeachers(params)\r\n    .subscribe(\r\n      response => {\r\n        const { teachers, totalItems, currentPage} = response;\r\n        this.teachers = teachers;\r\n        this.count = totalItems;\r\n        this.page = currentPage +1;\r\n        console.log(response);\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  handlePageChange(event: number): void {\r\n    this.page = event;\r\n    this.getTeachers();\r\n  }\r\n\r\n  handlePageSizeChange(event: any): void {\r\n    this.size = event.target.value;\r\n    this.page = 1;\r\n    this.getTeachers();\r\n  }\r\n\r\n  // getTeachers() {\r\n  //   this.teacherService.getTeachers().subscribe(res =>\r\n  //     this.teachers = res.body);\r\n  // }\r\n\r\n  isLoggedIn():boolean{\r\n    return this.authService.isLoggedIn();\r\n  }\r\n\r\n  isAdmin():boolean{\r\n    return this.authService.isAdmin();\r\n  }\r\n\r\n  gotoAdd(): void {\r\n    this.router.navigate(['/addTeacher']);\r\n  }\r\n\r\n  gotoEdit(teacher: Teacher): void {\r\n    this.router.navigate(['/editTeacher', teacher.id]);\r\n  }\r\n\r\n  deleteTeacher(teacherId: number, teacherFirstName: string, teacherLastName: string): void {\r\n    if(confirm(\"Are you sure to delete teacher \" + teacherFirstName + \" \" + teacherLastName + \"?\")){\r\n    this.teacherService.deleteTeacher(teacherId).subscribe(\r\n      () => this.getTeachers()\r\n    );\r\n    }\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"isLoggedIn()  && isAdmin()\" class=\"main-content\" style=\"padding-top: 2%;\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12 mx-auto\">\r\n        <div class=\"md-form\">\r\n          <input type=\"text\" class=\"form-control inputSearch\" placeholder=\"Search\" autocomplete=\"off\" id=\"search\" [(ngModel)]=\"search\" (keyup)=\"getTeachers()\"/>\r\n          <label></label>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <div class=\"card\">\r\n          <div class=\"content table-responsive table-full-width\" style=\"padding-top: 2%;\">\r\n            <table class=\"table table-hover\" style=\"text-align: center;\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">#</th>\r\n                  <th scope=\"col\">Firstname</th>\r\n                  <th scope=\"col\">Lastname</th>\r\n                  <th scope=\"col\">Username</th>\r\n                  <th scope=\"col\">Email</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr *ngFor=\"let teacher of teachers|paginate: {\r\n                  itemsPerPage: size,\r\n                  currentPage: page,\r\n                  totalItems: count\r\n                }; let i = index\">\r\n                  <th scope=\"row\">{{ i + 1 }}</th>\r\n                  <td>{{ teacher.user.firstName }}</td>\r\n                  <td>{{ teacher.user.lastName }}</td>\r\n                  <td>{{ teacher.user.username }}</td>\r\n                  <td>{{ teacher.user.email }}</td>\r\n                  <td *ngIf=\"isAdmin()\">\r\n                    <button type=\"button\" class=\"btn btn-primary\" aria-label=\"Edit\" (click)=\"gotoEdit(teacher)\">\r\n                      <span class=\"fa fa-edit\" aria-hidden=\"true\"></span>\r\n                    </button>\r\n\r\n                    <button type=\"button\" class=\"btn btn-danger\" aria-label=\"Delete\"\r\n                      (click)=\"deleteTeacher(teacher.id, teacher.user.firstName, teacher.user.lastName)\">\r\n                      <span class=\"fa fa-trash\" aria-hidden=\"true\"></span>\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-9\">\r\n                  <pagination-controls\r\n                    previousLabel=\"Prev\"\r\n                    nextLabel=\"Next\"\r\n                    [responsive]=\"true\"\r\n                    (pageChange)=\"handlePageChange($event)\"\r\n                  ></pagination-controls>\r\n              </div>   \r\n              <div class=\"col-md-\">          \r\n                Items per Page:\r\n                <select (change)=\"handlePageSizeChange($event)\">\r\n                  <option *ngFor=\"let size of pageSizes\" [ngValue]=\"size\">\r\n                    {{ size }}\r\n                  </option>\r\n                </select>\r\n              </div>           \r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div *ngIf=\"isAdmin()\" class=\"right\">\r\n          <button type=\"button\" class=\"btn btn-success\" aria-label=\"Add\" (click)=\"gotoAdd()\">\r\n            <span class=\"fa fa-plus\" aria-hidden=\"true\"></span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { HttpResponse, HttpClient } from '@angular/common/http';\r\nimport {Observable, Subject} from 'rxjs';\r\nimport { User } from 'src/app/model/user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SluzbaUserServiceService {\r\n\r\n  private usersUrl = 'users';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  private RegenerateData = new Subject<void>();\r\n\r\n  RegenerateData$ = this.RegenerateData.asObservable();\r\n\r\n  announceChange() {\r\n      this.RegenerateData.next();\r\n  }\r\n\r\n  addUser(user: User): Observable<HttpResponse<User>> {\r\n    const urlPost = `${this.usersUrl}/addUser`;\r\n    return this.http.post<User>(urlPost, user, {observe: 'response'});\r\n  } \r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { saveAs } from 'file-saver';\r\n\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { AuthenticationServiceService } from 'src/app/services/auth/authentication-service.service';\r\nimport { Account } from 'src/app/model/account';\r\nimport { Student } from 'src/app/model/student';\r\nimport { User } from 'src/app/model/user';\r\nimport { SluzbaStudentsServiceService } from '../sluzba-students/sluzba-students-service.service';\r\nimport { Document } from 'src/app/model/document';\r\nimport { SluzbaDocumentsServiceService } from '../sluzba-documents/sluzba-documents-service.service';\r\nimport { Payment } from 'src/app/model/payment';\r\nimport { SluzbaPaymentsServiceService } from '../sluzba-payments/sluzba-payments-service.service';\r\nimport { SluzbaAccountServiceService } from '../sluzba-account/sluzba-account-service.service';\r\nimport { SluzbaProfileServiceService } from '../sluzba-profile/sluzba-profile-service.service';\r\nimport { Enrollment } from 'src/app/model/enrollment';\r\n\r\n@Component({\r\n  selector: 'app-sluzba-student-details',\r\n  templateUrl: './sluzba-student-details.component.html',\r\n  styleUrls: ['./sluzba-student-details.component.css']\r\n})\r\nexport class SluzbaStudentDetailsComponent implements OnInit {\r\n\r\n  userForm: FormGroup;\r\n  studentForm: FormGroup;\r\n  passwordForm: FormGroup;\r\n  submitted = false;\r\n\r\n  student: Student = new Student({ // if we add a new student, create an empty student\r\n    cardName: '',\r\n    account: new Account({\r\n      bankAccount: '',\r\n      model: '',\r\n      personalCallToNumber: ''\r\n    }),\r\n    user: new User({\r\n      username: '',\r\n      firstName: '',\r\n      lastName: '',\r\n      email: '',\r\n      password: ''\r\n    })\r\n  });\r\n\r\n  enrollments: Enrollment[];\r\n  documents: Document[];\r\n  payments: Payment[];\r\n  available: 0 | number;\r\n\r\n  public showPassword: boolean;\r\n  public showPassword2: boolean;\r\n\r\n  mode: string = 'ADD';\r\n\r\n  constructor(private formBuilder: FormBuilder, private profileService: SluzbaProfileServiceService, private studentService: SluzbaStudentsServiceService, private accountService: SluzbaAccountServiceService, private documentService: SluzbaDocumentsServiceService, private paymentService: SluzbaPaymentsServiceService,\r\n    private route: ActivatedRoute, private location: Location, private router: Router, private authService: AuthenticationServiceService) {\r\n  }\r\n\r\n  isShowDiv = false;\r\n\r\n  toggleDisplayDiv() {\r\n    this.isShowDiv = !this.isShowDiv;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.userForm = this.formBuilder.group({\r\n      firstName: ['', Validators.required],\r\n      lastName: ['', Validators.required],\r\n      username: ['', Validators.required],\r\n      email: ['', [Validators.required, Validators.email]]\r\n    });\r\n    this.studentForm = this.formBuilder.group({\r\n      cardName: ['', Validators.required],\r\n      bankAccount: ['', Validators.required],\r\n      model: ['', Validators.required],\r\n      personalCallToNumber: ['', Validators.required]\r\n    });\r\n    this.passwordForm = this.formBuilder.group({\r\n      newPassword: ['', [Validators.required, Validators.minLength(6)]],\r\n      confirmNewPassword: ['', Validators.required]\r\n    }, {\r\n      validator: this.MustMatch('newPassword', 'confirmNewPassword')\r\n    });\r\n\r\n    if (this.route.snapshot.params['id']) {\r\n      this.mode = 'EDIT';\r\n      // fetch student if we edit the existing student\r\n      this.route.params.pipe(switchMap((params: Params) =>\r\n        this.studentService.getStudent(+params['id'])))\r\n        .subscribe(res => {\r\n          this.student = res.body;\r\n          this.userForm.get('firstName').setValue(this.student.user.firstName);\r\n          this.userForm.get('lastName').setValue(this.student.user.lastName);\r\n          this.userForm.get('username').setValue(this.student.user.username);\r\n          this.userForm.get('email').setValue(this.student.user.email);\r\n          this.studentForm.get('cardName').setValue(this.student.cardName);\r\n          this.studentForm.get('bankAccount').setValue(this.student.account.bankAccount);\r\n          this.studentForm.get('model').setValue(this.student.account.model);\r\n          this.studentForm.get('personalCallToNumber').setValue(this.student.account.personalCallToNumber);\r\n          this.getAvailableFunds();\r\n          this.getEnrollments();\r\n          this.getDocuments();\r\n          this.getPayments();\r\n        });\r\n    }\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get u() { return this.userForm.controls; }\r\n  get s() { return this.studentForm.controls; }\r\n  get p() { return this.passwordForm.controls; }\r\n\r\n  private getEnrollments(): void {\r\n    this.studentService.getStudentEnrollments(this.student.id).subscribe(res =>\r\n      this.enrollments = res.body);\r\n  }\r\n\r\n  private getDocuments(): void {\r\n    this.studentService.getStudentDocuments(this.student.id).subscribe(res =>\r\n      this.documents = res.body);\r\n  }\r\n\r\n  private getPayments(): void {\r\n    this.studentService.getAccountPayments(this.student.account.id).subscribe(res =>\r\n      this.payments = res.body);\r\n  }\r\n\r\n  private getAvailableFunds(): void {\r\n    this.accountService.getAvailableFunds(this.student.account.id).subscribe(res =>\r\n      this.available = res.body);\r\n  }\r\n\r\n  MustMatch(controlName: string, matchingControlName: string) {\r\n    return (formGroup: FormGroup) => {\r\n      const control = formGroup.controls[controlName];\r\n      const matchingControl = formGroup.controls[matchingControlName];\r\n\r\n      if (matchingControl.errors && !matchingControl.errors.mustMatch) {\r\n        // return if another validator has already found an error on the matchingControl\r\n        return;\r\n      }\r\n\r\n      // set error on matchingControl if validation fails\r\n      if (control.value !== matchingControl.value) {\r\n        matchingControl.setErrors({ mustMatch: true });\r\n      } else {\r\n        matchingControl.setErrors(null);\r\n      }\r\n    }\r\n  }\r\n\r\n  save(): void {\r\n    this.mode == 'ADD' ? this.add() : this.edit();\r\n  }\r\n\r\n  private add(): void {\r\n    this.submitted = true;\r\n\r\n    // stop here if form is invalid\r\n    if (this.userForm.invalid || this.studentForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.student.user.firstName = this.userForm.get('firstName').value;\r\n    this.student.user.lastName = this.userForm.get('lastName').value;\r\n    this.student.user.username = this.userForm.get('username').value;\r\n    this.student.user.email = this.userForm.get('email').value;\r\n    this.student.cardName = this.studentForm.get('cardName').value;\r\n    this.student.account.bankAccount = this.studentForm.get('bankAccount').value;\r\n    this.student.account.model = this.studentForm.get('model').value;\r\n    this.student.account.personalCallToNumber = this.studentForm.get('personalCallToNumber').value;\r\n\r\n    this.studentService.addStudent(this.student)\r\n      .subscribe(res => {\r\n        this.studentService.announceChange();\r\n        this.goBack();\r\n      });\r\n  }\r\n\r\n  private edit(): void {\r\n    this.submitted = true;\r\n\r\n    // stop here if form is invalid\r\n    if (this.userForm.invalid || this.studentForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.student.user.firstName = this.userForm.get('firstName').value;\r\n    this.student.user.lastName = this.userForm.get('lastName').value;\r\n    this.student.user.username = this.userForm.get('username').value;\r\n    this.student.user.email = this.userForm.get('email').value;\r\n    this.student.cardName = this.studentForm.get('cardName').value;\r\n    this.student.account.bankAccount = this.studentForm.get('bankAccount').value;\r\n    this.student.account.model = this.studentForm.get('model').value;\r\n    this.student.account.personalCallToNumber = this.studentForm.get('personalCallToNumber').value;\r\n\r\n    this.studentService.editStudent(this.student)\r\n      .subscribe(student => {\r\n        this.studentService.announceChange();\r\n        this.goBack();\r\n      });\r\n  }\r\n\r\n  updatePassword(): void {\r\n    this.submitted = true;\r\n\r\n    // stop here if form is invalid\r\n    if (this.passwordForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    console.log(\"new: \" + this.passwordForm.get('newPassword').value);\r\n    this.profileService.updatePassword(this.student.user.id, this.passwordForm.get('newPassword').value)\r\n      .subscribe(student => {\r\n        this.profileService.announceChange();\r\n        this.goBack();\r\n      });\r\n\r\n  }\r\n\r\n  download(document: Document): void {\r\n    this.documentService\r\n      .download(document.id)\r\n      .subscribe(blob => saveAs(blob, document.title));\r\n  }\r\n\r\n  deleteDocument(documentId: number, documentTitle: string): void {\r\n    if (confirm(\"Are you sure to delete document \" + documentTitle + \"?\")) {\r\n      this.documentService.deleteDocument(documentId).subscribe(\r\n        () => this.getDocuments()\r\n      );\r\n    }\r\n  }\r\n\r\n  gotoAddPayment(): void {\r\n    this.router.navigate(['/addPayment'], { queryParams: { accountId: this.student.account.id } });\r\n  }\r\n\r\n\r\n  gotoEditPayment(payment: Payment): void {\r\n    this.router.navigate(['/editPayment', payment.id]);\r\n  }\r\n\r\n  deletePayment(paymentId: number, amount: number, purpose: string): void {\r\n    if (confirm(\"Are you sure to delete paymemt \"  + purpose + \" | \" + amount + \" ?\")) {\r\n      this.paymentService.deletePayment(paymentId).subscribe(\r\n        () => this.getPayments()\r\n      );\r\n    }\r\n  }\r\n\r\n  gotoAddDocument(): void {\r\n    this.router.navigate(['/addDocument'], { queryParams: { studentId: this.student.id } });\r\n  }\r\n\r\n  goBack(): void {\r\n    this.location.back();\r\n  }\r\n\r\n\r\n  isAdmin(): boolean {\r\n    return this.authService.isAdmin();\r\n  }\r\n\r\n}\r\n","<div class=\"main-content\">\r\n    <div class=\"container-fluid\" *ngIf=\"isAdmin()\">\r\n        <div class=\"row\">\r\n            <div class=\"card\">\r\n                <div class=\"header\">\r\n                    <h4 class=\"title\">Student</h4>\r\n                </div>\r\n                <div class=\"content\">\r\n                    <form [formGroup]=\"userForm\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label>First Name</label>\r\n                                    <input type=\"text\" placeholder=\"First name\" formControlName=\"firstName\"\r\n                                        class=\"form-control text\"\r\n                                        [ngClass]=\"{ 'is-invalid': submitted && u.firstName.errors }\" />\r\n                                    <div *ngIf=\"submitted && u.firstName.errors\"\r\n                                        class=\"invalid-feedback alert alert-danger\">\r\n                                        <div *ngIf=\"u.firstName.errors.required\">First Name is required</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label>Last Name</label>\r\n                                    <input type=\"text\" placeholder=\"Last Name\" formControlName=\"lastName\"\r\n                                        class=\"form-control text\"\r\n                                        [ngClass]=\"{ 'is-invalid': submitted && u.lastName.errors }\" />\r\n                                    <div *ngIf=\"submitted && u.lastName.errors\"\r\n                                        class=\"invalid-feedback alert alert-danger\">\r\n                                        <div *ngIf=\"u.lastName.errors.required\">Last Name is required</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label>Username</label>\r\n                                    <input type=\"text\" placeholder=\"Username\" formControlName=\"username\"\r\n                                        class=\"form-control text\"\r\n                                        [ngClass]=\"{ 'is-invalid': submitted && u.username.errors }\" />\r\n                                    <div *ngIf=\"submitted && u.username.errors\"\r\n                                        class=\"invalid-feedback alert alert-danger\">\r\n                                        <div *ngIf=\"u.username.errors.required\">Username is required</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label>Email address</label>\r\n                                    <input type=\"email\" placeholder=\"Email\" formControlName=\"email\"\r\n                                        class=\"form-control text\"\r\n                                        [ngClass]=\"{ 'is-invalid': submitted && u.email.errors }\" />\r\n                                    <div *ngIf=\"submitted && u.email.errors\"\r\n                                        class=\"invalid-feedback alert alert-danger\">\r\n                                        <div *ngIf=\"u.email.errors.required\">Email is required</div>\r\n                                        <div *ngIf=\"u.email.errors.email\">Email must be a valid email address\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div *ngIf=\"student.id\">\r\n                            <button (click)=toggleDisplayDiv() class=\"btn btn-secondary btn-fill pull-left\">Change\r\n                                password</button>\r\n                        </div>\r\n\r\n                        <div class=\"clearfix\"></div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n            <div *ngIf=\"student.id\" class=\"card\" [hidden]=\"!isShowDiv\">\r\n                <div class=\"header\">\r\n                    <h4 class=\"title\">Change password</h4>\r\n                </div>\r\n                <div class=\"content\">\r\n                    <form [formGroup]=\"passwordForm\">\r\n\r\n                        <div class=\"row form-group inner-addon right-addon\">\r\n                            <div class=\"col-md-6 input-group\">\r\n                                <label>New password</label>\r\n                                <input [type]=\"showPassword ? 'text' : 'password'\" formControlName=\"newPassword\"\r\n                                    class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && p.newPassword.errors }\"\r\n                                    placeholder=\"New password\" name=\"newPassword\" />\r\n\r\n                                <div>\r\n                                    <i alt=\"show\" class=\"fa fa-eye eye-show\" (click)=\"showPassword = !showPassword\"\r\n                                        [class.hide]=\"showPassword\"></i>\r\n                                    <i alt=\"hide\" class=\"fa fa-eye-slash eye-hide\"\r\n                                        (click)=\"showPassword = !showPassword\" [class.hide]=\"!showPassword\"></i>\r\n                                </div>\r\n                                <div *ngIf=\"submitted && p.newPassword.errors\"\r\n                                    class=\"invalid-feedback alert alert-danger\">\r\n                                    <div *ngIf=\"p.newPassword.errors.required\">Password is required</div>\r\n                                    <div *ngIf=\"p.newPassword.errors.minlength\">Password must be at least 6\r\n                                        characters</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row form-group inner-addon right-addon\">\r\n                            <div class=\"col-md-6 input-group\">\r\n                                <label>Repeat password</label>\r\n                                <input [type]=\"showPassword2 ? 'text' : 'password'\" placeholder=\"Repeat password\"\r\n                                    formControlName=\"confirmNewPassword\" class=\"form-control\"\r\n                                    [ngClass]=\"{ 'is-invalid': submitted && p.confirmNewPassword.errors }\" />\r\n\r\n                                <div>\r\n                                    <i alt=\"show\" class=\"fa fa-eye eye-show\" (click)=\"showPassword2 = !showPassword2\"\r\n                                        [class.hide]=\"showPassword2\"></i>\r\n                                    <i alt=\"hide\" class=\"fa fa-eye-slash eye-hide\"\r\n                                        (click)=\"showPassword2 = !showPassword2\" [class.hide]=\"!showPassword2\"></i>\r\n                                </div>\r\n                                <div *ngIf=\"submitted && p.confirmNewPassword.errors\"\r\n                                    class=\"invalid-feedback alert alert-danger\">\r\n                                    <div *ngIf=\"p.confirmNewPassword.errors.required\">Confirm Password is\r\n                                        required</div>\r\n                                    <div *ngIf=\"p.confirmNewPassword.errors.mustMatch\">Passwords must match\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <button (click)=\"updatePassword()\" class=\"btn btn-info btn-fill\">Update\r\n                            password</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n            <div class=\"card\">\r\n                <div class=\"content\">\r\n                    <form [formGroup]=\"studentForm\">\r\n                        <div class=\"row\">\r\n                            <div class=\"header\">\r\n                                <h4 class=\"title\">Student informations</h4>\r\n                            </div>\r\n                            <div class=\"col-md-12\">\r\n                                <div class=\"form-group\">\r\n                                    <label>Cardname</label>\r\n                                    <input type=\"text\" class=\"form-control text\" placeholder=\"Cardname\"\r\n                                        formControlName=\"cardName\"\r\n                                        [ngClass]=\"{ 'is-invalid': submitted && s.cardName.errors }\" />\r\n                                    <div *ngIf=\"submitted && s.cardName.errors\" class=\"invalid-feedback\">\r\n                                        <div *ngIf=\"s.cardName.errors.required\">Cardname is required</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"header\">\r\n                                <h4 class=\"title\">Account</h4>\r\n                            </div>\r\n                            <div class=\"col-md-3\">\r\n                                <label for=\"field9c\" class=\"form-control-label text\">Available funds</label>\r\n                                <div *ngIf=\"router.url === '/addStudent'\" >\r\n                                    <p class=\"form-control\"> 0 RSD</p>\r\n                                </div>\r\n                                <div *ngIf=\"router.url !== '/addStudent'\">\r\n                                    <p id=\"field9c\" name=\"field9\" class=\"form-control\">{{ available }} RSD</p>\r\n                                </div>\r\n                              \r\n                            </div>\r\n                            <div class=\"col-md-3\">\r\n                                <div class=\"form-group\">\r\n                                    <label>Model</label>\r\n                                    <input type=\"text\" placeholder=\"Model\" class=\"form-control text\"\r\n                                        formControlName=\"model\"\r\n                                        [ngClass]=\"{ 'is-invalid': submitted && s.model.errors }\" />\r\n                                    <div *ngIf=\"submitted && s.model.errors\" class=\"invalid-feedback\">\r\n                                        <div *ngIf=\"s.model.errors.required\">Model is required\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-3\">\r\n                                <div class=\"form-group\">\r\n                                    <label>Personal call to number</label>\r\n                                    <input type=\"text\" placeholder=\"Personal call to number\" class=\"form-control text\"\r\n                                        formControlName=\"personalCallToNumber\"\r\n                                        [ngClass]=\"{ 'is-invalid': submitted && s.personalCallToNumber.errors }\" />\r\n                                    <div *ngIf=\"submitted && s.personalCallToNumber.errors\" class=\"invalid-feedback\">\r\n                                        <div *ngIf=\"s.personalCallToNumber.errors.required\">Personal call to\r\n                                            number is required\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-3\">\r\n                                <div class=\"form-group\">\r\n                                    <!-- <h3>Account</h3> -->\r\n                                    <label>Bank account</label>\r\n                                    <input type=\"text\" placeholder=\"Bank account\" class=\"form-control text\"\r\n                                        formControlName=\"bankAccount\"\r\n                                        [ngClass]=\"{ 'is-invalid': submitted && s.bankAccount.errors }\" />\r\n                                    <div *ngIf=\"submitted && s.bankAccount.errors\" class=\"invalid-feedback\">\r\n                                        <div *ngIf=\"s.bankAccount.errors.required\">Bank account is required\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div *ngIf=\"student.id\" class=\"row\">\r\n            <div class=\"col-md-12\">\r\n                <div class=\"card\" style=\"padding-left: 10px;\">\r\n                    <div>\r\n                        <h3>Enrollmets</h3>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-12 mx-auto\">\r\n                            <div class=\"md-form\">\r\n                                <input type=\"text\" class=\"form-control inputSearch\" placeholder=\"Search\"\r\n                                    autocomplete=\"off\" id=\"search\" />\r\n                                <label></label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"content table-responsive table-full-width\" style=\"padding-top: 2%;\">\r\n                        <table class=\"table table-bordered\">\r\n                            <tr *ngFor=\"let enrollment of enrollments\">\r\n                                <td>\r\n                                    {{enrollment.course.name}}\r\n                                    [Since {{enrollment.startDate | date: 'dd.MM.yyyy'}} until {{enrollment.endDate |\r\n                                    date:\r\n                                    'dd.MM.yyyy'}}]\r\n                                </td>\r\n                            </tr>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-12\">\r\n                <div class=\"card\" style=\"padding-left: 10px;\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-6 col-xs-6\">\r\n                            <h3>Payments</h3>\r\n                        </div>\r\n                        <div class=\"col-md-6 col-xs-6\"  style=\"float: right; padding-top: 15px;\">\r\n                            <button style=\"float: right; \"type=\"button\" class=\"btn btn-primary\" aria-label=\"Add\" (click)=\"gotoAddPayment()\">\r\n                                <span class=\"fa fa-plus\" aria-hidden=\"true\"></span>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <label></label>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-12 mx-auto\">\r\n                            <div class=\"md-form\">\r\n                                <input type=\"text\" class=\"form-control inputSearch\" placeholder=\"Search\"\r\n                                    autocomplete=\"off\" id=\"search\" />\r\n                                <label></label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"content table-responsive table-full-width\" style=\"padding-top: 2%;\">\r\n                        <table class=\"table table-bordered\">\r\n                            <tr *ngFor=\"let payment of payments\">\r\n                                <td>\r\n                                    {{payment.date | date }} | {{ payment.purpose }} | {{payment.amount | number }}\r\n                                </td>\r\n                                <td style=\"float: right;\">\r\n                                    <button type=\"button\" class=\"btn btn-primary\" aria-label=\"Edit\"\r\n                                        (click)=\"gotoEditPayment(payment)\">\r\n                                        <span class=\"fa fa-edit\" aria-hidden=\"true\"></span>\r\n                                    </button>\r\n                                    <button type=\"button\" class=\"btn btn-danger right\" aria-label=\"Delete\"\r\n                                        (click)=\"deletePayment(payment.id, payment.amount,payment.purpose)\">\r\n                                        <span class=\"fa fa-trash\" aria-hidden=\"true\"></span>\r\n                                    </button>\r\n                                </td>\r\n                            </tr>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-12\">\r\n                <div class=\"card\" style=\"padding-left: 10px;\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-6 col-xs-6\">\r\n                            <h3>Documents</h3>\r\n                        </div>\r\n                        <div class=\"col-md-6 col-xs-6\" style=\"float: right; padding-top: 15px;\">\r\n                            <button style=\"float: right;\" type=\"button\" class=\"btn btn-primary\" aria-label=\"Add\" (click)=\"gotoAddDocument()\">\r\n                                <span class=\"fa fa-plus\" aria-hidden=\"true\"></span>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-12 mx-auto\">\r\n                            <div class=\"md-form\">\r\n                                <input type=\"text\" class=\"form-control inputSearch\" placeholder=\"Search\"\r\n                                    autocomplete=\"off\" id=\"search\" />\r\n                                <label></label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"content table-responsive table-full-width\" style=\"padding-top: 2%;\">\r\n                        <table class=\"table table-bordered\">\r\n                            <tr *ngFor=\"let document of documents\">\r\n                                <td>\r\n                                    {{ document.type.name }} {{document.title}}\r\n                                </td>\r\n                                <td style=\"float: right;\">\r\n                                    <button type=\"button\" class=\"btn btn-danger right\" aria-label=\"Delete\"\r\n                                        (click)=\"deleteDocument(document.id, document.title)\">\r\n                                        <span class=\"fa fa-trash\" aria-hidden=\"true\"></span>\r\n                                    </button>\r\n                                    <button type=\"button\" class=\"btn btn-primary\" aria-label=\"Download\" (click)=\"download(document)\">\r\n                                        <span class=\"pe-7s-download\" aria-hidden=\"true\"></span>\r\n                                      </button>\r\n                                </td>\r\n                            </tr>\r\n                        </table>\r\n                    </div>\r\n                    \r\n                    <div *ngIf=\"message\" class=\"alert alert-success\" role=\"alert\">{{ message }}</div>\r\n                    <div *ngIf=\"errorMsg\" class=\"alert alert-danger\" role=\"alert\">{{ errorMsg }}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div>\r\n            <button class=\"btn btn-success\" (click)=\"save()\">OK</button>\r\n            <button class=\"btn btn-danger\" (click)=\"goBack()\">Cancel</button>\r\n        </div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { SluzbaPaymentsComponent } from './components/sluzba-payments/sluzba-payments.component';\r\nimport { SluzbaDocumentsComponent } from './components/sluzba-documents/sluzba-documents.component';\r\nimport { SluzbaLoginComponent } from './components/sluzba-login/sluzba-login.component';\r\nimport { SluzbaCoursesComponent } from './components/sluzba-courses/sluzba-courses.component';\r\nimport { SluzbaProfileComponent } from './components/sluzba-profile/sluzba-profile.component';\r\nimport { SluzbaStudentsComponent } from './components/sluzba-students/sluzba-students.component';\r\nimport { CanActivateAuthGuardService } from './services/auth/can-activate-auth.guard.service';\r\nimport { SluzbaNotFoundPageComponent } from './components/sluzba-not-found-page/sluzba-not-found-page.component';\r\nimport { SluzbaTeachersComponent } from './components/sluzba-teachers/sluzba-teachers.component';\r\nimport { SluzbaCourseDetailsComponent } from './components/sluzba-course-details/sluzba-course-details.component';\r\nimport { SluzbaHomeComponent } from './components/sluzba-home/sluzba-home.component';\r\nimport { SluzbaSidebarComponent } from './components/sluzba-sidebar/sluzba-sidebar.component';\r\nimport { SluzbaEnrollmentsComponent } from './components/sluzba-enrollments/sluzba-enrollments.component';\r\nimport { SluzbaTeachingsComponent } from './components/sluzba-teachings/sluzba-teachings.component';\r\nimport { SluzbaStudentDetailsComponent } from './components/sluzba-student-details/sluzba-student-details.component';\r\nimport { SluzbaDocumentDetailsComponent } from './components/sluzba-document-details/sluzba-document-details.component';\r\nimport { SluzbaPaymentDetailsComponent } from './components/sluzba-payment-details/sluzba-payment-details.component';\r\nimport { SluzbaTeacherDetailsComponent } from './components/sluzba-teacher-details/sluzba-teacher-details.component';\r\nimport { SluzbaExamsComponent } from './components/sluzba-exams/sluzba-exams.component';\r\nimport { SluzbaExamDetailsComponent } from './components/sluzba-exam-details/sluzba-exam-details.component';\r\nimport { SluzbaExamTakingsComponent } from './components/sluzba-exam-takings/sluzba-exam-takings.component';\r\nimport { SluzbaExamTakingDetailsComponent } from './components/sluzba-exam-taking-details/sluzba-exam-taking-details.component';\r\nimport { SluzbaUserComponent } from './components/sluzba-user/sluzba-user.component';\r\nimport { SluzbaExamPeriodsComponent } from './components/sluzba-exam-periods/sluzba-exam-periods.component';\r\nimport { SluzbaExamPeriodDetailsComponent } from './components/sluzba-exam-period-details/sluzba-exam-period-details.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'dashboard', component: SluzbaHomeComponent },\r\n  { path: 'login', component: SluzbaLoginComponent },\r\n  { path: 'profile', component: SluzbaProfileComponent, canActivate: [CanActivateAuthGuardService]},\r\n  { path: 'courses', component: SluzbaCoursesComponent, canActivate: [CanActivateAuthGuardService]},\r\n  { path: 'exams', component: SluzbaExamsComponent, canActivate: [CanActivateAuthGuardService]},\r\n  { path: 'takings', component: SluzbaExamTakingsComponent, canActivate: [CanActivateAuthGuardService]},\r\n  { path: 'payments', component: SluzbaPaymentsComponent, canActivate: [CanActivateAuthGuardService]},\r\n  { path: 'documents', component: SluzbaDocumentsComponent, canActivate: [CanActivateAuthGuardService]},\r\n  { path: 'students', component: SluzbaStudentsComponent, canActivate: [CanActivateAuthGuardService]},\r\n  { path: 'teachers', component: SluzbaTeachersComponent, canActivate: [CanActivateAuthGuardService]},\r\n  { path: 'periods', component: SluzbaExamPeriodsComponent, canActivate: [CanActivateAuthGuardService]},\r\n  { path: 'addCourse', component: SluzbaCourseDetailsComponent },\r\n  { path: 'editCourse/:id', component: SluzbaCourseDetailsComponent },\r\n  { path: 'addEnrollment', component: SluzbaEnrollmentsComponent },\r\n  { path: 'addTeaching', component: SluzbaTeachingsComponent },\r\n  { path: 'addStudent', component: SluzbaStudentDetailsComponent },\r\n  { path: 'editStudent/:id', component: SluzbaStudentDetailsComponent },\r\n  { path: 'addDocument', component: SluzbaDocumentDetailsComponent },\r\n  { path: 'addPayment', component: SluzbaPaymentDetailsComponent },\r\n  { path: 'editPayment/:id', component: SluzbaPaymentDetailsComponent },\r\n  { path: 'addTeacher', component: SluzbaTeacherDetailsComponent },\r\n  { path: 'editTeacher/:id', component: SluzbaTeacherDetailsComponent },\r\n  { path: 'addExamPart', component: SluzbaExamDetailsComponent },\r\n  { path: 'editExamPart/:id', component: SluzbaExamDetailsComponent },\r\n  { path: 'editTaking/:id', component: SluzbaExamTakingDetailsComponent },\r\n  { path: 'addExamPeriod', component: SluzbaExamPeriodDetailsComponent },\r\n  { path: 'editExamPeriod/:id', component: SluzbaExamPeriodDetailsComponent },\r\n  { path: 'addUser', component: SluzbaUserComponent },\r\n  { path: '',\r\n    redirectTo: '/login',\r\n    pathMatch: 'full'\r\n  },\r\n  { path: '**', component: SluzbaNotFoundPageComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes,{useHash: true})\r\n  ],\r\n  exports: [RouterModule]\r\n  \r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { SluzbaCoursesServiceService } from './sluzba-courses-service.service';\r\nimport { AuthenticationServiceService } from 'src/app/services/auth/authentication-service.service';\r\n\r\ninterface Course {\r\n  id?: number;\r\n  name: string;\r\n  espb: number;\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-sluzba-courses',\r\n  templateUrl: './sluzba-courses.component.html',\r\n  styleUrls: ['./sluzba-courses.component.css']\r\n})\r\nexport class SluzbaCoursesComponent implements OnInit {\r\n\r\n  courses: Course[];\r\n\r\n  subscription: Subscription;\r\n\r\n  constructor(private courseService: SluzbaCoursesServiceService, private router: Router, private authService: AuthenticationServiceService) {\r\n    this.subscription = courseService.RegenerateData$.subscribe(() =>\r\n      this.getCourses()\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getCourses();\r\n  }\r\n\r\n  getCourses() {\r\n    this.courseService.getCourses().subscribe(res =>\r\n      this.courses = res.body);\r\n  }\r\n\r\n  isLoggedIn():boolean{\r\n    return this.authService.isLoggedIn();\r\n  }\r\n\r\n  isAdmin():boolean{\r\n    return this.authService.isAdmin();\r\n  }\r\n\r\n  gotoAdd(): void {\r\n    this.router.navigate(['/addCourse']);\r\n  }\r\n\r\n  gotoEdit(course: Course): void {\r\n    this.router.navigate(['/editCourse', course.id]);\r\n  }\r\n\r\n  deleteCourse(courseId: number, courseName: string): void {\r\n    if(confirm(\"Are you sure to delete course \" + courseName + \"?\")){\r\n    this.courseService.deleteCourse(courseId).subscribe(\r\n      () => this.getCourses()\r\n    );\r\n    }\r\n  }\r\n}\r\n","<div class=\"main-content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12 mx-auto\">\r\n        <div class=\"md-form\">\r\n          <input type=\"text\" class=\"form-control inputSearch\" placeholder=\"Search\" autocomplete=\"off\" id=\"search\" />\r\n          <label></label>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <div class=\"card\">\r\n          <div *ngIf=\"isLoggedIn()\" class=\"content table-responsive table-full-width\" style=\"padding-top: 2%;\">\r\n            <table class=\"table table-hover\" style=\"text-align: center;\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">#</th>\r\n                  <th scope=\"col\">Course name</th>\r\n                  <th scope=\"col\">ECTS</th>\r\n                  <th></th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr *ngFor=\"let course of courses; let i = index\">\r\n                  <th scope=\"row\">{{ i + 1 }}</th>\r\n                  <td>{{ course.name }}</td>\r\n                  <td>{{ course.espb | number }}</td>\r\n                  <td *ngIf=\"isAdmin()\">\r\n                    <button type=\"button\" class=\"btn btn-primary\" aria-label=\"Edit\" (click)=\"gotoEdit(course)\">\r\n                      <span class=\"fa fa-edit\" aria-hidden=\"true\"></span>\r\n                    </button>\r\n\r\n                    <button type=\"button\" class=\"btn btn-danger\" aria-label=\"Delete\"\r\n                      (click)=\"deleteCourse(course.id, course.name)\">\r\n                      <span class=\"fa fa-trash\" aria-hidden=\"true\"></span>\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n        <div *ngIf=\"isAdmin()\" class=\"right\">\r\n          <button type=\"button\" class=\"btn btn-success\" aria-label=\"Add\" (click)=\"gotoAdd()\">\r\n            <span class=\"fa fa-plus\" aria-hidden=\"true\"></span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { AuthenticationServiceService } from 'src/app/services/auth/authentication-service.service';\r\nimport { SluzbaExamsServiceService } from './sluzba-exams-service.service';\r\nimport { SluzbaCoursesServiceService } from '../sluzba-courses/sluzba-courses-service.service';\r\nimport { Teaching } from 'src/app/model/teaching';\r\nimport { Course } from 'src/app/model/course';\r\nimport { Enrollment } from 'src/app/model/enrollment';\r\nimport { SluzbaEnrollmentsServiceService } from '../sluzba-enrollments/sluzba-enrollments-service.service';\r\nimport { SluzbaTeachingsServiceService } from '../sluzba-teachings/sluzba-teachings-service.service';\r\nimport { ExamPart } from 'src/app/model/examPart';\r\nimport { SluzbaExamTakingsServiceService } from '../sluzba-exam-takings/sluzba-exam-takings-service.service';\r\n\r\n@Component({\r\n  selector: 'app-sluzba-exams',\r\n  templateUrl: './sluzba-exams.component.html',\r\n  styleUrls: ['./sluzba-exams.component.css']\r\n})\r\nexport class SluzbaExamsComponent implements OnInit {\r\n\r\n  courses: Course[];\r\n  teachings: Teaching[];\r\n  enrollments: Enrollment[];\r\n  selectedCourse: Course;\r\n  selectedEnrollment: Enrollment;\r\n  selectedTeaching: Teaching;\r\n\r\n  examParts: ExamPart[];\r\n\r\n  constructor(private examPartsService: SluzbaExamsServiceService, private courseService: SluzbaCoursesServiceService, private enrollmentService: SluzbaEnrollmentsServiceService, private teachingService: SluzbaTeachingsServiceService, private router: Router, private authService: AuthenticationServiceService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.isAdmin()) {\r\n      this.courseService.getCourses().subscribe(res =>\r\n        this.courses = res.body);\r\n    } else if (this.isTeacher()) {\r\n      this.teachingService.getTeachings().subscribe(res =>\r\n        this.teachings = res.body);\r\n    } else if (this.isStudent()) {\r\n      this.enrollmentService.getEnrollments().subscribe(res =>\r\n        this.enrollments = res.body);\r\n    }\r\n\r\n  }\r\n\r\n  onChange(newValue) {\r\n    console.log(newValue);\r\n    if (this.isAdmin()) {\r\n      this.selectedCourse = newValue;\r\n      this.examPartsService.getExamPartsForCourse(this.selectedCourse.id).subscribe(res =>\r\n        this.examParts = res.body);\r\n    } else if (this.isStudent()) {\r\n      this.selectedEnrollment = newValue;\r\n      this.examPartsService.getExamPartsForEnrollment(this.selectedEnrollment.id).subscribe(res =>\r\n        this.examParts = res.body);\r\n    } else if (this.isTeacher()) {\r\n      this.selectedTeaching = newValue;\r\n      this.examPartsService.getExamPartsForTeaching(this.selectedTeaching.id).subscribe(res =>\r\n        this.examParts = res.body);\r\n    }\r\n  }\r\n\r\n  gotoAdd(): void {\r\n    this.router.navigate(['/addExamPart']);\r\n  }\r\n\r\n  gotoEdit(examPart: ExamPart): void {\r\n    this.router.navigate(['/editExamPart', examPart.id]);\r\n  }\r\n\r\n  gotoTakings(examPart: ExamPart): void {\r\n    if (this.isStudent()) {\r\n      this.router.navigate(['/takings'], { queryParams: { examPartId: examPart.id, enrollmentId: this.selectedEnrollment.id } });\r\n    } else {\r\n      this.router.navigate(['/takings'], { queryParams: { examPartId: examPart.id } });\r\n    }\r\n  }\r\n\r\n  isLoggedIn(): boolean {\r\n    return this.authService.isLoggedIn();\r\n  }\r\n\r\n  isAdmin(): boolean {\r\n    return this.authService.isAdmin();\r\n  }\r\n\r\n  isTeacher(): boolean {\r\n    return this.authService.isTeacher();\r\n  }\r\n\r\n  isStudent(): boolean {\r\n    return this.authService.isStudent();\r\n  }\r\n}\r\n","<div class=\"main-content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <div class=\"card\" style=\"padding-left: 10px;\">\r\n\r\n          <div class=\"form-group\">\r\n            <label>Select course</label>\r\n            <select *ngIf=\"isAdmin()\" class=\"form-control\" [(ngModel)]=\"selectedCourse\"\r\n              (ngModelChange)=\"onChange($event)\" name=\"sel1\">\r\n              <option *ngFor=\"let c of courses\" [ngValue]=\"c\">{{c.name}}</option>\r\n            </select>\r\n            <select *ngIf=\"isStudent()\" class=\"form-control\" [(ngModel)]=\"selectedEnrollment\"\r\n              (ngModelChange)=\"onChange($event)\" name=\"sel2\">\r\n              <option *ngFor=\"let e of enrollments\" [ngValue]=\"e\">{{e.course.name}} {{ e.startDate | date:\r\n                'dd.MM.yyyy'}} - {{ e.endDate | date: 'dd.MM.yyyy'}}</option>\r\n            </select>\r\n            <select *ngIf=\"isTeacher()\" class=\"form-control\" [(ngModel)]=\"selectedTeaching\"\r\n              (ngModelChange)=\"onChange($event)\" name=\"sel3\">\r\n              <option *ngFor=\"let t of teachings\" [ngValue]=\"t\">{{t.course.name}} {{ t.startDate | date: 'dd.MM.yyyy'}}\r\n                - {{ t.endDate | date: 'dd.MM.yyyy'}}</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12 mx-auto\">\r\n        <div class=\"md-form\">\r\n          <input type=\"text\" class=\"form-control inputSearch\" placeholder=\"Search\" autocomplete=\"off\" id=\"search\" />\r\n          <label></label>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <div class=\"card\">\r\n          <div *ngIf=\"isLoggedIn()\" class=\"content table-responsive table-full-width\" style=\"padding-top: 2%;\">\r\n            <table class=\"table table-hover\" style=\"text-align: center;\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">#</th>\r\n                  <th scope=\"col\">Type</th>\r\n                  <th scope=\"col\">Period</th>\r\n                  <th scope=\"col\">Date</th>\r\n                  <th scope=\"col\">Location</th>\r\n                  <th scope=\"col\">Max points</th>\r\n                  <th scope=\"col\">Status</th>\r\n                  <th></th>\r\n                  <th></th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr *ngFor=\"let examPart of examParts; let i = index\">\r\n                  <th scope=\"row\">{{ i+1}}</th>\r\n                  <td>{{ examPart.type.name }}</td>\r\n                  <td>{{ examPart.period.name }}</td>\r\n                  <td>{{ examPart.date | date: 'dd.MM.yyyy'}}</td>\r\n                  <td>{{ examPart.location}}</td>\r\n                  <td>{{ examPart.points | number }}</td>\r\n                  <td>{{ examPart.active? 'active':'canceled' }}</td>\r\n                  <td>\r\n                    <button type=\"button\" class=\"btn btn-success\" aria-label=\"Takings\" (click)=\"gotoTakings(examPart)\">\r\n                      <span>Takings</span>\r\n                    </button>\r\n                  </td>\r\n                  <td *ngIf=\"isAdmin()\">\r\n                    <button type=\"button\" class=\"btn btn-primary\" aria-label=\"Edit\" (click)=\"gotoEdit(examPart)\">\r\n                      <span class=\"fa fa-edit\" aria-hidden=\"true\"></span>\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n        <div *ngIf=\"isAdmin()\" class=\"right\">\r\n          <button type=\"button\" class=\"btn btn-success\" aria-label=\"Add\" (click)=\"gotoAdd()\">\r\n            <span class=\"fa fa-plus\" aria-hidden=\"true\"></span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { User } from 'src/app/model/user';\r\nimport { AuthenticationServiceService } from '../../services/auth/authentication-service.service';\r\nimport { SluzbaSidebarServiceService } from './sluzba-sidebar-service.service';\r\n\r\ndeclare const $: any;\r\ndeclare interface RouteInfo {\r\n    path: string;\r\n    title: string;\r\n    icon: string;\r\n    class: string;\r\n}\r\n\r\nexport const ROUTES: RouteInfo[] = [\r\n    { path: '/dashboard', title: 'Dashboard',  icon: 'pe-7s-graph', class: ''},\r\n    { path: '/profile', title: 'User Profile',  icon:'pe-7s-user', class: ''},\r\n    { path: '/courses', title: 'Courses List',  icon:'pe-7s-notebook', class: ''},\r\n    { path: '/payments', title: 'Payments',  icon:'pe-7s-cash paymants', class: ''},\r\n    { path: '/documents', title: 'Documents',  icon:'pe-7s-note2', class: ''},\r\n    { path: '/students', title: 'Students',  icon:'pe-7s-users', class: ''},\r\n    { path: '/teachers', title: 'Teachers',  icon:'pe-7s-users', class: ''},\r\n];\r\n\r\n@Component({\r\n  selector: 'app-sluzba-sidebar',\r\n  templateUrl: './sluzba-sidebar.component.html'\r\n})\r\nexport class SluzbaSidebarComponent implements OnInit {\r\n\r\n  user: User;\r\n\r\n  subscription: Subscription;\r\n\r\n  constructor(private sidebarService: SluzbaSidebarServiceService, private authenticationService:AuthenticationServiceService,private router: Router) \r\n  { \r\n    this.subscription = sidebarService.RegenerateData$.subscribe(() =>\r\n      this.getUser()\r\n    );\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getUser();\r\n  }\r\n\r\n  isMobileMenu() {\r\n      if ($(window).width() > 991) {\r\n          return false;\r\n      }\r\n      return true;\r\n  };\r\n\r\n  getUser() {\r\n    this.sidebarService.getUser().subscribe(res =>\r\n      this.user = res.body);\r\n  }\r\n\r\n  logout():void{\r\n    this.authenticationService.logout();\r\n    this.router.navigate(['/login']);\r\n  }\r\n\r\n  isLoggedIn():boolean{\r\n    return this.authenticationService.isLoggedIn();\r\n  }\r\n\r\n  isStudent():boolean{\r\n    return this.authenticationService.isStudent();\r\n  }\r\n\r\n  isAdmin():boolean{\r\n    return this.authenticationService.isAdmin();\r\n  }\r\n\r\n}\r\n","<div class=\"sidebar-wrapper\">\r\n    <div class=\"logo\">\r\n        <a routerLink=\"/dashboard\" href=\"#\" class=\"simple-text\">\r\n            <div class=\"logo-img\">\r\n                <img src=\"../../../assets/img/ftn logo.png\"/>\r\n\r\n            </div>\r\n            Student service\r\n        </a>\r\n    </div>\r\n    <ul class=\"nav responsive-nav\">\r\n        <li *ngIf=\"isMobileMenu()\">\r\n            <a class=\"dropdown-toggle\" data-toggle=\"dropdown\">\r\n                <i class=\"fa fa-dashboard\"></i>\r\n\t\t\t\t<p class=\"hidden-lg hidden-md\">Dashboard</p>\r\n            </a>\r\n        </li>\r\n        <li *ngIf=\"isMobileMenu()\">\r\n            <a class=\"dropdown-toggle\" data-toggle=\"dropdown\">\r\n                <i class=\"fa fa-dashboard\"></i>\r\n\t\t\t\t<p class=\"hidden-lg hidden-md\">{{ user? user.firstName : \"\"  }} {{ user? user.lastName : \"\"  }}</p>\r\n            </a>\r\n        </li>\r\n        <li *ngIf=\"isMobileMenu()\">\r\n            <a class=\"dropdown-item\" (click)=\"logout()\" href=\"#\">Log out</a>\r\n        </li>\r\n        <li class=\"separator hidden-lg hidden-md\" *ngIf=\"isMobileMenu()\"></li>\r\n        <li>\r\n            <a routerLink=\"/dashboard\">\r\n                <i class=\"pe-7s-graph\"></i>\r\n                <p>Dashboard</p>\r\n            </a> \r\n        </li>\r\n        <li>\r\n            <a routerLink=\"/profile\">\r\n                <i class=\"pe-7s-user\"></i>\r\n                <p>User profile</p>\r\n            </a> \r\n        </li>\r\n        <li>\r\n            <a routerLink=\"/courses\">\r\n                <i class=\"pe-7s-notebook\"></i>\r\n                <p>Courses</p>\r\n            </a> \r\n        </li>\r\n        <li>\r\n            <a routerLink=\"/exams\">\r\n                <i class=\"pe-7s-pen\"></i>\r\n                <p>Exams</p>\r\n            </a> \r\n        </li>\r\n        <li>\r\n            <a routerLink=\"/periods\">\r\n                <i class=\"pe-7s-date\"></i>\r\n                <p>Exam periods</p>\r\n            </a> \r\n        </li>\r\n        <li *ngIf=\"isStudent()\">\r\n            <a routerLink=\"/documents\">\r\n                <i class=\"pe-7s-note2\"></i>\r\n                <p>Documents</p>\r\n            </a> \r\n        </li>\r\n        <li *ngIf=\"isStudent()\">\r\n            <a routerLink=\"/payments\">\r\n                <i class=\"pe-7s-cash paymants\"></i>\r\n                <p>Payments</p>\r\n            </a> \r\n        </li>\r\n        <li *ngIf=\"isAdmin()\">\r\n            <a routerLink=\"/students\">\r\n                <i class=\"pe-7s-users\"></i>\r\n                <p>Students</p>\r\n            </a> \r\n        </li>\r\n        <li *ngIf=\"isAdmin()\">\r\n            <a routerLink=\"/teachers\">\r\n                <i class=\"pe-7s-users\"></i>\r\n                <p>Teachers</p>\r\n            </a> \r\n        </li>\r\n        <li *ngIf=\"isAdmin()\">\r\n            <a routerLink=\"/addUser\">\r\n                <i class=\"pe-7s-add-user\"></i>\r\n                <p>Add new admin</p>\r\n            </a> \r\n        </li>\r\n    </ul>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthenticationServiceService } from './authentication-service.service';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CanActivateAuthGuardService implements CanActivate {\r\n\r\n  constructor(private authenticationService: AuthenticationServiceService, private router: Router) { }\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n    if (this.authenticationService.isLoggedIn()) {\r\n      return true;\r\n    }\r\n    else {\r\n      this.router.navigate(['/login']);\r\n      return false;\r\n    }\r\n  }\r\n\r\n}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}