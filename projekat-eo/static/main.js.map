{"version":3,"sources":["./src/app/components/sluzba-profile/sluzba-profile.component.ts","./src/app/components/sluzba-profile/sluzba-profile.component.html","./src/app/services/auth/authentication-service.service.ts","./src/app/components/sluzba-sidebar/sluzba-sidebar-service.service.ts","./src/app/components/sluzba-documents/sluzba-documents-service.service.ts","./src/app/components/sluzba-teachings/sluzba-teachings.component.ts","./src/app/components/sluzba-teachings/sluzba-teachings.component.html","./src/app/model/course.ts","./src/app/components/sluzba-profile/sluzba-profile-service.service.ts","./src/environments/environment.ts","./src/app/components/sluzba-document-details/sluzba-document-details-service.service.ts","./src/app/components/sluzba-home/sluzba-home.component.ts","./src/app/components/sluzba-home/sluzba-home.component.html","./src/app/components/sluzba-students/sluzba-students-service.service.ts","./src/app/components/sluzba-enrollments/sluzba-enrollments-service.service.ts","./src/app/services/auth/token-interceptor.service.ts","./src/app/components/sluzba-login/sluzba-login.component.ts","./src/app/components/sluzba-login/sluzba-login.component.html","./src/app/model/teaching.ts","./src/app/components/sluzba-courses/sluzba-courses-service.service.ts","./src/app/components/sluzba-teachings/sluzba-teachings-service.service.ts","./src/app/components/sluzba-navbar/sluzba-navbar-service.service.ts","./src/app/components/sluzba-course-details/sluzba-course-details.component.ts","./src/app/components/sluzba-course-details/sluzba-course-details.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/model/enrollment.ts","./src/app/model/payment.ts","./src/app/model/document.ts","./src/app/components/sluzba-teachers/sluzba-teachers-service.service.ts","./src/app/model/teacher.ts","./src/app/app.module.ts","./src/app/components/sluzba-navbar/sluzba-navbar.component.ts","./src/app/components/sluzba-navbar/sluzba-navbar.component.html","./src/app/model/document-type.ts","./src/app/components/sluzba-account/sluzba-account-service.service.ts","./src/app/components/sluzba-payment-details/sluzba-payment-details.component.ts","./src/app/components/sluzba-payment-details/sluzba-payment-details.component.html","./src/app/model/student.ts","./src/app/components/sluzba-payments/sluzba-payments.component.ts","./src/app/components/sluzba-payments/sluzba-payments.component.html","./src/app/components/sluzba-documents/sluzba-documents.component.ts","./src/app/components/sluzba-documents/sluzba-documents.component.html","./src/app/components/sluzba-payments/sluzba-payments-service.service.ts","./src/app/model/account.ts","./src/app/model/teaching-type.ts","./src/app/components/sluzba-enrollments/sluzba-enrollments.component.ts","./src/app/components/sluzba-enrollments/sluzba-enrollments.component.html","./src/app/model/user.ts","./src/app/components/sluzba-students/sluzba-students.component.ts","./src/app/components/sluzba-students/sluzba-students.component.html","./src/app/components/sluzba-document-details/sluzba-document-details.component.ts","./src/app/components/sluzba-document-details/sluzba-document-details.component.html","./src/app/components/sluzba-not-found-page/sluzba-not-found-page.component.ts","./src/app/components/sluzba-not-found-page/sluzba-not-found-page.component.html","./src/app/services/auth/jwt-utils.service.ts","./src/app/components/sluzba-teachers/sluzba-teachers.component.ts","./src/app/components/sluzba-teachers/sluzba-teachers.component.html","./src/app/components/sluzba-student-details/sluzba-student-details.component.ts","./src/app/components/sluzba-student-details/sluzba-student-details.component.html","./src/app/app-routing.module.ts","./src/app/components/sluzba-courses/sluzba-courses.component.ts","./src/app/components/sluzba-courses/sluzba-courses.component.html","./src/app/components/sluzba-sidebar/sluzba-sidebar.component.ts","./src/app/components/sluzba-sidebar/sluzba-sidebar.component.html","./src/app/services/auth/can-activate-auth.guard.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { User } from 'src/app/model/user';\r\nimport { SluzbaProfileServiceService } from './sluzba-profile-service.service';\r\nimport { AuthenticationServiceService } from 'src/app/services/auth/authentication-service.service';\r\nimport { Account } from 'src/app/model/account';\r\nimport { SluzbaAccountServiceService } from '../sluzba-account/sluzba-account-service.service';\r\n\r\ninterface Student {\r\n  id?: number;\r\n  cardName: String;\r\n  account: Account;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-sluzba-profile',\r\n  templateUrl: './sluzba-profile.component.html',\r\n  styleUrls: ['./sluzba-profile.component.css']\r\n})\r\nexport class SluzbaProfileComponent implements OnInit {\r\n\r\n  user: User = new User({\r\n    username: '',\r\n    firstName: '',\r\n    lastName: '',\r\n    password: ''\r\n  });\r\n\r\n  student: Student;\r\n  available: 0 | number;\r\n\r\n  newPassword: String = '';\r\n  repeatedPassword: String = '';\r\n\r\n  subscription: Subscription;\r\n  public showPassword: boolean;\r\n  public showPassword2: boolean;\r\n\r\n\r\n  constructor(private profileService: SluzbaProfileServiceService, private authenticationService:AuthenticationServiceService, private accountService: SluzbaAccountServiceService, private router: Router, private authService: AuthenticationServiceService) {\r\n    this.subscription = profileService.RegenerateData$.subscribe(() =>\r\n      this.getUser()\r\n    );\r\n  }\r\n\r\n  isShowDiv = false;\r\n   \r\n  toggleDisplayDiv() {\r\n    this.isShowDiv = !this.isShowDiv;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getUser();\r\n  }\r\n\r\n  getUser() {\r\n    this.profileService.getUser().subscribe(res =>\r\n      this.user = res.body);\r\n    if (this.authService.isStudent()) {\r\n      this.getStudent();\r\n    }\r\n  }\r\n\r\n  getStudent() {\r\n    this.profileService.getStudent().\r\n      subscribe(res => {\r\n        this.student = res.body;\r\n        this.getAvailableFunds();\r\n      });\r\n\r\n  }\r\n\r\n  private getAvailableFunds(): void {\r\n    this.accountService.getAvailableFunds(this.student.account.id).subscribe(res =>\r\n      this.available = res.body);\r\n  }\r\n\r\n  save(): void {\r\n    this.profileService.editUser(this.user)\r\n      .subscribe(user => {\r\n        this.profileService.announceChange();\r\n        this.authenticationService.logout();\r\n        this.router.navigate(['/login']);\r\n      });\r\n  }\r\n\r\n  updatePassword(): void {\r\n    console.log(\"pass: \" + this.newPassword)\r\n    this.profileService.updatePassword(this.user.id, this.newPassword)\r\n      .subscribe(user => {\r\n        this.profileService.announceChange();\r\n        this.authenticationService.logout();\r\n        this.router.navigate(['/login']);\r\n      });\r\n  }\r\n\r\n  isLoggedIn(): boolean {\r\n    return this.authService.isLoggedIn();\r\n  }\r\n\r\n  isStudent(): boolean {\r\n    return this.authService.isStudent();\r\n  }\r\n\r\n\r\n  isAdmin(): boolean {\r\n    return this.authService.isAdmin();\r\n  }\r\n\r\n}\r\n","<div class=\"main-content\">\r\n    <div class=\"container-fluid\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-8\">\r\n                <div class=\"card\">\r\n                    <div class=\"header\">\r\n                        <h4 class=\"title\">Profile</h4>\r\n                    </div>\r\n                    <div class=\"content\">\r\n                        <form>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-3\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"field1c\" class=\"form-control-label\">First Name</label>\r\n                                        <input type=\"text\" class=\"form-control\" placeholder=\"First name\"\r\n                                            [(ngModel)]=\"user.firstName\" id=\"field1c\" name=\"field1\">\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-3\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"field2c\" class=\"form-control-label\">Last Name</label>\r\n                                        <input type=\"text\" class=\"form-control\" placeholder=\"Last Name\"\r\n                                            [(ngModel)]=\"user.lastName\" id=\"field2c\" name=\"field2\">\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-3\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"field3c\" class=\"form-control-label\">Username</label>\r\n                                        <input type=\"text\" class=\"form-control\" placeholder=\"Username\"\r\n                                            [(ngModel)]=\"user.username\" id=\"field3c\" name=\"field3\">\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-3\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"field11c\" class=\"form-control-label\">Email address</label>\r\n                                        <input type=\"email\" class=\"form-control\" placeholder=\"Email\" id=\"field11c\"\r\n                                            name=\"field11\">\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div *ngIf=\"isStudent()\" class=\"row\">\r\n                                <div class=\"col-md-12\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"field4c\" class=\"form-control-label\">Cardname</label>\r\n                                        <input type=\"text\" class=\"form-control\" placeholder=\"Cardname\"\r\n                                            [(ngModel)]=\"student.cardName\" id=\"field4c\" name=\"field4\">\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <button (click)=toggleDisplayDiv() class=\"btn btn-secondary btn-fill pull-left\">Change\r\n                                password</button>\r\n                            <div *ngIf=\"isAdmin()\">\r\n                                <button (click)=\"save()\" class=\"btn btn-info btn-fill pull-right\">Save</button>\r\n                            </div>\r\n                            <div class=\"clearfix\"></div>\r\n                            <div [hidden]=\"!isShowDiv\" class=\"card\">\r\n                                <div class=\"content\">\r\n                                    <form>\r\n                                        <div class=\"row form-group inner-addon right-addon\">\r\n                                            <div class=\"col-md-6 input-group\">\r\n                                                <label>New password</label>\r\n                                                <input [type]=\"showPassword ? 'text' : 'password'\" class=\"form-control\"\r\n                                                    placeholder=\"New password\" [(ngModel)]=\"newPassword\" name=\"newPassword\">\r\n                                                <div>\r\n                                                    <i alt=\"show\" class=\"fa fa-eye eye-show\"\r\n                                                        (click)=\"showPassword = !showPassword\" [class.hide]=\"showPassword\"></i>\r\n                                                    <i alt=\"hide\" class=\"fa fa-eye-slash eye-hide\"\r\n                                                        (click)=\"showPassword = !showPassword\" [class.hide]=\"!showPassword\"></i>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"row form-group inner-addon right-addon\">\r\n                                            <div class=\"col-md-6 input-group\">\r\n                                                <label>Repeat password</label>\r\n                                                <input [type]=\"showPassword2 ? 'text' : 'password'\" class=\"form-control\"\r\n                                                    placeholder=\"Repeat password\" [(ngModel)]=\"repeatedPassword\" name=\"repeatedPassword\">\r\n                                                <div>\r\n                                                    <i alt=\"show\" class=\"fa fa-eye eye-show\"\r\n                                                        (click)=\"showPassword2 = !showPassword2\"\r\n                                                        [class.hide]=\"showPassword2\"></i>\r\n                                                    <i alt=\"hide\" class=\"fa fa-eye-slash eye-hide\"\r\n                                                        (click)=\"showPassword2 = !showPassword2\"\r\n                                                        [class.hide]=\"!showPassword2\"></i>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <button  (click)=\"updatePassword()\" class=\"btn btn-info btn-fill\">Update\r\n                                            password</button>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                            <div *ngIf=\"isStudent()\" class=\"row\">\r\n                                <div class=\"col-md-12\">\r\n                                    <div class=\"card\" style=\"padding-left: 10px;\">\r\n                                        <h3>Account</h3>\r\n                                        <div class=\"form-group\">\r\n                                            <label for=\"field6c\" class=\"form-control-label\">Bank account</label>\r\n                                            <input type=\"text\" [(ngModel)]=\"student.account.bankAccount\"\r\n                                                placeholder=\"Bank account\" class=\"form-control\" id=\"field6c\"\r\n                                                name=\"field6\">\r\n                                            <label for=\"field7c\" class=\"form-control-label\">Model</label>\r\n                                            <input type=\"text\" [(ngModel)]=\"student.account.model\" placeholder=\"Model\"\r\n                                                class=\"form-control\" id=\"field7c\" name=\"field7\">\r\n                                            <label for=\"field8c\" class=\"form-control-label\">Personal call to\r\n                                                number</label>\r\n                                            <input type=\"text\" [(ngModel)]=\"student.account.personalCallToNumber\"\r\n                                                placeholder=\"Personal call to number\" class=\"form-control\" id=\"field8c\"\r\n                                                name=\"field8\">\r\n                                            <label for=\"field9c\" class=\"form-control-label\">Available funds</label>\r\n                                            <p id=\"field9c\" name=\"field9\" class=\"form-control\">{{ available }}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"clearfix\"></div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <div class=\"card card-user\">\r\n                    <div class=\"image\">\r\n                        <img src=\"https://ununsplash.imgix.net/photo-1431578500526-4d9613015464?fit=crop&fm=jpg&h=300&q=75&w=400\"\r\n                            alt=\"...\" />\r\n                    </div>\r\n                    <div class=\"content\">\r\n                        <div class=\"author\">\r\n                            <a href=\"#\">\r\n                                <img class=\"avatar border-gray\" src=\"assets/img/faces/face-6.jpg\" alt=\"...\" />\r\n\r\n                                <h4 class=\"title\">{{ user? user.firstName : \"\" }} {{ user? user.lastName : \"\" }} <br />\r\n                                    <small>{{ user? user.username : \"\" }}</small><BR>\r\n                                    <small *ngIf=\"isStudent()\">Balance: {{ available }}</small>\r\n                                </h4>\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                    <hr>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { JwtUtilsService } from './jwt-utils.service';\r\n\r\n\r\n@Injectable()\r\nexport class AuthenticationServiceService {\r\n\r\n  private readonly loginPath = '/auth/login';\r\n\r\n  constructor(private http: HttpClient, private jwtUtilsService: JwtUtilsService) { }\r\n\r\n  login(username: string, password: string): Observable<boolean> {\r\n    var headers: HttpHeaders = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n    return this.http.post(this.loginPath, JSON.stringify({ username, password }), { headers })\r\n      .map((res: any) => {\r\n        let token = res && res['token'];\r\n        if (token) {\r\n          localStorage.setItem('currentUser', JSON.stringify({\r\n            username: username,\r\n            roles: this.jwtUtilsService.getRoles(token),\r\n            token: token\r\n          }));\r\n          return true;\r\n        }\r\n        else {\r\n          return false;\r\n        }\r\n      })\r\n      .catch((error: any) => {\r\n        if (error.status === 400) {\r\n          return Observable.throw('Ilegal login');\r\n        }\r\n        else {\r\n          return Observable.throw(error.json().error || 'Server error');\r\n        }\r\n      });\r\n  }\r\n\r\n  getToken(): String {\r\n    var currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n    var token = currentUser && currentUser.token;\r\n    return token ? token : \"\";\r\n  }\r\n\r\n  logout(): void {\r\n    localStorage.removeItem('currentUser');\r\n  }\r\n\r\n  isLoggedIn(): boolean {\r\n    if (this.getToken() != '') return true;\r\n    else return false;\r\n  }\r\n\r\n  getCurrentUser() {\r\n    if (localStorage.currentUser) {\r\n      return JSON.parse(localStorage.currentUser);\r\n    }\r\n    else {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  isStudent(): boolean {\r\n    if (localStorage.currentUser) {\r\n      var user = JSON.parse(localStorage.currentUser);\r\n      if (user.roles[0].some(t=>t.authority === \"STUDENT\")) return true;\r\n      else return false;\r\n    }\r\n  }\r\n\r\n  isTeacher(): boolean {\r\n    if (localStorage.currentUser) {\r\n      var user = JSON.parse(localStorage.currentUser);\r\n      if (user.roles[0].some(t=>t.authority === \"TEACHER\")) return true;\r\n      else return false;\r\n    }\r\n  }\r\n\r\n  isAdmin(): boolean {\r\n    if (localStorage.currentUser) {\r\n      var user = JSON.parse(localStorage.currentUser);\r\n      if (user.roles[0].some(t=>t.authority === \"ADMIN\")) return true;\r\n      else return false;\r\n    }\r\n  }\r\n\r\n  getCurrentUserUsername() {\r\n    if (localStorage.currentUser) {\r\n      return JSON.parse(localStorage.currentUser.username);\r\n    }\r\n    else {\r\n      return undefined;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpResponse, HttpClient } from '@angular/common/http';\r\nimport {Observable, Subject} from 'rxjs';\r\n\r\nimport { AuthenticationServiceService } from '../../services/auth/authentication-service.service';\r\nimport { User } from '../../model/user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SluzbaSidebarServiceService {\r\n\r\n  private usersUrl = 'users';\r\n\r\n  constructor(private http: HttpClient, private authService: AuthenticationServiceService) { }\r\n\r\n  private RegenerateData = new Subject<void>();\r\n\r\n  RegenerateData$ = this.RegenerateData.asObservable();\r\n\r\n  announceChange() {\r\n      this.RegenerateData.next();\r\n  }\r\n  \r\n  getUser(): Observable<HttpResponse<User>> {\r\n      let username = this.authService.getCurrentUser().username;\r\n      console.log(\"username: \" + username);\r\n      const url = `${this.usersUrl}/getUserByUsername/${username}`;\r\n      return this.http.get<User>(url, {observe: 'response'});\r\n  }\r\n  \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpResponse, HttpClient } from '@angular/common/http';\r\nimport {Observable, Subject} from 'rxjs';\r\n\r\nimport { AuthenticationServiceService } from '../../services/auth/authentication-service.service';\r\nimport { Document } from '../../model/document';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SluzbaDocumentsServiceService {\r\n\r\n  private documentsUrl = 'documents';\r\n\r\n  constructor(private http: HttpClient, private authService: AuthenticationServiceService) { }\r\n\r\n  private RegenerateData = new Subject<void>();\r\n\r\n  RegenerateData$ = this.RegenerateData.asObservable();\r\n\r\n  announceChange() {\r\n      this.RegenerateData.next();\r\n  }\r\n  \r\n  getDocuments(): Observable<HttpResponse<Document[]>> {\r\n      let username = this.authService.getCurrentUser().username;\r\n      console.log(\"username: \" + username);\r\n      const url = `${this.documentsUrl}/getAllDocumentsForUser/${username}`;\r\n      return this.http.get<Document[]>(url, {observe: 'response'});\r\n  }\r\n\r\n  deleteDocument(documentId: number): Observable<HttpResponse<any>> {\r\n    const url = `${this.documentsUrl}/deleteDocument/${documentId}`;\r\n    return this.http.put<any>(url, {observe: 'response'});\r\n}\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\n\r\nimport { Teacher } from 'src/app/model/teacher';\r\nimport { Teaching } from 'src/app/model/teaching';\r\n\r\nimport { NgbDateStruct } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { SluzbaTeachersServiceService } from '../sluzba-teachers/sluzba-teachers-service.service';\r\nimport { SluzbaCoursesServiceService } from '../sluzba-courses/sluzba-courses-service.service';\r\nimport { SluzbaTeachingsServiceService } from './sluzba-teachings-service.service';\r\nimport { User } from 'src/app/model/user';\r\nimport { Course } from 'src/app/model/course';\r\nimport { TeachingType } from 'src/app/model/teaching-type';\r\n\r\n\r\n@Component({\r\n  selector: 'app-sluzba-teachings',\r\n  templateUrl: './sluzba-teachings.component.html',\r\n  styleUrls: ['./sluzba-teachings.component.css']\r\n})\r\nexport class SluzbaTeachingsComponent implements OnInit {\r\n  \r\n  teaching: Teaching;\r\n  teachers: Teacher[];\r\n  types: TeachingType[];\r\n\r\n  constructor(private route: ActivatedRoute, private courseService: SluzbaCoursesServiceService,\r\n    private teacherService: SluzbaTeachersServiceService, private teachingService: SluzbaTeachingsServiceService,\r\n    private location: Location) {\r\n    this.teaching = new Teaching({\r\n      startDate: null,\r\n      endDate: null,\r\n      teacher: new Teacher({\r\n        user: new User({\r\n          username: '',\r\n          firstName: '',\r\n          lastName: '',\r\n          password: ''\r\n        })\r\n      }),\r\n      course: new Course({\r\n        name: '',\r\n        code: '',\r\n        espb: 0,\r\n        active: true\r\n      }),\r\n      type: new TeachingType({\r\n        name: '',\r\n        code: ''\r\n      })\r\n    });\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.route.queryParams.subscribe(params =>\r\n      this.courseService.getCourse(params['courseId'])\r\n        .subscribe(res => \r\n          this.teaching.course = res.body \r\n        ));\r\n\r\n    this.teacherService.getTeachers().subscribe(res =>\r\n      this.teachers = res.body);\r\n\r\n    this.teachingService.getTeachingTypes().subscribe(res =>\r\n      this.types = res.body);\r\n  }\r\n\r\n  add(): void {\r\n    this.teachingService.addTeaching(this.teaching, this.teaching.course.id)\r\n      .subscribe(teaching => {\r\n        this.teachingService.announceChange();\r\n        this.goBack();\r\n      });\r\n  }\r\n\r\n  goBack(): void {\r\n    this.location.back();\r\n  }\r\n  \r\n\r\n\r\n}\r\n","<div class=\"main-content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <div class=\"card\" style=\"padding-left: 10px;\">\r\n          <h3>Enroll teachers in course {{teaching.course.name}} </h3>\r\n\r\n\r\n          <div class=\"form-group\">\r\n            <label>Select teacher</label>\r\n            <select class=\"form-control\" [(ngModel)]=\"teaching.teacher\">\r\n              <option *ngFor=\"let t of teachers\" [ngValue]=\"t\">{{t.user.firstName}} {{t.user.lastName}}</option>\r\n            </select>\r\n          </div>\r\n\r\n          <h4>Select teaching type</h4>\r\n          <div class=\"form-group\">\r\n            <select class=\"form-control\" [(ngModel)]=\"teaching.type\">\r\n              <option *ngFor=\"let tt of types\" [ngValue]=\"tt\">{{tt.name}}</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label>Choose start date</label>\r\n            <div class=\"input-group\">\r\n              <input type=\"date\" placeholder=\"yyyy-mm-dd\" [ngModel]=\"teaching.startDate | date:'yyyy-MM-dd'\"\r\n                (ngModelChange)=\"teaching.startDate=$event\" class=\"form-control\" id=\"field1c\" name=\"dp1\">\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <div class=\"form-group\">\r\n            <label>Choose end date</label>\r\n            <div class=\"input-group\">\r\n              <input type=\"date\" placeholder=\"yyyy-mm-dd\" [ngModel]=\"teaching.endDate | date:'yyyy-MM-dd'\"\r\n                (ngModelChange)=\"teaching.endDate=$event\" class=\"form-control\" id=\"field2c\" name=\"dp2\">\r\n            </div>\r\n          </div>\r\n\r\n\r\n\r\n          <div class=\"modal-footer\">\r\n            <button class=\"btn btn-success\" type=\"button\" (click)=\"add()\">OK</button>\r\n            <button class=\"btn btn-danger\" type=\"button\" (click)=\"goBack()\">Cancel</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","export class Course implements CourseInterface{\r\n\tpublic id: number;\r\n\tpublic name: string;\r\n\tpublic code: string;\r\n    public espb: number;\r\n\tpublic active: boolean;\r\n\t\t\r\n\tconstructor(courseCfg: CourseInterface)\r\n\t{\t\r\n\t\tthis.id = courseCfg.id;\r\n\t\tthis.name = courseCfg.name;\r\n\t\tthis.code = courseCfg.code;\r\n        this.espb = courseCfg.espb;\r\n\t\tthis.active = courseCfg.active;\r\n\t}\r\n}\r\n\r\ninterface CourseInterface {\r\n\tid?: number;\r\n\tname: string;\r\n\tcode: string;\r\n    espb: number;\r\n\tactive: boolean;\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpResponse, HttpClient } from '@angular/common/http';\r\nimport {Observable, Subject} from 'rxjs';\r\n\r\nimport { AuthenticationServiceService } from '../../services/auth/authentication-service.service';\r\nimport { User } from '../../model/user';\r\nimport { Student } from '../../model/student';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SluzbaProfileServiceService {\r\n\r\n  private usersUrl = 'users';\r\n  private studentsUrl = 'students';\r\n\r\n  constructor(private http: HttpClient, private authService: AuthenticationServiceService) { }\r\n\r\n  private RegenerateData = new Subject<void>();\r\n\r\n  RegenerateData$ = this.RegenerateData.asObservable();\r\n\r\n  announceChange() {\r\n      this.RegenerateData.next();\r\n  }\r\n  \r\n  getUser(): Observable<HttpResponse<User>> {\r\n      let username = this.authService.getCurrentUser().username;\r\n      console.log(\"username: \" + username);\r\n      const url = `${this.usersUrl}/getUserByUsername/${username}`;\r\n      return this.http.get<User>(url, {observe: 'response'});\r\n  }\r\n\r\n  getStudent(): Observable<HttpResponse<Student>> {\r\n    let username = this.authService.getCurrentUser().username;\r\n    console.log(\"username: \" + username);\r\n    const url = `${this.studentsUrl}/getStudentByUsername/${username}`;\r\n    return this.http.get<Student>(url, {observe: 'response'});\r\n  }\r\n\r\n  editUser(user: User): Observable<HttpResponse<User>> {\r\n    const urlPut =`${this.usersUrl}/updateUser/${user.id}`;\r\n    return this.http.put<User>(urlPut, user, {observe: 'response'});\r\n  }\r\n\r\n  updatePassword(id: number, password: String): Observable<HttpResponse<User>> {\r\n    const urlPut =`${this.usersUrl}/updatePassword/${id}`;\r\n    return this.http.put<User>(urlPut, password, {observe: 'response'});\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpResponse, HttpClient } from '@angular/common/http';\r\nimport {Observable, Subject} from 'rxjs';\r\n\r\nimport { AuthenticationServiceService } from '../../services/auth/authentication-service.service';\r\nimport { DocumentType } from 'src/app/model/document-type';\r\nimport { Document } from 'src/app/model/document';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SluzbaDocumentDetailsServiceService {\r\n\r\n  private documentUrl = 'documents';\r\n  private documentTypesUrl = 'documentTypes';\r\n\r\n  constructor(private http: HttpClient, private authService: AuthenticationServiceService) { }\r\n\r\n  private RegenerateData = new Subject<void>();\r\n\r\n  RegenerateData$ = this.RegenerateData.asObservable();\r\n\r\n  announceChange() {\r\n      this.RegenerateData.next();\r\n  }\r\n\r\n  getDocument(id: number): Observable<HttpResponse<Document>> {\r\n    const url = `${this.documentUrl}/getDocumentById/${id}`;\r\n    return this.http.get<Document>(url, {observe: 'response'});\r\n  }\r\n\r\n  getDocumentTypes(): Observable<HttpResponse<DocumentType[]>> {\r\n    const url = `${this.documentTypesUrl}/getAllDocumentTypes`;\r\n    return this.http.get<DocumentType[]>(url, {observe: 'response'});\r\n  }\r\n\r\n  addDocument(document: Document): Observable<HttpResponse<Document>> {\r\n    const urlPost = `${this.documentUrl}/addDocument/${document.student.id}`;\r\n    return this.http.post<Document>(urlPost, document, {observe: 'response'});\r\n  } \r\n\r\n  editDocument(document: Document): Observable<HttpResponse<Document>> {\r\n    const urlPut =`${this.documentUrl}/updateDocument/${document.id}`;\r\n    return this.http.put<Document>(urlPut, document, {observe: 'response'});\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-sluzba-home',\r\n  templateUrl: './sluzba-home.component.html',\r\n  styleUrls: ['./sluzba-home.component.css']\r\n})\r\nexport class SluzbaHomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>Welcome</p>","import { Injectable } from '@angular/core';\r\nimport { HttpResponse, HttpClient } from '@angular/common/http';\r\nimport {Observable, Subject} from 'rxjs';\r\n\r\nimport { AuthenticationServiceService } from '../../services/auth/authentication-service.service';\r\nimport { Student } from '../../model/student';\r\nimport { Document } from 'src/app/model/document';\r\nimport { Payment } from 'src/app/model/payment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SluzbaStudentsServiceService {\r\n\r\n  private studentsUrl = 'students';\r\n  private documentsUrl = 'documents';\r\n  private paymentsUrl = 'payments';\r\n\r\n  constructor(private http: HttpClient, private authService: AuthenticationServiceService) { }\r\n\r\n  private RegenerateData = new Subject<void>();\r\n\r\n  RegenerateData$ = this.RegenerateData.asObservable();\r\n\r\n  announceChange() {\r\n      this.RegenerateData.next();\r\n  }\r\n  \r\n  getStudents(): Observable<HttpResponse<Student[]>> {\r\n      const url = `${this.studentsUrl}/getAllStudents`;\r\n      return this.http.get<Student[]>(url, {observe: 'response'});\r\n  }\r\n\r\n  getStudent(id: number): Observable<HttpResponse<Student>> {\r\n    const url = `${this.studentsUrl}/getStudentById/${id}`;\r\n    return this.http.get<Student>(url, {observe: 'response'});\r\n  }\r\n\r\n  addStudent(student: Student): Observable<HttpResponse<Student>> {\r\n    const urlPost = `${this.studentsUrl}/addStudent`;\r\n    return this.http.post<Student>(urlPost, student, {observe: 'response'});\r\n  } \r\n\r\n  editStudent(student: Student): Observable<HttpResponse<Student>> {\r\n    const urlPut =`${this.studentsUrl}/updateStudent/${student.id}`;\r\n    return this.http.put<Student>(urlPut, student, {observe: 'response'});\r\n  }\r\n\r\n  deleteStudent(studentId: number): Observable<HttpResponse<any>> {\r\n    const url = `${this.studentsUrl}/deleteStudent/${studentId}`;\r\n    return this.http.put<any>(url, {observe: 'response'});\r\n  }\r\n\r\n  getStudentDocuments(studentId: number): Observable<HttpResponse<Document[]>> {\r\n    const url = `${this.documentsUrl}/getAllDocumentsForStudent/${studentId}`;\r\n    return this.http.get<Document[]>(url, {observe: 'response'});\r\n  }\r\n\r\n  getAccountPayments(accountId: number): Observable<HttpResponse<Payment[]>> {\r\n    const url = `${this.paymentsUrl}/getAllPaymentsForAccount/${accountId}`;\r\n    return this.http.get<Payment[]>(url, {observe: 'response'});\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpResponse, HttpClient } from '@angular/common/http';\r\nimport {Observable, Subject} from 'rxjs';\r\nimport { Enrollment } from 'src/app/model/enrollment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SluzbaEnrollmentsServiceService {\r\n\r\n  private enrollmentsUrl = 'enrollments';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  private RegenerateData = new Subject<void>();\r\n\r\n  RegenerateData$ = this.RegenerateData.asObservable();\r\n\r\n  announceChange() {\r\n      this.RegenerateData.next();\r\n  }\r\n  \r\n  addEnrollment(enrollment: Enrollment, courseId: number): Observable<HttpResponse<Enrollment>> {\r\n    const urlPost = `${this.enrollmentsUrl}/addEnrollment/${courseId}`;\r\n    return this.http.post<Enrollment>(urlPost, enrollment, {observe: 'response'});\r\n  }\r\n  \r\n  deleteEnrollment(enrollmentId: number): Observable<HttpResponse<any>> {\r\n      const url = `${this.enrollmentsUrl}/deleteEnrollment/${enrollmentId}`;\r\n      return this.http.put<any>(url, {observe: 'response'});\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor } from '@angular/common/http';\r\nimport { AuthenticationServiceService } from './authentication-service.service';\r\nimport { HttpRequest } from '@angular/common/http';\r\nimport { HttpHandler } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpEvent } from '@angular/common/http';\r\nimport { Injector } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TokenInterceptorService implements HttpInterceptor {\r\n\r\n  constructor(private inj: Injector) { }\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    let authenticationService:AuthenticationServiceService = this.inj.get(AuthenticationServiceService);\r\n    request = request.clone({\r\n      setHeaders: {\r\n        'Authorization': `${authenticationService.getToken()}`\r\n      }\r\n    });\r\n\r\n    return next.handle(request);\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { Router } from '@angular/router';\r\nimport { AuthenticationServiceService } from '../../services/auth/authentication-service.service';\r\n\r\n@Component({\r\n  selector: 'app-sluzba-login',\r\n  templateUrl: './sluzba-login.component.html',\r\n  styleUrls: ['./sluzba-login.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class SluzbaLoginComponent implements OnInit {\r\n\r\n  public user;\r\n\r\n  public wrongUsernameOrPass:boolean;\r\n\r\n  constructor(private authenticationService:AuthenticationServiceService,\r\n              private router: Router) {\r\n    this.user = {};\r\n    this.wrongUsernameOrPass = false;\r\n   }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  login():void{\r\n    this.authenticationService.login(this.user.username, this.user.password).subscribe(\r\n      (loggedIn:boolean) => {\r\n        if(loggedIn){\r\n          this.router.navigate(['/dashboard']);\r\n        }\r\n      }\r\n    ,\r\n    (err:Error) => {\r\n      if(err.toString()==='Ilegal login'){\r\n        this.wrongUsernameOrPass = true;\r\n        console.log(err);\r\n      }\r\n      else{\r\n        Observable.throw(err);\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<!-- <div id=\"loginContainer\" class=\"container\" style=\"width: 100%;\">\r\n<form class=\"text-center border border-light p-5\" >\r\n\r\n    <p>Login</p>\r\n  \r\n    <input type=\"text\" id=\"username\" class=\"form-control mb-4 cs-12\" name=\"username\"  placeholder=\"Username\">\r\n  \r\n    <input type=\"password\" id=\"inputPassword\" class=\"form-control mb-4 s-12\" name=\"password\">\r\n  \r\n    <div class=\"row\" style=\"margin: auto; max-width: 100%;\">\r\n        <div class=\"col-7\" style=\"margin: auto; height: max-content;\"></div>\r\n        <div id=\"forgot\" class=\"col-5\" style=\"margin: auto;\">\r\n            <div  style=\"margin: auto;\">\r\n                <a href=\"\" >Forgot password ?</a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\" style=\"margin: auto; max-width: 100%;\">\r\n        <div class=\"col-12\" style=\"margin: auto; height: max-content;\">\r\n            <button class=\"waves-light btn-default btn\" type=\"submit\" color=\"default\">Sign in</button>\r\n        </div>\r\n    </div> \r\n  \r\n  \r\n\r\n \r\n  </form>\r\n  <div *ngIf=wrongUsernameOrPass class=\"alert alert-warning box-msg\" role=\"alert\">\r\n    Wrong username or password.\r\n  </div>\r\n</div> \r\n -->\r\n\r\n<!--  <div class=\"login\">\r\n    <div class=\"account-login\">\r\n       <form class=\"login-form\" (ngSubmit)=\"login()\">\r\n          <div class=\"form-group\">\r\n             <input type=\"text\" class=\"form-control\" name=\"username\"  placeholder=\"Username\" [(ngModel)]=\"user.username\"   required autofocus>\r\n          </div>\r\n          <div class=\"form-group\">\r\n             <input type=\"password\" name=\"password\" placeholder=\"Password\"  [(ngModel)]=\"user.password\" placeholder=\"Password\"  required  class=\"form-control\">\r\n          </div>\r\n          <div class=\"remember\">\r\n             <a href=\"#\" class=\"pull-right\">Forgot Password?</a>\r\n          </div>\r\n          <button class=\"btn\">Login</button>\r\n       </form>\r\n       <div *ngIf=wrongUsernameOrPass class=\"alert alert-warning box-msg\" role=\"alert\">\r\n        Wrong username or password.\r\n      </div>\r\n    </div>\r\n</div> --> \r\n\r\n <div class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-3\"></div>\r\n    <div class=\"col-md-6\">\r\n      <h1 class=\"text-center\">Login</h1>\r\n      <form  (ngSubmit)=\"login()\">\r\n      <div class=\"input-group\">\r\n        <input type=\"text\" class=\"form-control\" name=\"username\"  placeholder=\"Username\" [(ngModel)]=\"user.username\"   required autofocus>\r\n        <span class=\"input-group-addon\"><span class=\"glyphicon glyphicon-user\"></span></span>\r\n      </div>\r\n      <div class=\"input-group\">\r\n        <input type=\"password\" class=\"form-control\" name=\"password\" placeholder=\"Password\"  [(ngModel)]=\"user.password\" placeholder=\"Password\"  required />\r\n        <span class=\"input-group-addon\"><span class=\"glyphicon glyphicon-lock\"></span></span>\r\n      </div>\r\n      <p class=\"text-center\">Are you forgot your password? <a href=\"#\">Click here</a></p>\r\n      <button class=\"btn btn-default\">Login</button>\r\n    </form>\r\n    <div *ngIf=wrongUsernameOrPass class=\"alert alert-warning box-msg\" role=\"alert\">\r\n      Wrong username or password.\r\n    </div>\r\n    <div class=\"col-md-3\"></div>\r\n  </div>\r\n</div> ","import { Course } from \"./course\";\r\nimport { Teacher } from \"./teacher\";\r\nimport { TeachingType } from \"./teaching-type\";\r\n\r\nexport class Teaching implements TeachingInterface{\r\n\tpublic id: number;\r\n\tpublic startDate: Date;\r\n\tpublic endDate: Date;\r\n\tpublic teacher: Teacher;\r\n    public course: Course;\r\n    public type: TeachingType;\r\n\t\t\r\n\tconstructor(teachingCfg:TeachingInterface)\r\n\t{\t\r\n\t\tthis.id = teachingCfg.id;\r\n\t\tthis.startDate = teachingCfg.startDate;\r\n\t\tthis.endDate = teachingCfg.endDate;\t\r\n\t\tthis.teacher = teachingCfg.teacher;\r\n        this.course = teachingCfg.course;\r\n        this.type = teachingCfg.type;\r\n\t}\r\n}\r\n\r\ninterface TeachingInterface{\r\n\tid?: number;\r\n\tstartDate: Date;\r\n\tendDate: Date;\r\n    teacher: Teacher;\r\n    course: Course;\r\n    type: TeachingType;\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpResponse, HttpClient } from '@angular/common/http';\r\nimport {Observable, Subject} from 'rxjs';\r\n\r\nimport { AuthenticationServiceService } from '../../services/auth/authentication-service.service';\r\nimport { Course } from '../../model/course';\r\nimport { Enrollment } from 'src/app/model/enrollment';\r\nimport { Teaching } from 'src/app/model/teaching';\r\n\r\n@Injectable()\r\nexport class SluzbaCoursesServiceService {\r\n\r\n  private coursesUrl = 'courses';\r\n  private enrollmentsUrl = 'enrollments';\r\n  private teachingsUrl = 'teachings';\r\n\r\n  constructor(private http: HttpClient, private authService: AuthenticationServiceService) { }\r\n\r\n  private RegenerateData = new Subject<void>();\r\n\r\n  RegenerateData$ = this.RegenerateData.asObservable();\r\n\r\n  announceChange() {\r\n      this.RegenerateData.next();\r\n  }\r\n  \r\n  getCourses(): Observable<HttpResponse<Course[]>> {\r\n      let username = this.authService.getCurrentUser().username;\r\n      console.log(\"username: \" + username);\r\n      const url = `${this.coursesUrl}/getAllCoursesForUser/${username}`;\r\n      return this.http.get<Course[]>(url, {observe: 'response'});\r\n  }\r\n\r\n  getCourse(id: number): Observable<HttpResponse<Course>> {\r\n    const url = `${this.coursesUrl}/getCourseById/${id}`;\r\n    return this.http.get<Course>(url, {observe: 'response'});\r\n  }\r\n\r\n  addCourse(course: Course): Observable<HttpResponse<Course>> {\r\n    const urlPost = `${this.coursesUrl}/addCourse`;\r\n    return this.http.post<Course>(urlPost, course, {observe: 'response'});\r\n  } \r\n\r\n  editCourse(course: Course): Observable<HttpResponse<Course>> {\r\n    const urlPut =`${this.coursesUrl}/updateCourse/${course.id}`;\r\n    return this.http.put<Course>(urlPut, course, {observe: 'response'});\r\n  }\r\n\r\n  deleteCourse(courseId: number): Observable<HttpResponse<any>> {\r\n    const url = `${this.coursesUrl}/deleteCourse/${courseId}`;\r\n    return this.http.put<any>(url, {observe: 'response'});\r\n  }\r\n\r\n  getCourseEnrollments(courseId: number): Observable<HttpResponse<Enrollment[]>> {\r\n    const url = `${this.enrollmentsUrl}/getAllEnrollmentsForCourse/${courseId}`;\r\n    return this.http.get<Enrollment[]>(url, {observe: 'response'});\r\n  }\r\n\r\n  getCourseTeachings(courseId: number): Observable<HttpResponse<Teaching[]>> {\r\n    const url = `${this.teachingsUrl}/getAllTeachingsForCourse/${courseId}`;\r\n    return this.http.get<Teaching[]>(url, {observe: 'response'});\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpResponse, HttpClient } from '@angular/common/http';\r\nimport {Observable, Subject} from 'rxjs';\r\nimport { Teaching } from 'src/app/model/teaching';\r\nimport { TeachingType } from 'src/app/model/teaching-type';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SluzbaTeachingsServiceService {\r\n\r\n  private teachingsUrl = 'teachings';\r\n  private teachingTypesUrl = 'teachingTypes';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  private RegenerateData = new Subject<void>();\r\n\r\n  RegenerateData$ = this.RegenerateData.asObservable();\r\n\r\n  announceChange() {\r\n      this.RegenerateData.next();\r\n  }\r\n  \r\n  addTeaching(teaching: Teaching, courseId: number): Observable<HttpResponse<Teaching>> {\r\n    const urlPost = `${this.teachingsUrl}/addTeaching/${courseId}`;\r\n    return this.http.post<Teaching>(urlPost, teaching, {observe: 'response'});\r\n  }\r\n  \r\n  deleteTeaching(teachingId: number): Observable<HttpResponse<any>> {\r\n      const url = `${this.teachingsUrl}/deleteTeaching/${teachingId}`;\r\n      return this.http.put<any>(url, {observe: 'response'});\r\n  }\r\n\r\n  getTeachingTypes(): Observable<HttpResponse<TeachingType[]>> {\r\n    const url = `${this.teachingTypesUrl}/getAllTeachingTypes`;\r\n    return this.http.get<TeachingType[]>(url, {observe: 'response'});\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpResponse, HttpClient } from '@angular/common/http';\r\nimport {Observable, Subject} from 'rxjs';\r\n\r\nimport { AuthenticationServiceService } from '../../services/auth/authentication-service.service';\r\nimport { User } from '../../model/user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SluzbaNavbarServiceService {\r\n\r\n  private usersUrl = 'users';\r\n\r\n  constructor(private http: HttpClient, private authService: AuthenticationServiceService) { }\r\n\r\n  private RegenerateData = new Subject<void>();\r\n\r\n  RegenerateData$ = this.RegenerateData.asObservable();\r\n\r\n  announceChange() {\r\n      this.RegenerateData.next();\r\n  }\r\n  \r\n  getUser(): Observable<HttpResponse<User>> {\r\n      let username = this.authService.getCurrentUser().username;\r\n      console.log(\"username: \" + username);\r\n      const url = `${this.usersUrl}/getUserByUsername/${username}`;\r\n      return this.http.get<User>(url, {observe: 'response'});\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\n\r\nimport {switchMap} from 'rxjs/operators';\r\nimport { SluzbaCoursesServiceService } from '../sluzba-courses/sluzba-courses-service.service';\r\nimport { Course } from 'src/app/model/course';\r\nimport { Enrollment } from 'src/app/model/enrollment';\r\nimport { SluzbaEnrollmentsServiceService } from '../sluzba-enrollments/sluzba-enrollments-service.service';\r\nimport { AuthenticationServiceService } from 'src/app/services/auth/authentication-service.service';\r\nimport { Teaching } from 'src/app/model/teaching';\r\nimport { SluzbaTeachingsServiceService } from '../sluzba-teachings/sluzba-teachings-service.service';\r\n\r\n@Component({\r\n  selector: 'app-sluzba-course-details',\r\n  templateUrl: './sluzba-course-details.component.html',\r\n  styleUrls: ['./sluzba-course-details.component.css']\r\n})\r\nexport class SluzbaCourseDetailsComponent implements OnInit {\r\n\r\n  course: Course = new Course({ // if we add a new course, create an empty course\r\n    name: '',\r\n    code: '',\r\n    espb: 0,\r\n    active: true\r\n  });\r\n\r\n  enrollments: Enrollment[];\r\n  teachings: Teaching[];\r\n\r\n  mode: string = 'ADD';\r\n\r\n  constructor(private courseService: SluzbaCoursesServiceService, private enrollmentService: SluzbaEnrollmentsServiceService, private teachingService: SluzbaTeachingsServiceService,\r\n    private route: ActivatedRoute, private location: Location, private router: Router, private authService: AuthenticationServiceService) {\r\n    enrollmentService.RegenerateData$.subscribe(() =>\r\n      this.getEnrollments()\r\n    );\r\n    teachingService.RegenerateData$.subscribe(() =>\r\n      this.getTeachings()\r\n    );\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.route.snapshot.params['id']) {\r\n      this.mode = 'EDIT';\r\n      // fetch course if we edit the existing course\r\n      this.route.params.pipe(switchMap((params: Params) =>\r\n          this.courseService.getCourse(+params['id'])))\r\n        .subscribe(res => {\r\n          this.course = res.body;\r\n          this.getEnrollments();\r\n          this.getTeachings();\r\n        });\r\n    }\r\n  }\r\n\r\n  private getEnrollments(): void {\r\n    this.courseService.getCourseEnrollments(this.course.id).subscribe(res =>\r\n      this.enrollments = res.body);\r\n  }\r\n\r\n  private getTeachings(): void {\r\n    this.courseService.getCourseTeachings(this.course.id).subscribe(res =>\r\n      this.teachings = res.body);\r\n  }\r\n\r\n\r\n  save(): void {\r\n    this.mode == 'ADD' ? this.add() : this.edit();\r\n  }\r\n\r\n  private add(): void {\r\n    this.courseService.addCourse(this.course)\r\n      .subscribe(res => {\r\n        this.courseService.announceChange();\r\n        this.goBack();\r\n      });\r\n  }\r\n\r\n  private edit(): void {\r\n    this.courseService.editCourse(this.course)\r\n      .subscribe(course => {\r\n        this.courseService.announceChange();\r\n        this.goBack();\r\n      });\r\n  }\r\n\r\n  goBack(): void {\r\n    this.location.back();\r\n  }\r\n\r\n  \r\n  isAdmin():boolean{\r\n    return this.authService.isAdmin();\r\n  }\r\n\r\n  gotoAddEnrollment(): void {\r\n    this.router.navigate(['/addEnrollment'], { queryParams: { courseId: this.course.id } });\r\n  }\r\n\r\n  deleteEnrollment(enrollmentId: number, studentName: string, studentLastName: string, courseName: string): void {\r\n    if(confirm(\"Are you sure to delete student \" + studentName + \" \" + studentLastName + \" from course \" + courseName+ \"?\" )){\r\n    this.enrollmentService.deleteEnrollment(enrollmentId).subscribe(\r\n      () => this.getEnrollments()\r\n    );\r\n    }\r\n  }\r\n\r\n  gotoAddTeaching(): void {\r\n    this.router.navigate(['/addTeaching'], { queryParams: { courseId: this.course.id } });\r\n  }\r\n\r\n  deleteTeaching(teachingId: number, teacherName: String, teacherLastName: String, courseName: string): void {\r\n    if(confirm(\"Are you sure to delete teacher \" + teacherName + \" \" + teacherLastName + \" from course\" + courseName + \"?\")){\r\n    this.teachingService.deleteTeaching(teachingId).subscribe(\r\n      () => this.getTeachings()\r\n    );\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n","<div class=\"main-content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <div class=\"card\" style=\"padding-left: 10px;\">\r\n          <h3>Course</h3>\r\n          <form>\r\n            <div class=\"form-group\">\r\n              <label for=\"field1c\" class=\"form-control-label\">Name</label>\r\n              <input type=\"text\" [(ngModel)]=\"course.name\" placeholder=\"Name\" class=\"form-control\" id=\"field1c\"\r\n                name=\"field1\">\r\n              <label for=\"field3c\" class=\"form-control-label\">Code</label>\r\n              <input type=\"text\" [(ngModel)]=\"course.code\" placeholder=\"Code\" class=\"form-control\" id=\"field3c\"\r\n                name=\"field3\">\r\n              <label for=\"field2c\" class=\"form-control-label\">ESPB</label>\r\n              <input type=\"number\" [(ngModel)]=\"course.espb\" placeholder=\"ESPB\" class=\"form-control\" id=\"field2c\"\r\n                name=\"field2\">\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div *ngIf=\"course.id\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n          <div class=\"card\" style=\"padding-left: 10px;\">\r\n            <div>\r\n              <h3>Teachers</h3>\r\n              <button type=\"button\" class=\"btn btn-primary\" aria-label=\"Add\" (click)=\"gotoAddTeaching()\">\r\n                <span class=\"fa fa-plus\" aria-hidden=\"true\"></span>\r\n              </button>\r\n            </div>\r\n            <div class=\"content table-responsive table-full-width\" style=\"padding-top: 2%;\">\r\n              <table class=\"table table-bordered\">\r\n                <tr *ngFor=\"let teaching of teachings\">\r\n                  <td>\r\n                    {{teaching.type.name}} {{teaching.teacher.user.firstName}} {{teaching.teacher.user.lastName}}\r\n                    [Since {{teaching.startDate | date: 'dd.MM.yyyy'}} until {{teaching.endDate | date: 'dd.MM.yyyy'}}]\r\n                  </td>\r\n                  <td>\r\n                    <button type=\"button\" class=\"btn btn-danger right\" aria-label=\"Delete\"\r\n                      (click)=\"deleteTeaching(teaching.id,teaching.teacher.user.firstName,teaching.teacher.user.lastName ,course.name)\">\r\n                      <span class=\"fa fa-trash\" aria-hidden=\"true\"></span>\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-12\">\r\n          <div class=\"card\" style=\"padding-left: 10px;\">\r\n            <div>\r\n              <h3>Students</h3>\r\n              <button type=\"button\" class=\"btn btn-primary\" aria-label=\"Add\" (click)=\"gotoAddEnrollment()\">\r\n                <span class=\"fa fa-plus\" aria-hidden=\"true\"></span>\r\n              </button>\r\n            </div>\r\n            <div class=\"content table-responsive table-full-width\" style=\"padding-top: 2%;\">\r\n              <table class=\"table table-bordered\">\r\n                <tr *ngFor=\"let enrollment of enrollments\">\r\n                  <td>\r\n                    {{enrollment.student.user.firstName}} {{enrollment.student.user.lastName}}\r\n                    {{enrollment.student.cardName}}\r\n                    [Since {{enrollment.startDate | date: 'dd.MM.yyyy'}} until {{enrollment.endDate | date:\r\n                    'dd.MM.yyyy'}}]\r\n                  </td>\r\n                  <td>\r\n                    <button type=\"button\" class=\"btn btn-danger right\" aria-label=\"Delete\"\r\n                      (click)=\"deleteEnrollment(enrollment.id,enrollment.student.user.firstName,enrollment.student.user.lastName ,course.name)\">\r\n                      <span class=\"fa fa-trash\" aria-hidden=\"true\"></span>\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div *ngIf=\"isAdmin()\">\r\n      <button class=\"btn btn-success\" (click)=\"save()\">OK</button>\r\n      <button class=\"btn btn-danger\" (click)=\"goBack()\">Cancel</button>\r\n    </div>\r\n  </div>\r\n</div>","import { AuthenticationServiceService } from './services/auth/authentication-service.service';\r\nimport { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { Location, LocationStrategy, PathLocationStrategy, PopStateEvent } from '@angular/common';\r\nimport 'rxjs/add/operator/filter';\r\nimport { Router, NavigationEnd, NavigationStart } from '@angular/router';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport PerfectScrollbar from 'perfect-scrollbar';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit{\r\n  title = 'angularApp';\r\n  private _router: Subscription;\r\n  private lastPoppedUrl: string;\r\n  private yScrollStack: number[] = [];\r\n\r\n  constructor(public location: Location, private authService: AuthenticationServiceService,\r\n    private router: Router){\r\n\r\n  }\r\n  \r\n  ngOnInit() {\r\n    console.log(this.router)\r\n      const isWindows = navigator.platform.indexOf('Win') > -1 ? true : false;\r\n\r\n      if (isWindows) {\r\n          // if we are on windows OS we activate the perfectScrollbar function\r\n\r\n          document.getElementsByTagName('body')[0].classList.add('perfect-scrollbar-on');\r\n      } else {\r\n          document.getElementsByTagName('body')[0].classList.remove('perfect-scrollbar-off');\r\n      }\r\n      const elemMainPanel = <HTMLElement>document.querySelector('.main-panel');\r\n      const elemSidebar = <HTMLElement>document.querySelector('.sidebar .sidebar-wrapper');\r\n\r\n      this.location.subscribe((ev:PopStateEvent) => {\r\n          this.lastPoppedUrl = ev.url;\r\n      });\r\n       this.router.events.subscribe((event:any) => {\r\n          if (event instanceof NavigationStart) {\r\n             if (event.url != this.lastPoppedUrl)\r\n                 this.yScrollStack.push(window.scrollY);\r\n         } else if (event instanceof NavigationEnd) {\r\n             if (event.url == this.lastPoppedUrl) {\r\n                 this.lastPoppedUrl = undefined;\r\n                 window.scrollTo(0, this.yScrollStack.pop());\r\n             } else\r\n                 window.scrollTo(0, 0);\r\n         }\r\n      });\r\n      this._router = this.router.events.filter(event => event instanceof NavigationEnd).subscribe((event: NavigationEnd) => {\r\n           elemMainPanel.scrollTop = 0;\r\n           elemSidebar.scrollTop = 0;\r\n      });\r\n      if (window.matchMedia(`(min-width: 960px)`).matches && !this.isMac()) {\r\n          let ps = new PerfectScrollbar(elemMainPanel);\r\n          ps = new PerfectScrollbar(elemSidebar);\r\n      }\r\n  }\r\n  ngAfterViewInit() {\r\n      this.runOnRouteChange();\r\n  }\r\n  runOnRouteChange(): void {\r\n    if (window.matchMedia(`(min-width: 960px)`).matches && !this.isMac()) {\r\n      const elemMainPanel = <HTMLElement>document.querySelector('.main-panel');\r\n      const ps = new PerfectScrollbar(elemMainPanel);\r\n      ps.update();\r\n    }\r\n  }\r\n  isMac(): boolean {\r\n      let bool = false;\r\n      if (navigator.platform.toUpperCase().indexOf('MAC') >= 0 || navigator.platform.toUpperCase().indexOf('IPAD') >= 0) {\r\n          bool = true;\r\n      }\r\n      return bool;\r\n  }\r\n  \r\n  isLoggedIn():boolean{\r\n    return this.authService.isLoggedIn();\r\n  }\r\n  \r\n}\r\n","<div class=\"container\">\r\n  <div class=\"wrapper\">\r\n    <div class=\"sidebar\" *ngIf=\"isLoggedIn()\"  data-color=\"azzure\" data-image=\"\">\r\n        <app-sluzba-sidebar></app-sluzba-sidebar>\r\n        <div class=\"sidebar-background\" style=\"background-image: url(assets/img/sidebar-4.jpg)\"></div>\r\n    </div>\r\n  \r\n    <div class=\"main-panel\">\r\n        <navbar-cmp></navbar-cmp>\r\n        <router-outlet></router-outlet>\r\n    </div>\r\n  \r\n  </div>\r\n</div>\r\n","import { Course } from \"./course\";\r\nimport { Student } from \"./student\";\r\n\r\nexport class Enrollment implements EnrollmentInterface{\r\n\tpublic id: number;\r\n\tpublic startDate: Date;\r\n\tpublic endDate: Date;\r\n\tpublic student: Student;\r\n    public course: Course;\r\n\t\t\r\n\tconstructor(enrollmentCfg:EnrollmentInterface)\r\n\t{\t\r\n\t\tthis.id = enrollmentCfg.id;\r\n\t\tthis.startDate = enrollmentCfg.startDate;\r\n\t\tthis.endDate = enrollmentCfg.endDate;\t\r\n\t\tthis.student = enrollmentCfg.student;\r\n        this.course = enrollmentCfg.course;\r\n\t}\r\n}\r\n\r\ninterface EnrollmentInterface{\r\n\tid?: number;\r\n\tstartDate: Date;\r\n\tendDate: Date;\r\n    student: Student;\r\n    course: Course;\r\n}","import { Account } from \"./account\";\r\n\r\nexport class Payment implements PaymentInterface{\r\n\tpublic id: number;\r\n\tpublic date: Date;\r\n    public amount: number;\r\n    public purpose : string;\r\n\tpublic account: Account;\r\n\t\t\r\n\tconstructor(paymentCfg: PaymentInterface)\r\n\t{\t\r\n\t\tthis.id = paymentCfg.id;\r\n\t\tthis.date = paymentCfg.date;\r\n        this.amount = paymentCfg.amount;\r\n        this.purpose = paymentCfg.purpose;\r\n\t\tthis.account = paymentCfg.account;\r\n\t}\r\n}\r\n\r\ninterface PaymentInterface {\r\n\tid?: number;\r\n\tdate: Date;\r\n    amount: number;\r\n    purpose : string;\r\n\taccount: Account;\r\n}","import { DocumentType } from \"./document-type\";\r\nimport { Student } from \"./student\";\r\n\r\nexport class Document implements DocumentInterface{\r\n\tpublic id: number;\r\n\tpublic title: string;\r\n\tpublic url: string;\r\n    public type: DocumentType;\r\n\tpublic student: Student;\r\n\t\t\r\n\tconstructor(documentCfg: DocumentInterface)\r\n\t{\t\r\n\t\tthis.id = documentCfg.id;\r\n\t\tthis.title = documentCfg.title;\r\n\t\tthis.url = documentCfg.url;\r\n        this.type = documentCfg.type;\r\n\t\tthis.student = documentCfg.student;\r\n\t}\r\n}\r\n\r\ninterface DocumentInterface {\r\n\tid?: number;\r\n\ttitle: string;\r\n\turl: string;\r\n    type: DocumentType;\r\n\tstudent: Student;\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpResponse, HttpClient } from '@angular/common/http';\r\nimport {Observable, Subject} from 'rxjs';\r\n\r\nimport { AuthenticationServiceService } from '../../services/auth/authentication-service.service';\r\nimport { Teacher } from '../../model/teacher';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SluzbaTeachersServiceService {\r\n\r\n  private teachersUrl = 'teachers';\r\n\r\n  constructor(private http: HttpClient, private authService: AuthenticationServiceService) { }\r\n\r\n  private RegenerateData = new Subject<void>();\r\n\r\n  RegenerateData$ = this.RegenerateData.asObservable();\r\n\r\n  announceChange() {\r\n      this.RegenerateData.next();\r\n  }\r\n  \r\n  getTeachers(): Observable<HttpResponse<Teacher[]>> {\r\n      const url = `${this.teachersUrl}/getAllTeachers`;\r\n      return this.http.get<Teacher[]>(url, {observe: 'response'});\r\n  }\r\n}\r\n","import { User } from \"./user\";\r\n\r\nexport class Teacher implements TeacherInterface{\r\n\tpublic id: number;\r\n\tpublic user: User;\r\n\t\t\r\n\tconstructor(teacherCfg:TeacherInterface)\r\n\t{\t\r\n\t\tthis.id = teacherCfg.id;\t\r\n\t\tthis.user = teacherCfg.user;\r\n\t}\r\n}\r\n\r\ninterface TeacherInterface{\r\n\tid?: number;\r\n\tuser: User;\r\n}","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { SluzbaProfileComponent } from './components/sluzba-profile/sluzba-profile.component';\r\n\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\r\nimport { SluzbaLoginComponent } from './components/sluzba-login/sluzba-login.component';\r\nimport { SluzbaNotFoundPageComponent } from './components/sluzba-not-found-page/sluzba-not-found-page.component';\r\nimport { SluzbaCoursesComponent } from './components/sluzba-courses/sluzba-courses.component';\r\nimport { SluzbaCoursesServiceService } from './components/sluzba-courses/sluzba-courses-service.service';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { JwtUtilsService } from './services/auth/jwt-utils.service';\r\nimport { TokenInterceptorService } from './services/auth/token-interceptor.service';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { AuthenticationServiceService } from './services/auth/authentication-service.service';\r\nimport { CanActivateAuthGuardService } from './services/auth/can-activate-auth.guard.service';\r\nimport { SluzbaPaymentsComponent } from './components/sluzba-payments/sluzba-payments.component';\r\nimport { SluzbaDocumentsComponent } from './components/sluzba-documents/sluzba-documents.component';\r\nimport { SluzbaStudentsComponent } from './components/sluzba-students/sluzba-students.component';\r\nimport { SluzbaTeachersComponent } from './components/sluzba-teachers/sluzba-teachers.component';\r\nimport { SluzbaCourseDetailsComponent } from './components/sluzba-course-details/sluzba-course-details.component';\r\nimport { SluzbaEnrollmentsComponent } from './components/sluzba-enrollments/sluzba-enrollments.component';\r\nimport { SluzbaHomeComponent } from './components/sluzba-home/sluzba-home.component';\r\nimport { SluzbaNavbarComponent } from './components/sluzba-navbar/sluzba-navbar.component';\r\nimport { SluzbaSidebarComponent } from './components/sluzba-sidebar/sluzba-sidebar.component';\r\nimport { SluzbaTeachingsComponent } from './components/sluzba-teachings/sluzba-teachings.component';\r\nimport { SluzbaStudentDetailsComponent } from './components/sluzba-student-details/sluzba-student-details.component';\r\nimport { SluzbaDocumentDetailsComponent } from './components/sluzba-document-details/sluzba-document-details.component';\r\nimport { SluzbaPaymentDetailsComponent } from './components/sluzba-payment-details/sluzba-payment-details.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    SluzbaProfileComponent,\r\n    SluzbaLoginComponent,\r\n    SluzbaNotFoundPageComponent,\r\n    SluzbaCoursesComponent,\r\n    SluzbaPaymentsComponent,\r\n    SluzbaDocumentsComponent,\r\n    SluzbaStudentsComponent,\r\n    SluzbaTeachersComponent,\r\n    SluzbaCourseDetailsComponent,\r\n    SluzbaEnrollmentsComponent,\r\n    SluzbaHomeComponent,\r\n    SluzbaNavbarComponent,\r\n    SluzbaSidebarComponent,\r\n    SluzbaTeachingsComponent,\r\n    SluzbaStudentDetailsComponent,\r\n    SluzbaDocumentDetailsComponent,\r\n    SluzbaPaymentDetailsComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    NgbModule,\r\n    HttpClientModule,\r\n    AppRoutingModule,\r\n    RouterModule\r\n  ],\r\n  providers: [\r\n    SluzbaCoursesServiceService,\r\n    AuthenticationServiceService,\r\n    CanActivateAuthGuardService,\r\n    JwtUtilsService,\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: TokenInterceptorService,\r\n      multi: true\r\n    },\r\n  ],\r\n  schemas: [ CUSTOM_ELEMENTS_SCHEMA],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit, ElementRef } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { ROUTES } from '../sluzba-sidebar/sluzba-sidebar.component';\r\nimport {Location, LocationStrategy, PathLocationStrategy} from '@angular/common';\r\nimport { AuthenticationServiceService } from 'src/app/services/auth/authentication-service.service';\r\nimport { User } from 'src/app/model/user';\r\nimport { SluzbaNavbarServiceService } from './sluzba-navbar-service.service';\r\n\r\n@Component({\r\n  selector: 'navbar-cmp',\r\n  templateUrl: './sluzba-navbar.component.html'\r\n})\r\nexport class SluzbaNavbarComponent implements OnInit {\r\n\r\n    private listTitles: any[];\r\n    location: Location;\r\n    private toggleButton: any;\r\n    private sidebarVisible: boolean;\r\n    user: User;\r\n    subscription: Subscription;\r\n\r\n    constructor(private navbarService: SluzbaNavbarServiceService,  location: Location,  private element: ElementRef, private authenticationService:AuthenticationServiceService, private router: Router) {\r\n      this.subscription = navbarService.RegenerateData$.subscribe(() =>\r\n      this.getUser()\r\n      );\r\n      this.location = location;\r\n      this.sidebarVisible = false;\r\n    }\r\n\r\n    ngOnInit(){\r\n      this.getUser();\r\n      this.listTitles = ROUTES.filter(listTitle => listTitle);\r\n      const navbar: HTMLElement = this.element.nativeElement;\r\n      this.toggleButton = navbar.getElementsByClassName('navbar-toggle')[0];\r\n    }\r\n\r\n    getUser() {\r\n      this.navbarService.getUser().subscribe(res =>\r\n        this.user = res.body);\r\n    }\r\n\r\n    logout():void{\r\n      this.authenticationService.logout();\r\n      this.router.navigate(['/login']);\r\n    }\r\n\r\n    sidebarOpen() {\r\n        const toggleButton = this.toggleButton;\r\n        const body = document.getElementsByTagName('body')[0];\r\n        setTimeout(function(){\r\n            toggleButton.classList.add('toggled');\r\n        }, 500);\r\n        body.classList.add('nav-open');\r\n\r\n        this.sidebarVisible = true;\r\n    };\r\n    sidebarClose() {\r\n        const body = document.getElementsByTagName('body')[0];\r\n        this.toggleButton.classList.remove('toggled');\r\n        this.sidebarVisible = false;\r\n        body.classList.remove('nav-open');\r\n    };\r\n    sidebarToggle() {\r\n        // const toggleButton = this.toggleButton;\r\n        // const body = document.getElementsByTagName('body')[0];\r\n        if (this.sidebarVisible === false) {\r\n            this.sidebarOpen();\r\n            console.log('opened');\r\n        } else {\r\n            this.sidebarClose();\r\n            console.log('closed');\r\n        }\r\n    };\r\n\r\n    getTitle(){\r\n      var titlee = this.location.prepareExternalUrl(this.location.path());\r\n      if(titlee.charAt(0) === '#'){\r\n          titlee = titlee.slice( 1 );\r\n      }\r\n\r\n      for(var item = 0; item < this.listTitles.length; item++){\r\n          if(this.listTitles[item].path === titlee){\r\n              return this.listTitles[item].title;\r\n          }\r\n      }\r\n      return 'Dashboard';\r\n    }\r\n\r\n    isLoggedIn():boolean{\r\n      return this.authenticationService.isLoggedIn();\r\n    }\r\n\r\n}\r\n","<nav class=\"navbar navbar-default\" *ngIf=\"isLoggedIn()\">\r\n    <div class=\"container-fluid\">\r\n        <div class=\"navbar-header\">\r\n            <button type=\"button\" class=\"navbar-toggle\" data-toggle=\"collapse\" (click)=\"sidebarToggle()\">\r\n                <span class=\"sr-only\">Toggle navigation</span>\r\n                <span class=\"icon-bar\"></span>\r\n                <span class=\"icon-bar\"></span>\r\n                <span class=\"icon-bar\"></span>\r\n            </button>\r\n            <a class=\"navbar-brand\">{{getTitle()}}</a>\r\n        </div>\r\n        <div class=\"collapse navbar-collapse\">\r\n            <ul class=\"nav navbar-nav navbar-left\">\r\n                <li>\r\n                    <a routerLink=\"/dashboard\" class=\"dropdown-toggle\" data-toggle=\"dropdown\">\r\n                        <i class=\"fa fa-dashboard\"></i>\r\n                        <p class=\"hidden-lg hidden-md\">{{getTitle()}}</p>\r\n                    </a>\r\n                </li>\r\n                <li>\r\n                    <a routerLink=\"/profile\">\r\n                        {{ user? user.firstName : \"\"  }} {{ user? user.lastName : \"\"  }}\r\n                    </a>\r\n                </li>\r\n            </ul>\r\n\r\n            <ul class=\"nav navbar-nav navbar-right\">\r\n                <li>\r\n                    <a  (click)=\"logout()\" href=\"#\">\r\n                        Log out\r\n                    </a>\r\n                </li>\r\n                <li class=\"separator hidden-lg hidden-md\"></li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</nav>\r\n","export class DocumentType implements DocumentTypeInterface{\r\n\tpublic id: number;\r\n\tpublic code: string;\r\n    public name: string;\r\n\t\t\r\n\tconstructor(documentTypeCfg: DocumentTypeInterface)\r\n\t{\t\r\n\t\tthis.id = documentTypeCfg.id;\r\n\t\tthis.code = documentTypeCfg.code;\r\n        this.name = documentTypeCfg.name;\r\n\t}\r\n}\r\n\r\ninterface DocumentTypeInterface {\r\n\tid?: number;\r\n\tcode: string;\r\n    name: string;\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpResponse, HttpClient } from '@angular/common/http';\r\nimport {Observable, Subject} from 'rxjs';\r\n\r\nimport { AuthenticationServiceService } from '../../services/auth/authentication-service.service';\r\nimport { Account } from 'src/app/model/account';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SluzbaAccountServiceService {\r\n\r\n  private accountUrl = 'accounts';\r\n\r\n  constructor(private http: HttpClient, private authService: AuthenticationServiceService) { }\r\n\r\n  private RegenerateData = new Subject<void>();\r\n\r\n  RegenerateData$ = this.RegenerateData.asObservable();\r\n\r\n  announceChange() {\r\n      this.RegenerateData.next();\r\n  }\r\n\r\n  getAccount(id: number): Observable<HttpResponse<Account>> {\r\n    const url = `${this.accountUrl}/getAccountById/${id}`;\r\n    return this.http.get<Account>(url, {observe: 'response'});\r\n  }\r\n\r\n  getAvailableFunds(id: number): Observable<HttpResponse<number>> {\r\n    const url = `${this.accountUrl}/getAvailableFundsForAccount/${id}`;\r\n    return this.http.get<number>(url, {observe: 'response'});\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport {switchMap} from 'rxjs/operators';\r\n\r\nimport { Payment } from 'src/app/model/payment';\r\nimport { AuthenticationServiceService } from 'src/app/services/auth/authentication-service.service';\r\nimport { Account } from 'src/app/model/account';\r\nimport { SluzbaPaymentsServiceService } from '../sluzba-payments/sluzba-payments-service.service';\r\nimport { SluzbaAccountServiceService } from '../sluzba-account/sluzba-account-service.service';\r\n\r\n@Component({\r\n  selector: 'app-sluzba-payment-details',\r\n  templateUrl: './sluzba-payment-details.component.html',\r\n  styleUrls: ['./sluzba-payment-details.component.css']\r\n})\r\nexport class SluzbaPaymentDetailsComponent implements OnInit {\r\n\r\n  payment: Payment= new Payment({ // if we add a new payment, create an empty payment\r\n    date: null,\r\n    purpose: '',\r\n    amount: 0,\r\n    account: new Account({\r\n      bankAccount:'',\r\n      model: '',\r\n      personalCallToNumber:''\r\n    })\r\n  });\r\n\r\n  mode: string = 'ADD';\r\n\r\n  constructor(private accountService: SluzbaAccountServiceService, private paymentService: SluzbaPaymentsServiceService, \r\n    private route: ActivatedRoute, private location: Location, private router: Router, private authService: AuthenticationServiceService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.route.snapshot.params['id']) {\r\n      this.mode = 'EDIT';\r\n      // fetch payment if we edit the existing payment\r\n      this.route.params.pipe(switchMap((params: Params) =>\r\n          this.paymentService.getPayment(+params['id'])))\r\n        .subscribe(res => {\r\n          this.payment = res.body;\r\n        });\r\n    }else{\r\n      this.route.queryParams.subscribe(params =>\r\n        this.accountService.getAccount(params['accountId'])\r\n          .subscribe(res => \r\n            this.payment.account = res.body\r\n          ));\r\n    }\r\n  }\r\n\r\n  save(): void {\r\n    this.mode == 'ADD' ? this.add() : this.edit();\r\n  }\r\n\r\n  private add(): void {\r\n    this.paymentService.addPayment(this.payment)\r\n      .subscribe(payment => {\r\n        this.paymentService.announceChange();\r\n        this.goBack();\r\n      });\r\n  }\r\n\r\n  private edit(): void {\r\n    this.paymentService.editPayment(this.payment)\r\n      .subscribe(payment => {\r\n        this.paymentService.announceChange();\r\n        this.goBack();\r\n      });\r\n  }\r\n\r\n  goBack(): void {\r\n    this.location.back();\r\n  }\r\n\r\n  isAdmin():boolean{\r\n    return this.authService.isAdmin();\r\n  }\r\n\r\n}\r\n","<div>\r\n    <div class=\"form-group\">\r\n        <label for=\"field1c\" class=\"form-control-label\">Date</label>\r\n        <input type=\"date\" [ngModel]=\"payment.date | date:'yyyy-MM-dd'\" (ngModelChange)=\"payment.date=$event\" class=\"form-control\" id=\"field1c\"\r\n            name=\"field1\">\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n        <label for=\"field2c\" class=\"form-control-label\">Purpose</label>\r\n        <input type=\"text\" [(ngModel)]=\"payment.purpose\" placeholder=\"Purpose\" class=\"form-control\" id=\"field2c\" name=\"field2\">\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n        <label for=\"field3c\" class=\"form-control-label\">Amount</label>\r\n        <input type=\"number\" [(ngModel)]=\"payment.amount\" placeholder=\"Amount\" class=\"form-control\" id=\"field3c\" name=\"field3\">\r\n    </div>\r\n</div>\r\n\r\n<div class=\"modal-footer\" *ngIf=\"isAdmin()\">\r\n    <button class=\"btn btn-success\" (click)=\"save()\">OK</button>\r\n    <button class=\"btn btn-danger\" (click)=\"goBack()\">Cancel</button>\r\n</div>","import { Account } from \"./account\";\r\nimport { User } from \"./user\";\r\n\r\nexport class Student implements StudentInterface{\r\n\tpublic id: number;\r\n\tpublic cardName: string;\r\n\tpublic account: Account;\r\n\tpublic user: User;\r\n\t\t\r\n\tconstructor(studentCfg:StudentInterface)\r\n\t{\t\r\n\t\tthis.id = studentCfg.id;\r\n\t\tthis.cardName = studentCfg.cardName;\r\n\t\tthis.account = studentCfg.account;\t\r\n\t\tthis.user = studentCfg.user;\r\n\t}\r\n}\r\n\r\ninterface StudentInterface{\r\n\tid?: number;\r\n\tcardName: string;\r\n\taccount: Account;\r\n\tuser: User;\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { SluzbaPaymentsServiceService } from './sluzba-payments-service.service';\r\nimport { AuthenticationServiceService } from 'src/app/services/auth/authentication-service.service';\r\n\r\ninterface Payment {\r\n  id?: number;\r\n  date: Date;\r\n  amount: number;\r\n  purpose: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-sluzba-payments',\r\n  templateUrl: './sluzba-payments.component.html',\r\n  styleUrls: ['./sluzba-payments.component.css']\r\n})\r\nexport class SluzbaPaymentsComponent implements OnInit {\r\n\r\n  payments: Payment[];\r\n\r\n  subscription: Subscription;\r\n\r\n  constructor(private paymentService: SluzbaPaymentsServiceService, private router: Router, private authService: AuthenticationServiceService) {\r\n    this.subscription = paymentService.RegenerateData$.subscribe(() =>\r\n      this.getPayments()\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getPayments();\r\n  }\r\n\r\n  getPayments() {\r\n    this.paymentService.getPayments().subscribe(res =>\r\n      this.payments = res.body);\r\n  }\r\n\r\n  isLoggedIn():boolean{\r\n    return this.authService.isLoggedIn();\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"isLoggedIn()\" class= \"main-content\" style=\"padding-top: 2%;\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n          <div class=\"card\">\r\n          <!--         <div class=\"header\">\r\n                        <h4 class=\"title\">Striped Table with Hover</h4>\r\n                        <p class=\"category\">Here is a subtitle for this table</p>\r\n                    </div> -->\r\n        <div class=\"content table-responsive table-full-width\" style=\"padding-top: 2%;\">\r\n            <table class=\"table table-hover\" style=\"text-align: center;\">\r\n              <thead>\r\n              <tr>\r\n                <th scope=\"col\">#</th>\r\n                <th scope=\"col\">Date</th>\r\n                <th scope=\"col\">Amount</th>\r\n                <th scope=\"col\">Purpose</th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr *ngFor=\"let payment of payments\">\r\n                <th scope=\"row\">{{ payment.id }}</th>\r\n                <td>{{ payment.date | date  }}</td>\r\n                <td>{{ payment.amount | number }}</td>\r\n                <td>{{ payment.purpose }}</td>\r\n              </tr>\r\n              </tbody>\r\n            </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { SluzbaDocumentsServiceService } from './sluzba-documents-service.service';\r\nimport { AuthenticationServiceService } from 'src/app/services/auth/authentication-service.service';\r\nimport { Student } from 'src/app/model/student';\r\nimport { DocumentType } from 'src/app/model/document-type';\r\n\r\ninterface Document {\r\n  id?: number;\r\n  title: string;\r\n  url: string;\r\n  type: DocumentType;\r\n  student: Student;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-sluzba-documents',\r\n  templateUrl: './sluzba-documents.component.html',\r\n  styleUrls: ['./sluzba-documents.component.css']\r\n})\r\nexport class SluzbaDocumentsComponent implements OnInit {\r\n\r\n  documents: Document[];\r\n\r\n  subscription: Subscription;\r\n\r\n  constructor(private documentService: SluzbaDocumentsServiceService, private router: Router, private authService: AuthenticationServiceService) {\r\n    this.subscription = documentService.RegenerateData$.subscribe(() =>\r\n      this.getDocuments()\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getDocuments();\r\n  }\r\n\r\n  getDocuments() {\r\n    this.documentService.getDocuments().subscribe(res =>\r\n      this.documents = res.body);\r\n  }\r\n\r\n  isLoggedIn():boolean{\r\n    return this.authService.isLoggedIn();\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"isLoggedIn()\" class= \"main-content\" style=\"padding-top: 2%;\">\r\n    <div class=\"container-fluid\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n                <div class=\"card\">\r\n           <!--         <div class=\"header\">\r\n                        <h4 class=\"title\">Striped Table with Hover</h4>\r\n                        <p class=\"category\">Here is a subtitle for this table</p>\r\n                    </div> -->\r\n        <div class=\"content table-responsive table-full-width\" style=\"padding-top: 2%;\">\r\n            <table class=\"table table-hover\" style=\"text-align: center;\">\r\n              <thead>\r\n              <tr>\r\n                <th scope=\"col\">#</th>\r\n                <th scope=\"col\">Title</th>\r\n                <th scope=\"col\">Type</th>\r\n                <th scope=\"col\">Download</th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr *ngFor=\"let document of documents\">\r\n                <th scope=\"row\">{{ document.id }}</th>\r\n                <td>{{ document.title  }}</td>\r\n                <td>{{ document.type.name  }}</td>\r\n                <td><a href=\"#\">Download</a></td></tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { HttpResponse, HttpClient } from '@angular/common/http';\r\nimport {Observable, Subject} from 'rxjs';\r\n\r\nimport { AuthenticationServiceService } from '../../services/auth/authentication-service.service';\r\nimport { Payment } from '../../model/payment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SluzbaPaymentsServiceService {\r\n\r\n  private paymentsUrl = 'payments';\r\n\r\n  constructor(private http: HttpClient, private authService: AuthenticationServiceService) { }\r\n\r\n  private RegenerateData = new Subject<void>();\r\n\r\n  RegenerateData$ = this.RegenerateData.asObservable();\r\n\r\n  announceChange() {\r\n      this.RegenerateData.next();\r\n  }\r\n  \r\n  getPayments(): Observable<HttpResponse<Payment[]>> {\r\n      let username = this.authService.getCurrentUser().username;\r\n      console.log(\"username: \" + username);\r\n      const url = `${this.paymentsUrl}/getAllPaymentsForUser/${username}`;\r\n      return this.http.get<Payment[]>(url, {observe: 'response'});\r\n  }\r\n\r\n  getPayment(id: number): Observable<HttpResponse<Payment>> {\r\n    const url = `${this.paymentsUrl}/getPaymentById/${id}`;\r\n    return this.http.get<Payment>(url, {observe: 'response'});\r\n  }\r\n\r\n  addPayment(payment: Payment): Observable<HttpResponse<Payment>> {\r\n    const urlPost = `${this.paymentsUrl}/addPayment/${payment.account.id}`;\r\n    return this.http.post<Payment>(urlPost, payment, {observe: 'response'});\r\n  } \r\n\r\n  editPayment(payment: Payment): Observable<HttpResponse<Payment>> {\r\n    const urlPut =`${this.paymentsUrl}/updatePayment/${payment.id}`;\r\n    return this.http.put<Payment>(urlPut, payment, {observe: 'response'});\r\n  }\r\n\r\n  deletePayment(paymentId: number): Observable<HttpResponse<any>> {\r\n    const url = `${this.paymentsUrl}/deletePayment/${paymentId}`;\r\n    return this.http.delete<any>(url, {observe: 'response'});\r\n  }\r\n}\r\n","export class Account implements AccountInterface{\r\n\tpublic id: number;\r\n\tpublic bankAccount: string;\r\n\tpublic model: string;\r\n\tpublic personalCallToNumber: string;\r\n\t\t\r\n\tconstructor(accountCfg:AccountInterface)\r\n\t{\t\r\n\t\tthis.id = accountCfg.id;\r\n\t\tthis.bankAccount = accountCfg.bankAccount;\r\n\t\tthis.model = accountCfg.model;\r\n\t\tthis.personalCallToNumber = accountCfg.personalCallToNumber;\r\n\t}\r\n}\r\n\r\ninterface AccountInterface{\r\n\tid?: number;\r\n\tbankAccount: string;\r\n\tmodel: string;\r\n\tpersonalCallToNumber: string;\r\n}","export class TeachingType implements TeachingTypeInterface{\r\n\tpublic id: number;\r\n\tpublic code: string;\r\n    public name: string;\r\n\t\t\r\n\tconstructor(teachingTypeCfg: TeachingTypeInterface)\r\n\t{\t\r\n\t\tthis.id = teachingTypeCfg.id;\r\n\t\tthis.code = teachingTypeCfg.code;\r\n        this.name = teachingTypeCfg.name;\r\n\t}\r\n}\r\n\r\ninterface TeachingTypeInterface {\r\n\tid?: number;\r\n\tcode: string;\r\n    name: string;\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\n\r\nimport { Enrollment } from 'src/app/model/enrollment';\r\nimport { Student } from 'src/app/model/student';\r\n\r\nimport { NgbDateStruct } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { Account } from 'src/app/model/account';\r\nimport { User } from 'src/app/model/user';\r\nimport { SluzbaStudentsServiceService } from '../sluzba-students/sluzba-students-service.service';\r\nimport { SluzbaCoursesServiceService } from '../sluzba-courses/sluzba-courses-service.service';\r\nimport { SluzbaEnrollmentsServiceService } from './sluzba-enrollments-service.service';\r\nimport { Course } from 'src/app/model/course';\r\n\r\n@Component({\r\n  selector: 'app-sluzba-enrollments',\r\n  templateUrl: './sluzba-enrollments.component.html',\r\n  styleUrls: ['./sluzba-enrollments.component.css']\r\n})\r\nexport class SluzbaEnrollmentsComponent implements OnInit {\r\n\r\n  enrollment: Enrollment;\r\n  students: Student[];\r\n\r\n  constructor(private route: ActivatedRoute, private courseService: SluzbaCoursesServiceService,\r\n    private studentService: SluzbaStudentsServiceService, private enrollmentService: SluzbaEnrollmentsServiceService,\r\n    private location: Location) {\r\n    this.enrollment = new Enrollment({\r\n      startDate: null,\r\n      endDate: null,\r\n      student: new Student({\r\n        cardName: '',\r\n        account: new Account({\r\n          bankAccount:'',\r\n          model: '',\r\n          personalCallToNumber:''\r\n        }),\r\n        user: new User({\r\n          username: '',\r\n          firstName: '',\r\n          lastName: '',\r\n          password: ''\r\n        })\r\n      }),\r\n      course: new Course({\r\n        name: '',\r\n        code: '',\r\n        espb: 0,\r\n        active: true\r\n      })\r\n    });\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.route.queryParams.subscribe(params =>\r\n      this.courseService.getCourse(params['courseId'])\r\n        .subscribe(res => \r\n          this.enrollment.course = res.body \r\n        ));\r\n\r\n    this.studentService.getStudents().subscribe(res =>\r\n      this.students = res.body);\r\n  }\r\n\r\n  add(): void {\r\n    this.enrollmentService.addEnrollment(this.enrollment, this.enrollment.course.id)\r\n      .subscribe(enrollment => {\r\n        this.enrollmentService.announceChange();\r\n        this.goBack();\r\n      });\r\n  }\r\n\r\n  goBack(): void {\r\n    this.location.back();\r\n  }\r\n  \r\n\r\n}\r\n","<div class=\"main-content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <div class=\"card\" style=\"padding-left: 10px;\">\r\n          <h3>Enroll students in course {{enrollment.course.name}} </h3>\r\n\r\n          <div class=\"form-group\">\r\n            <label>Select student</label>\r\n            <select class=\"form-control\" [(ngModel)]=\"enrollment.student\">\r\n              <option *ngFor=\"let s of students\" [ngValue]=\"s\">{{s.user.firstName}} {{s.user.lastName}} {{s.cardName}}\r\n              </option>\r\n            </select>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label>Choose start date</label>\r\n\r\n            <div class=\"input-group\">\r\n              <input type=\"date\" placeholder=\"yyyy-mm-dd\" [ngModel]=\"enrollment.startDate | date:'yyyy-MM-dd'\"\r\n                (ngModelChange)=\"enrollment.startDate=$event\" class=\"form-control\" id=\"field1c\" name=\"dp1\">\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <div class=\"form-group\">\r\n            <label>Choose end date</label>\r\n            <div class=\"input-group\">\r\n              <input type=\"date\" placeholder=\"yyyy-mm-dd\" [ngModel]=\"enrollment.endDate | date:'yyyy-MM-dd'\"\r\n                (ngModelChange)=\"enrollment.endDate=$event\" class=\"form-control\" id=\"field2c\" name=\"dp2\">\r\n\r\n            </div>\r\n          </div>\r\n\r\n\r\n\r\n          <div class=\"modal-footer\">\r\n            <button class=\"btn btn-success\" type=\"button\" (click)=\"add()\">OK</button>\r\n            <button class=\"btn btn-danger\" type=\"button\" (click)=\"goBack()\">Cancel</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","export class User implements UserInterface{\r\n\tpublic id: number;\r\n\tpublic username: string;\r\n\tpublic firstName: string;\r\n\tpublic lastName: string;\r\n\tpublic password: string;\r\n\t\t\r\n\tconstructor(userCfg:UserInterface)\r\n\t{\t\r\n\t\tthis.id = userCfg.id;\r\n\t\tthis.username = userCfg.username;\r\n\t\tthis.firstName = userCfg.firstName;\r\n\t\tthis.lastName = userCfg.lastName;\t\r\n\t\tthis.password = userCfg.password;\t\r\n\t}\r\n}\r\n\r\ninterface UserInterface{\r\n\tid?: number;\r\n\tusername: string;\r\n\tfirstName: string;\t\r\n\tlastName: string;\r\n\tpassword: string;\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { SluzbaStudentsServiceService } from './sluzba-students-service.service';\r\nimport { AuthenticationServiceService } from 'src/app/services/auth/authentication-service.service';\r\nimport { User } from 'src/app/model/user';\r\n\r\ninterface Student {\r\n  id?: number;\r\n  cardName: string;\r\n  user: User;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-sluzba-students',\r\n  templateUrl: './sluzba-students.component.html',\r\n  styleUrls: ['./sluzba-students.component.css']\r\n})\r\nexport class SluzbaStudentsComponent implements OnInit {\r\n\r\n  students: Student[];\r\n\r\n  subscription: Subscription;\r\n\r\n  constructor(private studentService: SluzbaStudentsServiceService, private router: Router, private authService: AuthenticationServiceService) {\r\n    this.subscription = studentService.RegenerateData$.subscribe(() =>\r\n      this.getStudents()\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getStudents();\r\n  }\r\n\r\n  getStudents() {\r\n    this.studentService.getStudents().subscribe(res =>\r\n      this.students = res.body);\r\n  }\r\n\r\n  \r\n  gotoAdd(): void {\r\n    this.router.navigate(['/addStudent']);\r\n  }\r\n\r\n  gotoEdit(student: Student): void {\r\n    this.router.navigate(['/editStudent', student.id]);\r\n  }\r\n\r\n  deleteStudent(studentId: number, studentFirstName: string, studentLastName: string): void {\r\n    if(confirm(\"Are you sure to delete student \" + studentFirstName + \" \" + studentLastName + \"?\")){\r\n    this.studentService.deleteStudent(studentId).subscribe(\r\n      () => this.getStudents()\r\n    );\r\n    }\r\n  }\r\n\r\n  isLoggedIn():boolean{\r\n    return this.authService.isLoggedIn();\r\n  }\r\n\r\n  isAdmin():boolean{\r\n    return this.authService.isAdmin();\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"isLoggedIn()  && isAdmin()\" class=\"main-content\" style=\"padding-top: 2%;\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <div class=\"card\">\r\n          <!--         <div class=\"header\">\r\n                          <h4 class=\"title\">Striped Table with Hover</h4>\r\n                          <p class=\"category\">Here is a subtitle for this table</p>\r\n                      </div> -->\r\n          <div class=\"content table-responsive table-full-width\" style=\"padding-top: 2%;\">\r\n            <table class=\"table table-hover\" style=\"text-align: center;\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">#</th>\r\n                  <th scope=\"col\">Firstname</th>\r\n                  <th scope=\"col\">Lastname</th>\r\n                  <th scope=\"col\">Username</th>\r\n                  <th scope=\"col\">Cardname</th>\r\n\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr *ngFor=\"let student of students\">\r\n                  <th scope=\"row\">{{ student.id }}</th>\r\n                  <td>{{ student.user.firstName }}</td>\r\n                  <td>{{ student.user.lastName }}</td>\r\n                  <td>{{ student.user.username }}</td>\r\n                  <td>{{ student.cardName }}</td>\r\n                  <td *ngIf=\"isAdmin()\">\r\n                    <button type=\"button\" class=\"btn btn-primary\" aria-label=\"Edit\" (click)=\"gotoEdit(student)\">\r\n                      <span class=\"fa fa-edit\" aria-hidden=\"true\"></span>\r\n                    </button>\r\n\r\n                    <button type=\"button\" class=\"btn btn-danger\" aria-label=\"Delete\"\r\n                      (click)=\"deleteStudent(student.id, student.user.firstName, student.user.lastName)\">\r\n                      <span class=\"fa fa-trash\" aria-hidden=\"true\"></span>\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n        <div *ngIf=\"isAdmin()\" class=\"right\">\r\n          <button type=\"button\" class=\"btn btn-success\" aria-label=\"Add\" (click)=\"gotoAdd()\">\r\n            <span class=\"fa fa-plus\" aria-hidden=\"true\"></span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport {switchMap} from 'rxjs/operators';\r\n\r\nimport { SluzbaStudentsServiceService } from '../sluzba-students/sluzba-students-service.service';\r\nimport { SluzbaDocumentDetailsServiceService } from './sluzba-document-details-service.service';\r\nimport { AuthenticationServiceService } from 'src/app/services/auth/authentication-service.service';\r\nimport { DocumentType } from 'src/app/model/document-type';\r\nimport { Student } from 'src/app/model/student';\r\nimport { Account } from 'src/app/model/account';\r\nimport { User } from 'src/app/model/user';\r\nimport { Document } from 'src/app/model/document';\r\n\r\n@Component({\r\n  selector: 'app-sluzba-document-details',\r\n  templateUrl: './sluzba-document-details.component.html',\r\n  styleUrls: ['./sluzba-document-details.component.css']\r\n})\r\nexport class SluzbaDocumentDetailsComponent implements OnInit {\r\n\r\n  document: Document= new Document({ // if we add a new document, create an empty document\r\n    title: '',\r\n    url:'',\r\n    type: new DocumentType({\r\n      name: '',\r\n      code: ''\r\n    }),\r\n    student: new Student({\r\n      cardName: '',\r\n      account: new Account({\r\n        bankAccount:'',\r\n        model: '',\r\n        personalCallToNumber:''\r\n      }),\r\n      user: new User({\r\n        username: '',\r\n        firstName: '',\r\n        lastName: '',\r\n        password: ''\r\n      })\r\n    })\r\n  });\r\n\r\n  types: DocumentType[];\r\n\r\n  mode: string = 'ADD';\r\n\r\n  constructor(private studentService: SluzbaStudentsServiceService, private documentService: SluzbaDocumentDetailsServiceService, \r\n    private route: ActivatedRoute, private location: Location, private router: Router, private authService: AuthenticationServiceService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.documentService.getDocumentTypes().subscribe(res =>\r\n      this.types = res.body);\r\n\r\n    if (this.route.snapshot.params['id']) {\r\n      this.mode = 'EDIT';\r\n      // fetch document if we edit the existing document\r\n      this.route.params.pipe(switchMap((params: Params) =>\r\n          this.documentService.getDocument(+params['id'])))\r\n        .subscribe(res => {\r\n          this.document = res.body;\r\n        });\r\n    }else{\r\n      this.route.queryParams.subscribe(params =>\r\n        this.studentService.getStudent(params['studentId'])\r\n          .subscribe(res => \r\n            this.document.student = res.body \r\n          ));\r\n    }\r\n  }\r\n\r\n  save(): void {\r\n    this.mode == 'ADD' ? this.add() : this.edit();\r\n  }\r\n\r\n  private add(): void {\r\n    this.documentService.addDocument(this.document)\r\n      .subscribe(document => {\r\n        this.documentService.announceChange();\r\n        this.goBack();\r\n      });\r\n  }\r\n\r\n  private edit(): void {\r\n    this.documentService.editDocument(this.document)\r\n      .subscribe(document => {\r\n        this.documentService.announceChange();\r\n        this.goBack();\r\n      });\r\n  }\r\n\r\n  goBack(): void {\r\n    this.location.back();\r\n  }\r\n\r\n  isAdmin():boolean{\r\n    return this.authService.isAdmin();\r\n  }\r\n\r\n}\r\n","<div class=\"main-content\">\r\n    <div class=\"container-fluid\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n                <div class=\"card\" style=\"padding-left: 10px;\">\r\n                    <h4>Select document type</h4>\r\n                    <div class=\"form-group\">\r\n                        <select class=\"form-control\" [(ngModel)]=\"document.type.id\">\r\n                            <option *ngFor=\"let dt of types\" [ngValue]=\"dt.id\">{{dt.name}}</option>\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div class=\"form-group\">\r\n                        <label for=\"field1c\" class=\"form-control-label\">Title</label>\r\n                        <input type=\"text\" [(ngModel)]=\"document.title\" placeholder=\"Title\" class=\"form-control\"\r\n                            id=\"field1c\" name=\"field1\">\r\n                    </div>\r\n\r\n                    <div class=\"form-group\">\r\n                        <label for=\"field2c\" class=\"form-control-label\">URL</label>\r\n                        <input type=\"text\" [(ngModel)]=\"document.url\" placeholder=\"URL\" class=\"form-control\"\r\n                            id=\"field2c\" name=\"field2\">\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"modal-footer\" *ngIf=\"isAdmin()\">\r\n                    <button class=\"btn btn-success\" (click)=\"save()\">OK</button>\r\n                    <button class=\"btn btn-danger\" (click)=\"goBack()\">Cancel</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-sluzba-not-found-page',\r\n  templateUrl: './sluzba-not-found-page.component.html',\r\n  styleUrls: ['./sluzba-not-found-page.component.css']\r\n})\r\nexport class SluzbaNotFoundPageComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<h1>\r\n    Page not found!\r\n  </h1>\r\n  ","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class JwtUtilsService {\r\n\r\n  constructor() { }\r\n\r\n  getRoles(token: string) {\r\n    let jwtData = token.split('.')[1];\r\n    let decodedJwtJsonData = window.atob(jwtData);\r\n    let decodedJwtData = JSON.parse(decodedJwtJsonData);\r\n    console.log(decodedJwtData);\r\n\r\n    return [decodedJwtData.role];\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { SluzbaTeachersServiceService } from './sluzba-teachers-service.service';\r\nimport { AuthenticationServiceService } from 'src/app/services/auth/authentication-service.service';\r\nimport { User } from 'src/app/model/user';\r\n\r\ninterface Teacher {\r\n  id?: number;\r\n  user: User;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-sluzba-teachers',\r\n  templateUrl: './sluzba-teachers.component.html',\r\n  styleUrls: ['./sluzba-teachers.component.css']\r\n})\r\nexport class SluzbaTeachersComponent implements OnInit {\r\n\r\n  teachers: Teacher[];\r\n\r\n  subscription: Subscription;\r\n\r\n  constructor(private teacherService: SluzbaTeachersServiceService, private router: Router, private authService: AuthenticationServiceService) {\r\n    this.subscription = teacherService.RegenerateData$.subscribe(() =>\r\n      this.getTeachers()\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getTeachers();\r\n  }\r\n\r\n  getTeachers() {\r\n    this.teacherService.getTeachers().subscribe(res =>\r\n      this.teachers = res.body);\r\n  }\r\n\r\n  isLoggedIn():boolean{\r\n    return this.authService.isLoggedIn();\r\n  }\r\n\r\n  isAdmin():boolean{\r\n    return this.authService.isAdmin();\r\n  }\r\n\r\n\r\n}\r\n","<div *ngIf=\"isLoggedIn()  && isAdmin()\" class= \"main-content\" style=\"padding-top: 2%;\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n          <div class=\"card\">\r\n          <!--         <div class=\"header\">\r\n                        <h4 class=\"title\">Striped Table with Hover</h4>\r\n                        <p class=\"category\">Here is a subtitle for this table</p>\r\n                    </div> -->\r\n        <div class=\"content table-responsive table-full-width\" style=\"padding-top: 2%;\">\r\n            <table class=\"table table-hover\" style=\"text-align: center;\">\r\n              <thead>\r\n              <tr>\r\n                <th scope=\"col\">#</th>\r\n                <th scope=\"col\">Firstname</th>\r\n                <th scope=\"col\">Lastname</th>\r\n                <th scope=\"col\">Username</th>\r\n\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr *ngFor=\"let teacher of teachers\">\r\n                <th scope=\"row\">{{ teacher.id }}</th>\r\n                <td>{{ teacher.user.firstName }}</td>\r\n                <td>{{ teacher.user.lastName }}</td>\r\n                <td>{{ teacher.user.username }}</td>\r\n              </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\n\r\nimport {switchMap} from 'rxjs/operators';\r\nimport { AuthenticationServiceService } from 'src/app/services/auth/authentication-service.service';\r\nimport { Account } from 'src/app/model/account';\r\nimport { Student } from 'src/app/model/student';\r\nimport { User } from 'src/app/model/user';\r\nimport { SluzbaStudentsServiceService } from '../sluzba-students/sluzba-students-service.service';\r\nimport { Document } from 'src/app/model/document';\r\nimport { SluzbaDocumentsServiceService } from '../sluzba-documents/sluzba-documents-service.service';\r\nimport { Payment } from 'src/app/model/payment';\r\nimport { SluzbaPaymentsServiceService } from '../sluzba-payments/sluzba-payments-service.service';\r\nimport { SluzbaAccountServiceService } from '../sluzba-account/sluzba-account-service.service';\r\n\r\n@Component({\r\n  selector: 'app-sluzba-student-details',\r\n  templateUrl: './sluzba-student-details.component.html',\r\n  styleUrls: ['./sluzba-student-details.component.css']\r\n})\r\nexport class SluzbaStudentDetailsComponent implements OnInit {\r\n\r\n  student: Student = new Student({ // if we add a new student, create an empty student\r\n    cardName: '',\r\n    account: new Account({\r\n      bankAccount:'',\r\n      model: '',\r\n      personalCallToNumber:''\r\n    }),\r\n    user: new User({\r\n      username: '',\r\n      firstName: '',\r\n      lastName: '',\r\n      password: ''\r\n    })\r\n  });\r\n\r\n  documents: Document[];\r\n  payments: Payment[];\r\n  available: 0 | number;\r\n\r\n  mode: string = 'ADD';\r\n\r\n  constructor(private studentService: SluzbaStudentsServiceService, private accountService: SluzbaAccountServiceService, private documentService: SluzbaDocumentsServiceService, private paymentService: SluzbaPaymentsServiceService,\r\n    private route: ActivatedRoute, private location: Location, private router: Router, private authService: AuthenticationServiceService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.route.snapshot.params['id']) {\r\n      this.mode = 'EDIT';\r\n      // fetch student if we edit the existing student\r\n      this.route.params.pipe(switchMap((params: Params) =>\r\n          this.studentService.getStudent(+params['id'])))\r\n        .subscribe(res => {\r\n          this.student = res.body;\r\n          this.getAvailableFunds();\r\n          this.getDocuments();\r\n          this.getPayments();\r\n        });\r\n    }\r\n  }\r\n\r\n  private getDocuments(): void {\r\n    this.studentService.getStudentDocuments(this.student.id).subscribe(res =>\r\n      this.documents = res.body);\r\n  }\r\n\r\n  private getPayments(): void {\r\n    this.studentService.getAccountPayments(this.student.account.id).subscribe(res =>\r\n      this.payments = res.body);\r\n  }\r\n\r\n  private getAvailableFunds(): void {\r\n    this.accountService.getAvailableFunds(this.student.account.id).subscribe(res =>\r\n      this.available = res.body);\r\n  }\r\n\r\n  save(): void {\r\n    this.mode == 'ADD' ? this.add() : this.edit();\r\n  }\r\n\r\n  private add(): void {\r\n    this.studentService.addStudent(this.student)\r\n      .subscribe(res => {\r\n        this.studentService.announceChange();\r\n        this.goBack();\r\n      });\r\n  }\r\n\r\n  private edit(): void {\r\n    this.studentService.editStudent(this.student)\r\n      .subscribe(student => {\r\n        this.studentService.announceChange();\r\n        this.goBack();\r\n      });\r\n  }\r\n\r\n  gotoAddDocument(): void {\r\n    this.router.navigate(['/addDocument'], { queryParams: { studentId: this.student.id } });\r\n  }\r\n\r\n  \r\n  gotoEditDocument(document: Document): void {\r\n    this.router.navigate(['/editDocument', document.id]);\r\n  }\r\n\r\n  deleteDocument(documentId: number, documentTitle: string): void {\r\n    if(confirm(\"Are you sure to delete document \" + documentTitle + \"?\")){\r\n      this.documentService.deleteDocument(documentId).subscribe(\r\n        () => this.getDocuments()\r\n      );\r\n    }\r\n  }\r\n\r\n  gotoAddPayment(): void {\r\n    this.router.navigate(['/addPayment'], { queryParams: { accountId: this.student.account.id } });\r\n  }\r\n\r\n  \r\n  gotoEditPayment(payment: Payment): void {\r\n    this.router.navigate(['/editPayment', payment.id]);\r\n  }\r\n\r\n  deletePayment(paymentId: number): void {\r\n    this.paymentService.deletePayment(paymentId).subscribe(\r\n      () => this.getPayments()\r\n    );\r\n  }\r\n\r\n/*   gotoAddPayment(): void {\r\n    this.router.navigate(['/addPayment'], { queryParams: { accountId: this.student.account.id } });\r\n  }\r\n\r\n  \r\n  gotoEditPayment(payment: Payment): void {\r\n    this.router.navigate(['/editPayment', payment.id]);\r\n  }\r\n\r\n  deletePayment(paymentId: number): void {\r\n    this.paymentService.deletePayment(paymentId).subscribe(\r\n      () => this.getPayments()\r\n    );\r\n  }\r\n */\r\n  goBack(): void {\r\n    this.location.back();\r\n  }\r\n\r\n  \r\n  isAdmin():boolean{\r\n    return this.authService.isAdmin();\r\n  }\r\n\r\n}\r\n","<div class=\"main-content\">\r\n    <div class=\"container-fluid\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n                <div class=\"card\" style=\"padding-left: 10px;\">\r\n                    <h3>Student</h3>\r\n                    <form>\r\n                        <div class=\"form-group\">\r\n                            <label for=\"field1c\" class=\"form-control-label\">Firstname</label>\r\n                            <input type=\"text\" [(ngModel)]=\"student.user.firstName\" placeholder=\"Firstname\"\r\n                                class=\"form-control\" id=\"field1c\" name=\"field1\">\r\n                            <label for=\"field2c\" class=\"form-control-label\">Lastname</label>\r\n                            <input type=\"text\" [(ngModel)]=\"student.user.lastName\" placeholder=\"Lastname\"\r\n                                class=\"form-control\" id=\"field2c\" name=\"field2\">\r\n                            <label for=\"field3c\" class=\"form-control-label\">Username</label>\r\n                            <input type=\"text\" [(ngModel)]=\"student.user.username\" placeholder=\"Username\"\r\n                                class=\"form-control\" id=\"field3c\" name=\"field3\">\r\n                            <label for=\"field4c\" class=\"form-control-label\">Password</label>\r\n                            <input type=\"password\" [(ngModel)]=\"student.user.password\" placeholder=\"Password\"\r\n                                class=\"form-control\" id=\"field4c\" name=\"field4\">\r\n                            <label for=\"field5c\" class=\"form-control-label\">Cardname</label>\r\n                            <input type=\"text\" [(ngModel)]=\"student.cardName\" placeholder=\"Cardname\"\r\n                                class=\"form-control\" id=\"field5c\" name=\"field5\">\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div *ngIf=\"student.id\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                    <div class=\"card\" style=\"padding-left: 10px;\">\r\n                        <h3>Account</h3>\r\n                        <form>\r\n                            <div class=\"form-group\">\r\n                                <label for=\"field6c\" class=\"form-control-label\">Bank account</label>\r\n                                <input type=\"text\" [(ngModel)]=\"student.account.bankAccount\" placeholder=\"Bank account\"\r\n                                    class=\"form-control\" id=\"field6c\" name=\"field6\">\r\n                                <label for=\"field7c\" class=\"form-control-label\">Model</label>\r\n                                <input type=\"text\" [(ngModel)]=\"student.account.model\" placeholder=\"Model\"\r\n                                    class=\"form-control\" id=\"field7c\" name=\"field7\">\r\n                                <label for=\"field8c\" class=\"form-control-label\">Personal call to number</label>\r\n                                <input type=\"text\" [(ngModel)]=\"student.account.personalCallToNumber\" placeholder=\"Personal call to number\"\r\n                                    class=\"form-control\" id=\"field8c\" name=\"field8\">\r\n                                <label for=\"field9c\" class=\"form-control-label\">Available funds</label>\r\n                                <p class=\"form-control\" id=\"field9c\" name=\"field9\">{{ available }}</p>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                    <div class=\"card\" style=\"padding-left: 10px;\">\r\n                        <div>\r\n                            <h3>Payments</h3>\r\n                            <button type=\"button\" class=\"btn btn-primary\" aria-label=\"Add\" (click)=\"gotoAddPayment()\">\r\n                                <span class=\"fa fa-plus\" aria-hidden=\"true\"></span>\r\n                            </button>\r\n                        </div>\r\n                        <div class=\"content table-responsive table-full-width\" style=\"padding-top: 2%;\">\r\n                            <table class=\"table table-bordered\">\r\n                                <tr *ngFor=\"let payment of payments\">\r\n                                    <td>\r\n                                        {{payment.date | date }} | {{ payment.purpose }} | {{payment.amount | number }}\r\n                                    </td>\r\n                                    <td>\r\n                                        <button type=\"button\" class=\"btn btn-primary\" aria-label=\"Edit\"\r\n                                            (click)=\"gotoEditPayment(payment)\">\r\n                                            <span class=\"fa fa-edit\" aria-hidden=\"true\"></span>\r\n                                        </button>\r\n                                        <button type=\"button\" class=\"btn btn-danger right\" aria-label=\"Delete\"\r\n                                            (click)=\"deletePayment(payment.id)\">\r\n                                            <span class=\"fa fa-trash\" aria-hidden=\"true\"></span>\r\n                                        </button>\r\n                                    </td>\r\n                                </tr>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-12\">\r\n                    <div class=\"card\" style=\"padding-left: 10px;\">\r\n                        <div>\r\n                            <h3>Documents</h3>\r\n                            <button type=\"button\" class=\"btn btn-primary\" aria-label=\"Add\" (click)=\"gotoAddDocument()\">\r\n                                <span class=\"fa fa-plus\" aria-hidden=\"true\"></span>\r\n                            </button>\r\n                        </div>\r\n                        <div class=\"content table-responsive table-full-width\" style=\"padding-top: 2%;\">\r\n                            <table class=\"table table-bordered\">\r\n                                <tr *ngFor=\"let document of documents\">\r\n                                    <td>\r\n                                        {{ document.type.name }} {{document.title}}\r\n                                    </td>\r\n                                    <td>\r\n                                        <button type=\"button\" class=\"btn btn-primary\" aria-label=\"Edit\"\r\n                                            (click)=\"gotoEditDocument(document)\">\r\n                                            <span class=\"fa fa-edit\" aria-hidden=\"true\"></span>\r\n                                        </button>\r\n                                        <button type=\"button\" class=\"btn btn-danger right\" aria-label=\"Delete\"\r\n                                            (click)=\"deleteDocument(document.id, document.title)\">\r\n                                            <span class=\"fa fa-trash\" aria-hidden=\"true\"></span>\r\n                                        </button>\r\n                                    </td>\r\n                                </tr>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div *ngIf=\"isAdmin()\">\r\n            <button class=\"btn btn-success\" (click)=\"save()\">OK</button>\r\n            <button class=\"btn btn-danger\" (click)=\"goBack()\">Cancel</button>\r\n        </div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { SluzbaPaymentsComponent } from './components/sluzba-payments/sluzba-payments.component';\r\nimport { SluzbaDocumentsComponent } from './components/sluzba-documents/sluzba-documents.component';\r\nimport { SluzbaLoginComponent } from './components/sluzba-login/sluzba-login.component';\r\nimport { SluzbaCoursesComponent } from './components/sluzba-courses/sluzba-courses.component';\r\nimport { SluzbaProfileComponent } from './components/sluzba-profile/sluzba-profile.component';\r\nimport { SluzbaStudentsComponent } from './components/sluzba-students/sluzba-students.component';\r\nimport { CanActivateAuthGuardService } from './services/auth/can-activate-auth.guard.service';\r\nimport { SluzbaNotFoundPageComponent } from './components/sluzba-not-found-page/sluzba-not-found-page.component';\r\nimport { SluzbaTeachersComponent } from './components/sluzba-teachers/sluzba-teachers.component';\r\nimport { SluzbaCourseDetailsComponent } from './components/sluzba-course-details/sluzba-course-details.component';\r\nimport { SluzbaHomeComponent } from './components/sluzba-home/sluzba-home.component';\r\nimport { SluzbaSidebarComponent } from './components/sluzba-sidebar/sluzba-sidebar.component';\r\nimport { SluzbaEnrollmentsComponent } from './components/sluzba-enrollments/sluzba-enrollments.component';\r\nimport { SluzbaTeachingsComponent } from './components/sluzba-teachings/sluzba-teachings.component';\r\nimport { SluzbaStudentDetailsComponent } from './components/sluzba-student-details/sluzba-student-details.component';\r\nimport { SluzbaDocumentDetailsComponent } from './components/sluzba-document-details/sluzba-document-details.component';\r\nimport { SluzbaPaymentDetailsComponent } from './components/sluzba-payment-details/sluzba-payment-details.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'dashboard', component: SluzbaHomeComponent },\r\n  { path: 'login', component: SluzbaLoginComponent },\r\n  { path: 'profile', component: SluzbaProfileComponent, canActivate: [CanActivateAuthGuardService]},\r\n  { path: 'courses', component: SluzbaCoursesComponent, canActivate: [CanActivateAuthGuardService]},\r\n  { path: 'payments', component: SluzbaPaymentsComponent, canActivate: [CanActivateAuthGuardService]},\r\n  { path: 'documents', component: SluzbaDocumentsComponent, canActivate: [CanActivateAuthGuardService]},\r\n  { path: 'students', component: SluzbaStudentsComponent, canActivate: [CanActivateAuthGuardService]},\r\n  { path: 'teachers', component: SluzbaTeachersComponent, canActivate: [CanActivateAuthGuardService]},\r\n  { path: 'addCourse', component: SluzbaCourseDetailsComponent },\r\n  { path: 'editCourse/:id', component: SluzbaCourseDetailsComponent },\r\n  { path: 'addEnrollment', component: SluzbaEnrollmentsComponent },\r\n  { path: 'addTeaching', component: SluzbaTeachingsComponent },\r\n  { path: 'addStudent', component: SluzbaStudentDetailsComponent },\r\n  { path: 'editStudent/:id', component: SluzbaStudentDetailsComponent },\r\n  { path: 'addDocument', component: SluzbaDocumentDetailsComponent },\r\n  { path: 'editDocument/:id', component: SluzbaDocumentDetailsComponent },\r\n  { path: 'addPayment', component: SluzbaPaymentDetailsComponent },\r\n  { path: 'editPayment/:id', component: SluzbaPaymentDetailsComponent },\r\n  { path: '',\r\n    redirectTo: '/login',\r\n    pathMatch: 'full'\r\n  },\r\n  { path: '**', component: SluzbaNotFoundPageComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes,{useHash: true})\r\n  ],\r\n  exports: [RouterModule]\r\n  \r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { SluzbaCoursesServiceService } from './sluzba-courses-service.service';\r\nimport { AuthenticationServiceService } from 'src/app/services/auth/authentication-service.service';\r\n\r\ninterface Course {\r\n  id?: number;\r\n  name: string;\r\n  espb: number;\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-sluzba-courses',\r\n  templateUrl: './sluzba-courses.component.html',\r\n  styleUrls: ['./sluzba-courses.component.css']\r\n})\r\nexport class SluzbaCoursesComponent implements OnInit {\r\n\r\n  courses: Course[];\r\n\r\n  subscription: Subscription;\r\n\r\n  constructor(private courseService: SluzbaCoursesServiceService, private router: Router, private authService: AuthenticationServiceService) {\r\n    this.subscription = courseService.RegenerateData$.subscribe(() =>\r\n      this.getCourses()\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getCourses();\r\n  }\r\n\r\n  getCourses() {\r\n    this.courseService.getCourses().subscribe(res =>\r\n      this.courses = res.body);\r\n  }\r\n\r\n  isLoggedIn():boolean{\r\n    return this.authService.isLoggedIn();\r\n  }\r\n\r\n  isAdmin():boolean{\r\n    return this.authService.isAdmin();\r\n  }\r\n\r\n  gotoAdd(): void {\r\n    this.router.navigate(['/addCourse']);\r\n  }\r\n\r\n  gotoEdit(course: Course): void {\r\n    this.router.navigate(['/editCourse', course.id]);\r\n  }\r\n\r\n  deleteCourse(courseId: number, courseName: string): void {\r\n    if(confirm(\"Are you sure to delete course \" + courseName + \"?\")){\r\n    this.courseService.deleteCourse(courseId).subscribe(\r\n      () => this.getCourses()\r\n    );\r\n    }\r\n  }\r\n}\r\n","<div class=\"main-content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <div class=\"card\">\r\n          <div *ngIf=\"isLoggedIn()\" class=\"content table-responsive table-full-width\" style=\"padding-top: 2%;\">\r\n            <table class=\"table table-hover\" style=\"text-align: center;\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">#</th>\r\n                  <th scope=\"col\">Course name</th>\r\n                  <th scope=\"col\">ECTS</th>\r\n                  <th></th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr *ngFor=\"let course of courses\">\r\n                  <th scope=\"row\">{{ course.id }}</th>\r\n                  <td>{{ course.name }}</td>\r\n                  <td>{{ course.espb | number }}</td>\r\n                  <td *ngIf=\"isAdmin()\">\r\n                    <button type=\"button\" class=\"btn btn-primary\" aria-label=\"Edit\" (click)=\"gotoEdit(course)\">\r\n                      <span class=\"fa fa-edit\" aria-hidden=\"true\"></span>\r\n                    </button>\r\n\r\n                    <button type=\"button\" class=\"btn btn-danger\" aria-label=\"Delete\"\r\n                      (click)=\"deleteCourse(course.id, course.name)\">\r\n                      <span class=\"fa fa-trash\" aria-hidden=\"true\"></span>\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n        <div *ngIf=\"isAdmin()\" class=\"right\">\r\n          <button type=\"button\" class=\"btn btn-success\" aria-label=\"Add\" (click)=\"gotoAdd()\">\r\n            <span class=\"fa fa-plus\" aria-hidden=\"true\"></span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { User } from 'src/app/model/user';\r\nimport { AuthenticationServiceService } from '../../services/auth/authentication-service.service';\r\nimport { SluzbaSidebarServiceService } from './sluzba-sidebar-service.service';\r\n\r\ndeclare const $: any;\r\ndeclare interface RouteInfo {\r\n    path: string;\r\n    title: string;\r\n    icon: string;\r\n    class: string;\r\n}\r\n\r\nexport const ROUTES: RouteInfo[] = [\r\n    { path: '/dashboard', title: 'Dashboard',  icon: 'pe-7s-graph', class: ''},\r\n    { path: '/profile', title: 'User Profile',  icon:'pe-7s-user', class: ''},\r\n    { path: '/courses', title: 'Courses List',  icon:'pe-7s-notebook', class: ''},\r\n    { path: '/payments', title: 'Payments',  icon:'pe-7s-cash paymants', class: ''},\r\n    { path: '/documents', title: 'Documents',  icon:'pe-7s-note2', class: ''},\r\n    { path: '/students', title: 'Students',  icon:'pe-7s-users', class: ''},\r\n    { path: '/teachers', title: 'Teachers',  icon:'pe-7s-users', class: ''},\r\n];\r\n\r\n@Component({\r\n  selector: 'app-sluzba-sidebar',\r\n  templateUrl: './sluzba-sidebar.component.html'\r\n})\r\nexport class SluzbaSidebarComponent implements OnInit {\r\n\r\n  user: User;\r\n\r\n  subscription: Subscription;\r\n\r\n  constructor(private sidebarService: SluzbaSidebarServiceService, private authenticationService:AuthenticationServiceService,private router: Router) \r\n  { \r\n    this.subscription = sidebarService.RegenerateData$.subscribe(() =>\r\n      this.getUser()\r\n    );\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getUser();\r\n  }\r\n\r\n  isMobileMenu() {\r\n      if ($(window).width() > 991) {\r\n          return false;\r\n      }\r\n      return true;\r\n  };\r\n\r\n  getUser() {\r\n    this.sidebarService.getUser().subscribe(res =>\r\n      this.user = res.body);\r\n  }\r\n\r\n  logout():void{\r\n    this.authenticationService.logout();\r\n    this.router.navigate(['/login']);\r\n  }\r\n\r\n  isLoggedIn():boolean{\r\n    return this.authenticationService.isLoggedIn();\r\n  }\r\n\r\n  isStudent():boolean{\r\n    return this.authenticationService.isStudent();\r\n  }\r\n\r\n  isAdmin():boolean{\r\n    return this.authenticationService.isAdmin();\r\n  }\r\n\r\n}\r\n","<div class=\"sidebar-wrapper\">\r\n    <div class=\"logo\">\r\n        <a routerLink=\"/dashboard\" href=\"#\" class=\"simple-text\">\r\n            <div class=\"logo-img\">\r\n                <img src=\"../../../assets/img/ftn logo.png\"/>\r\n\r\n            </div>\r\n            Student service\r\n        </a>\r\n    </div>\r\n    <ul class=\"nav responsive-nav\">\r\n        <li *ngIf=\"isMobileMenu()\">\r\n            <a class=\"dropdown-toggle\" data-toggle=\"dropdown\">\r\n                <i class=\"fa fa-dashboard\"></i>\r\n\t\t\t\t<p class=\"hidden-lg hidden-md\">Dashboard</p>\r\n            </a>\r\n        </li>\r\n        <li *ngIf=\"isMobileMenu()\">\r\n            <a class=\"dropdown-toggle\" data-toggle=\"dropdown\">\r\n                <i class=\"fa fa-dashboard\"></i>\r\n\t\t\t\t<p class=\"hidden-lg hidden-md\">{{ user? user.firstName : \"\"  }} {{ user? user.lastName : \"\"  }}</p>\r\n            </a>\r\n        </li>\r\n        <li *ngIf=\"isMobileMenu()\">\r\n            <a class=\"dropdown-item\" (click)=\"logout()\" href=\"#\">Log out</a>\r\n        </li>\r\n        <li class=\"separator hidden-lg hidden-md\" *ngIf=\"isMobileMenu()\"></li>\r\n        <li>\r\n            <a routerLink=\"/dashboard\">\r\n                <i class=\"pe-7s-graph\"></i>\r\n                <p>Dashboard</p>\r\n            </a> \r\n        </li>\r\n        <li>\r\n            <a routerLink=\"/profile\">\r\n                <i class=\"pe-7s-user\"></i>\r\n                <p>User profile</p>\r\n            </a> \r\n        </li>\r\n        <li>\r\n            <a routerLink=\"/courses\">\r\n                <i class=\"pe-7s-notebook\"></i>\r\n                <p>Courses</p>\r\n            </a> \r\n        </li>\r\n        <li *ngIf=\"isStudent()\">\r\n            <a routerLink=\"/documents\">\r\n                <i class=\"pe-7s-note2\"></i>\r\n                <p>Documents</p>\r\n            </a> \r\n        </li>\r\n        <li *ngIf=\"isStudent()\">\r\n            <a routerLink=\"/payments\">\r\n                <i class=\"pe-7s-cash paymants\"></i>\r\n                <p>Payments</p>\r\n            </a> \r\n        </li>\r\n        <li *ngIf=\"isAdmin()\">\r\n            <a routerLink=\"/students\">\r\n                <i class=\"pe-7s-users\"></i>\r\n                <p>Students</p>\r\n            </a> \r\n        </li>\r\n        <li *ngIf=\"isAdmin()\">\r\n            <a routerLink=\"/teachers\">\r\n                <i class=\"pe-7s-users\"></i>\r\n                <p>Teachers</p>\r\n            </a> \r\n        </li>\r\n    </ul>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthenticationServiceService } from './authentication-service.service';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CanActivateAuthGuardService implements CanActivate {\r\n\r\n  constructor(private authenticationService: AuthenticationServiceService, private router: Router) { }\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n    if (this.authenticationService.isLoggedIn()) {\r\n      return true;\r\n    }\r\n    else {\r\n      this.router.navigate(['/login']);\r\n      return false;\r\n    }\r\n  }\r\n\r\n}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}