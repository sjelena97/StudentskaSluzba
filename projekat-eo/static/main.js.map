{"version":3,"sources":["./src/app/components/sluzba-profile/sluzba-profile.component.html","./src/app/components/sluzba-profile/sluzba-profile.component.ts","./src/app/services/auth/authentication-service.service.ts","./src/app/components/sluzba-documents/sluzba-documents-service.service.ts","./src/app/components/sluzba-profile/sluzba-profile-service.service.ts","./src/environments/environment.ts","./src/app/services/auth/token-interceptor.service.ts","./src/app/components/sluzba-login/sluzba-login.component.ts","./src/app/components/sluzba-login/sluzba-login.component.html","./src/app/components/sluzba-courses/sluzba-courses-service.service.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/components/sluzba-navbar/sluzba-navbar.component.html","./src/app/components/sluzba-navbar/sluzba-navbar.component.ts","./src/app/components/sluzba-payments/sluzba-payments.component.html","./src/app/components/sluzba-payments/sluzba-payments.component.ts","./src/app/components/sluzba-documents/sluzba-documents.component.html","./src/app/components/sluzba-documents/sluzba-documents.component.ts","./src/app/components/sluzba-header/sluzba-header-service.service.ts","./src/app/components/sluzba-payments/sluzba-payments-service.service.ts","./src/app/components/sluzba-not-found-page/sluzba-not-found-page.component.ts","./src/app/components/sluzba-not-found-page/sluzba-not-found-page.component.html","./src/app/components/sluzba-header/sluzba-header.component.html","./src/app/components/sluzba-header/sluzba-header.component.ts","./src/app/services/auth/jwt-utils.service.ts","./src/app/app-routing.module.ts","./src/app/components/sluzba-courses/sluzba-courses.component.html","./src/app/components/sluzba-courses/sluzba-courses.component.ts","./src/app/services/auth/can-activate-auth.guard.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["<div class=\"col-md-12\" style=\"margin-bottom: 2%;\">\r\n    <app-sluzba-header></app-sluzba-header>\r\n</div>\r\n<div *ngIf=\"isLoggedIn()\" class= \"col-md-8\" style=\"margin-top: 2%; margin: auto; border-radius: 20px; border: 3px double #CED4DA; width: 70%; background-color: #FAFAFA;\">\r\n    <div class=\"row\" style=\"margin: auto; max-width: 100%;\">\r\n        <div class=\"col-12\">\r\n            <h3 style=\"text-align: center; font-size: 1.5vw; font-weight: bold; padding-top: 1%;\">User information</h3>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\" style=\"margin: auto; width: 90%;\">\r\n        <div class=\"col-6\" style=\"margin: auto; text-align: left; padding-left: 15%; \">\r\n            <p style=\"text-align: left; font-size: 1.5vw; padding-top: 3%;  padding-bottom: 3%;\">Firstname</p>\r\n        </div>\r\n        <div class=\"col-6\"  style=\"margin: auto; text-align: center; padding-right: 15%; \" >\r\n            <p style=\"text-align: center; font-size: 1.5vw; font-weight: bold; padding-top: 1%; padding-bottom: 3%;\">{{ user? user.firstName : \"\" }}</p>\r\n        </div> \r\n    </div>\r\n    <div class=\"row\" style=\"margin: auto; width: 90%;\">\r\n        <div class=\"col-6\" style=\"margin: auto; text-align: left; padding-left: 15%; \">\r\n            <p style=\"text-align: left; font-size: 1.5vw; padding-top: 3%;  padding-bottom: 3%;\">Lastname</p>\r\n        </div>\r\n        <div class=\"col-6\"  style=\"margin: auto; text-align: center; padding-right: 15%; \" >\r\n            <p style=\"text-align: center; font-size: 1.5vw; font-weight: bold; padding-top: 1%; padding-bottom: 3%;\">{{ user? user.lastName : \"\" }}</p>\r\n        </div> \r\n    </div>\r\n    <div class=\"row\" style=\"margin: auto; width: 90%;\">\r\n        <div class=\"col-6\" style=\"margin: auto; text-align: left; padding-left: 15%; \">\r\n            <p style=\"text-align: left; font-size: 1.5vw; padding-top: 3%;  padding-bottom: 3%;\">Username</p>\r\n        </div>\r\n        <div class=\"col-6\"  style=\"margin: auto; text-align: center; padding-right: 15%; \" >\r\n            <p style=\"text-align: center; font-size: 1.5vw; font-weight: bold; padding-top: 1%; padding-bottom: 3%;\">{{ user? user.username : \"\" }}</p>\r\n        </div> \r\n    </div>\r\n</div>\r\n<div *ngIf=\"isStudent()\" class= \"col-md-8\" style=\"margin-top: 2%; margin: auto; border-radius: 20px; border: 3px double #fafafa; width: 70%; background-color: #FAFAFA;\">\r\n    <div class=\"row\" style=\"margin: auto; max-width: 100%;\">\r\n        <div class=\"col-12\">\r\n            <h3 style=\"text-align: center; font-size: 1.5vw; font-weight: bold; padding-top: 1%;\">Student information</h3>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\" style=\"margin: auto; width: 90%;\">\r\n        <div class=\"col-6\" style=\"margin: auto; text-align: left; padding-left: 15%; \">\r\n            <p style=\"text-align: left; font-size: 1.5vw; padding-top: 3%;  padding-bottom: 3%;\">Cardname</p>\r\n        </div>\r\n        <div class=\"col-6\"  style=\"margin: auto; text-align: center; padding-right: 15%; \" >\r\n            <p style=\"text-align: center; font-size: 1.5vw; font-weight: bold; padding-top: 1%; padding-bottom: 3%;\">{{ student? student.cardName : \"\" }}</p>\r\n        </div> \r\n    </div>\r\n    <div class=\"row\" style=\"margin: auto; width: 90%;\">\r\n        <div class=\"col-6\" style=\"margin: auto; text-align: left; padding-left: 15%; \">\r\n            <p style=\"text-align: left; font-size: 1.5vw; padding-top: 3%;  padding-bottom: 3%;\">Balance</p>\r\n        </div>\r\n        <div class=\"col-6\"  style=\"margin: auto; text-align: center; padding-right: 15%; \" >\r\n            <p style=\"text-align: center; font-size: 1.5vw; font-weight: bold; padding-top: 1%; padding-bottom: 3%;\">{{ student? student.account.balance : \"\" }}</p>\r\n        </div> \r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { SluzbaProfileServiceService } from './sluzba-profile-service.service';\r\nimport { AuthenticationServiceService } from 'src/app/services/auth/authentication-service.service';\r\n\r\ninterface User {\r\n  id?: number;\r\n  username: string;\r\n  firstName: string;\r\n  lastName: string;\r\n}\r\n\r\ninterface Student {\r\n  id?: number;\r\n  cardName: String;\r\n  account: Account;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-sluzba-profile',\r\n  templateUrl: './sluzba-profile.component.html',\r\n  styleUrls: ['./sluzba-profile.component.css']\r\n})\r\nexport class SluzbaProfileComponent implements OnInit {\r\n\r\n  user: User;\r\n  student: Student;\r\n\r\n  subscription: Subscription;\r\n\r\n  constructor(private profileService: SluzbaProfileServiceService, private router: Router, private authService: AuthenticationServiceService) {\r\n    this.subscription = profileService.RegenerateData$.subscribe(() =>\r\n      this.getUser()\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getUser();\r\n  }\r\n\r\n  getUser() {\r\n    this.profileService.getUser().subscribe(res =>\r\n      this.user = res.body);\r\n      if(this.authService.isStudent()){\r\n        this.getStudent();\r\n      }\r\n  }\r\n\r\n  getStudent(){\r\n    this.profileService.getStudent().\r\n            subscribe(res =>\r\n            this.student = res.body);\r\n  }\r\n\r\n\r\n  isLoggedIn():boolean{\r\n    return this.authService.isLoggedIn();\r\n  }\r\n\r\n  isStudent():boolean{\r\n    return this.authService.isStudent();\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Rx';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { JwtUtilsService } from './jwt-utils.service';\n\n\n@Injectable()\nexport class AuthenticationServiceService {\n\n  private readonly loginPath = '/auth/login';\n\n  constructor(private http: HttpClient, private jwtUtilsService: JwtUtilsService) { }\n\n  login(username: string, password: string): Observable<boolean> {\n    var headers: HttpHeaders = new HttpHeaders({ 'Content-Type': 'application/json' });\n    return this.http.post(this.loginPath, JSON.stringify({ username, password }), { headers })\n      .map((res: any) => {\n        let token = res && res['token'];\n        if (token) {\n          localStorage.setItem('currentUser', JSON.stringify({\n            username: username,\n            roles: this.jwtUtilsService.getRoles(token),\n            token: token\n          }));\n          return true;\n        }\n        else {\n          return false;\n        }\n      })\n      .catch((error: any) => {\n        if (error.status === 400) {\n          return Observable.throw('Ilegal login');\n        }\n        else {\n          return Observable.throw(error.json().error || 'Server error');\n        }\n      });\n  }\n\n  getToken(): String {\n    var currentUser = JSON.parse(localStorage.getItem('currentUser'));\n    var token = currentUser && currentUser.token;\n    return token ? token : \"\";\n  }\n\n  logout(): void {\n    localStorage.removeItem('currentUser');\n  }\n\n  isLoggedIn(): boolean {\n    if (this.getToken() != '') return true;\n    else return false;\n  }\n\n  getCurrentUser() {\n    if (localStorage.currentUser) {\n      return JSON.parse(localStorage.currentUser);\n    }\n    else {\n      return undefined;\n    }\n  }\n\n  isStudent(): boolean {\n    if (localStorage.currentUser) {\n      var user = JSON.parse(localStorage.currentUser);\n      if (user.roles[0].some(t=>t.authority === \"STUDENT\")) return true;\n      else return false;\n    }\n  }\n\n  isTeacher(): boolean {\n    if (localStorage.currentUser) {\n      var user = JSON.parse(localStorage.currentUser);\n      if (user.roles[0].some(t=>t.authority === \"TEACHER\")) return true;\n      else return false;\n    }\n  }\n\n  isAdmin(): boolean {\n    if (localStorage.currentUser) {\n      var user = JSON.parse(localStorage.currentUser);\n      if (user.roles[0].some(t=>t.authority === \"ADMIN\")) return true;\n      else return false;\n    }\n  }\n\n  getCurrentUserUsername() {\n    if (localStorage.currentUser) {\n      return JSON.parse(localStorage.currentUser.username);\n    }\n    else {\n      return undefined;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpResponse, HttpClient } from '@angular/common/http';\nimport {Observable, Subject} from 'rxjs';\n\nimport { AuthenticationServiceService } from '../../services/auth/authentication-service.service';\nimport { Document } from '../../model/document';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SluzbaDocumentsServiceService {\n\n  private documentsUrl = 'documents';\n\n  constructor(private http: HttpClient, private authService: AuthenticationServiceService) { }\n\n  private RegenerateData = new Subject<void>();\n\n  RegenerateData$ = this.RegenerateData.asObservable();\n\n  announceChange() {\n      this.RegenerateData.next();\n  }\n  \n  getDocuments(): Observable<HttpResponse<Document[]>> {\n      let username = this.authService.getCurrentUser().username;\n      console.log(\"username: \" + username);\n      const url = `${this.documentsUrl}/getAllDocumentsForUser/${username}`;\n      return this.http.get<Document[]>(url, {observe: 'response'});\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpResponse, HttpClient } from '@angular/common/http';\nimport {Observable, Subject} from 'rxjs';\n\nimport { AuthenticationServiceService } from '../../services/auth/authentication-service.service';\nimport { User } from '../../model/user';\nimport { Student } from '../../model/student';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SluzbaProfileServiceService {\n\n  private usersUrl = 'users';\n  private studentsUrl = 'students';\n\n  constructor(private http: HttpClient, private authService: AuthenticationServiceService) { }\n\n  private RegenerateData = new Subject<void>();\n\n  RegenerateData$ = this.RegenerateData.asObservable();\n\n  announceChange() {\n      this.RegenerateData.next();\n  }\n  \n  getUser(): Observable<HttpResponse<User>> {\n      let username = this.authService.getCurrentUser().username;\n      console.log(\"username: \" + username);\n      const url = `${this.usersUrl}/getUserByUsername/${username}`;\n      return this.http.get<User>(url, {observe: 'response'});\n  }\n\n  getStudent(): Observable<HttpResponse<Student>> {\n    let username = this.authService.getCurrentUser().username;\n    console.log(\"username: \" + username);\n    const url = `${this.studentsUrl}/getStudentByUsername/${username}`;\n    return this.http.get<Student>(url, {observe: 'response'});\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Injectable } from '@angular/core';\nimport { HttpInterceptor } from '@angular/common/http';\nimport { AuthenticationServiceService } from './authentication-service.service';\nimport { HttpRequest } from '@angular/common/http';\nimport { HttpHandler } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { HttpEvent } from '@angular/common/http';\nimport { Injector } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenInterceptorService implements HttpInterceptor {\n\n  constructor(private inj: Injector) { }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    let authenticationService:AuthenticationServiceService = this.inj.get(AuthenticationServiceService);\n    request = request.clone({\n      setHeaders: {\n        'Authorization': `${authenticationService.getToken()}`\n      }\n    });\n\n    return next.handle(request);\n  }\n\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { Router } from '@angular/router';\r\nimport { AuthenticationServiceService } from '../../services/auth/authentication-service.service';\r\n\r\n@Component({\r\n  selector: 'app-sluzba-login',\r\n  templateUrl: './sluzba-login.component.html',\r\n  styleUrls: ['./sluzba-login.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class SluzbaLoginComponent implements OnInit {\r\n\r\n  public user;\r\n\r\n  public wrongUsernameOrPass:boolean;\r\n\r\n  constructor(private authenticationService:AuthenticationServiceService,\r\n              private router: Router) {\r\n    this.user = {};\r\n    this.wrongUsernameOrPass = false;\r\n   }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  login():void{\r\n    this.authenticationService.login(this.user.username, this.user.password).subscribe(\r\n      (loggedIn:boolean) => {\r\n        if(loggedIn){\r\n          this.router.navigate(['/courses']);\r\n        }\r\n      }\r\n    ,\r\n    (err:Error) => {\r\n      if(err.toString()==='Ilegal login'){\r\n        this.wrongUsernameOrPass = true;\r\n        console.log(err);\r\n      }\r\n      else{\r\n        Observable.throw(err);\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<!-- Default form login -->\r\n<div id=\"loginContainer\" class=\"container\">\r\n<form class=\"text-center border border-light p-5\" (ngSubmit)=\"login()\">\r\n\r\n    <p>Login</p>\r\n  \r\n    <!-- Username -->\r\n    <input type=\"text\" id=\"username\" class=\"form-control mb-4 cs-12\" name=\"username\" [(ngModel)]=\"user.username\" placeholder=\"Username\" required autofocus>\r\n  \r\n    <!-- Password -->\r\n    <input type=\"password\" id=\"inputPassword\" class=\"form-control mb-4 s-12\" name=\"password\" [(ngModel)]=\"user.password\" placeholder=\"Password\"  required>\r\n  \r\n    <div class=\"row\" style=\"margin: auto; max-width: 100%;\">\r\n        <div class=\"col-7\" style=\"margin: auto; height: max-content;\"></div>\r\n        <div id=\"forgot\" class=\"col-5\" style=\"margin: auto;\">\r\n            <div  style=\"margin: auto;\">\r\n                <!-- Forgot password -->\r\n                <a href=\"\" >Forgot password ?</a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    \r\n    <div class=\"row\" style=\"margin: auto; max-width: 100%;\">\r\n        <div class=\"col-12\" style=\"margin: auto; height: max-content;\">\r\n            <!-- Sign in button -->\r\n            <button class=\"waves-light btn-default btn\" type=\"submit\" color=\"default\">Sign in</button>\r\n        </div>\r\n    </div>\r\n  \r\n  \r\n\r\n  \r\n  </form>\r\n  <div *ngIf=wrongUsernameOrPass class=\"alert alert-warning box-msg\" role=\"alert\">\r\n    Wrong username or password.\r\n  </div>\r\n</div>\r\n  <!-- Default form login -->","import { Injectable } from '@angular/core';\r\nimport { HttpResponse, HttpClient } from '@angular/common/http';\r\nimport {Observable, Subject} from 'rxjs';\r\n\r\nimport { AuthenticationServiceService } from '../../services/auth/authentication-service.service';\r\nimport { Course } from '../../model/course';\r\n\r\n@Injectable()\r\nexport class SluzbaCoursesServiceService {\r\n\r\n\r\n  private coursesUrl = 'courses';\r\n\r\n  constructor(private http: HttpClient, private authService: AuthenticationServiceService) { }\r\n\r\n  private RegenerateData = new Subject<void>();\r\n\r\n  RegenerateData$ = this.RegenerateData.asObservable();\r\n\r\n  announceChange() {\r\n      this.RegenerateData.next();\r\n  }\r\n  \r\n  getCourses(): Observable<HttpResponse<Course[]>> {\r\n      let username = this.authService.getCurrentUser().username;\r\n      console.log(\"username: \" + username);\r\n      const url = `${this.coursesUrl}/getAllCoursesForUser/${username}`;\r\n      return this.http.get<Course[]>(url, {observe: 'response'});\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n   <!-- Static navbar -->\r\n   <nav class=\"navbar navbar-default\">\r\n    <div class=\"container-fluid\">\r\n      <div id=\"navbar\" class=\"navbar-collapse collapse\">\r\n        <ul class=\"nav navbar-nav navbar-right\">\r\n          <li>\r\n            <a *ngIf=\"!loggedIn()\" (click)=\"login()\">login</a>\r\n          </li>\r\n          <li>\r\n            <a *ngIf=\"loggedIn()\" (click)=\"logout()\">logout</a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <!--/.nav-collapse -->\r\n    </div>\r\n    <!--/.container-fluid -->\r\n  </nav>\r\n  <router-outlet></router-outlet>\r\n</div>","import { Component } from '@angular/core';\r\nimport { OnInit } from '@angular/core';\r\nimport { AuthenticationServiceService } from './services/auth/authentication-service.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit{\r\n  title = 'angularApp';\r\n\r\n  constructor(private authService: AuthenticationServiceService,\r\n    private router: Router){\r\n\r\n  }\r\n  \r\n  ngOnInit() {\r\n  }\r\n  \r\n  loggedIn():boolean{\r\n  return this.authService.isLoggedIn();\r\n  }\r\n  \r\n  login():void{\r\n  this.router.navigate(['login']);\r\n  }\r\n  \r\n  logout():void{\r\n  this.authService.logout();\r\n  this.router.navigate(['main']);\r\n  }\r\n}\r\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { SluzbaHeaderComponent } from './components/sluzba-header/sluzba-header.component';\r\nimport { SluzbaProfileComponent } from './components/sluzba-profile/sluzba-profile.component';\r\nimport { SluzbaNavbarComponent } from './components/sluzba-navbar/sluzba-navbar.component';\r\n\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { SluzbaLoginComponent } from './components/sluzba-login/sluzba-login.component';\r\nimport { SluzbaNotFoundPageComponent } from './components/sluzba-not-found-page/sluzba-not-found-page.component';\r\nimport { SluzbaCoursesComponent } from './components/sluzba-courses/sluzba-courses.component';\r\nimport { SluzbaCoursesServiceService } from './components/sluzba-courses/sluzba-courses-service.service';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { JwtUtilsService } from './services/auth/jwt-utils.service';\r\nimport { TokenInterceptorService } from './services/auth/token-interceptor.service';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { AuthenticationServiceService } from './services/auth/authentication-service.service';\r\nimport { CanActivateAuthGuardService } from './services/auth/can-activate-auth.guard.service';\r\nimport { SluzbaPaymentsComponent } from './components/sluzba-payments/sluzba-payments.component';\r\nimport { SluzbaDocumentsComponent } from './components/sluzba-documents/sluzba-documents.component';\r\n\r\n\r\n\r\nconst appRoutes: Routes = [\r\n  { path: 'main', component: SluzbaLoginComponent },\r\n  { path: 'profile', component: SluzbaProfileComponent},\r\n  { path: 'courses', component: SluzbaCoursesComponent, canActivate: [CanActivateAuthGuardService]},\r\n  { path: 'payments', component: SluzbaPaymentsComponent, canActivate: [CanActivateAuthGuardService]},\r\n  { path: 'documents', component: SluzbaDocumentsComponent, canActivate: [CanActivateAuthGuardService]},\r\n  { path: '',\r\n    redirectTo: '/main',\r\n    pathMatch: 'full'\r\n  },\r\n  { path: '**', component: SluzbaNotFoundPageComponent }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    SluzbaHeaderComponent,\r\n    SluzbaProfileComponent,\r\n    SluzbaNavbarComponent,\r\n    SluzbaLoginComponent,\r\n    SluzbaNotFoundPageComponent,\r\n    SluzbaCoursesComponent,\r\n    SluzbaPaymentsComponent,\r\n    SluzbaDocumentsComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    NgbModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    AppRoutingModule\r\n  ],\r\n  providers: [\r\n    SluzbaCoursesServiceService,\r\n    AuthenticationServiceService,\r\n    CanActivateAuthGuardService,\r\n    JwtUtilsService,\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: TokenInterceptorService,\r\n      multi: true\r\n    },\r\n  ],\r\n  schemas: [ CUSTOM_ELEMENTS_SCHEMA],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","<nav class=\"navbar navbar-expand-md navbar-light bg-light\" style=\"background-color: white !important;\">\r\n    <a class=\"navbar-brand\" style=\"display: none;\" href=\"#\"></a>\r\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavDropdown\" aria-controls=\"navbarNavDropdown\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div class=\"collapse navbar-collapse\">\r\n        <div class=\"collapse navbar-collapse\" id=\"navbarText\">\r\n        <ul class=\"navbar-nav mr-auto\" >\r\n            <li class=\"nav-item active\">\r\n            <a class=\"nav-link\" href=\"#\">Home <span class=\"sr-only\">(current)</span></a>\r\n            </li>\r\n            <li *ngIf=\"isStudent()\" class=\"nav-item\">\r\n            <a class=\"nav-link\" routerLink=\"/documents\" href=\"#\">Docs</a>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n            <a class=\"nav-link\" routerLink=\"/courses\" href=\"#\">Courses</a>\r\n            </li>\r\n            <li *ngIf=\"isStudent()\" class=\"nav-item \">\r\n                <a class=\"nav-link\" routerLink=\"/payments\" href=\"#\">Payments</a>\r\n            </li>\r\n            <li class=\"nav-item dropdown\">\r\n                <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdownMenuLink\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                Exams\r\n                </a>\r\n                <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\r\n                <a class=\"dropdown-item\" href=\"#\">Signing exam</a>\r\n                </div>\r\n            </li>\r\n        </ul>\r\n        <ul class=\"navbar-nav mr-right\">\r\n        <li> \r\n            <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdownMenuLink\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                <mdb-icon fas icon=\"user\"></mdb-icon>Profile<span class=\"caret\"></span>\r\n            </a>\r\n            <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\" style=\"left: unset;\">\r\n            <a class=\"dropdown-item\" routerLink=\"/profile\" href=\"#\">My account</a>\r\n            <a class=\"dropdown-item\" (click)=\"logout()\" href=\"#\">Log out</a>\r\n            </div>\r\n        </li>\r\n        </ul>\r\n        </div>\r\n    </div>\r\n  </nav>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthenticationServiceService } from '../../services/auth/authentication-service.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-sluzba-navbar',\r\n  templateUrl: './sluzba-navbar.component.html',\r\n  styleUrls: ['./sluzba-navbar.component.css']\r\n})\r\nexport class SluzbaNavbarComponent implements OnInit {\r\n\r\n  constructor(private authenticationService:AuthenticationServiceService,private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  logout():void{\r\n    this.authenticationService.logout();\r\n    this.router.navigate(['/main']);\r\n  }\r\n\r\n  isStudent():boolean{\r\n    return this.authenticationService.isStudent();\r\n  }\r\n\r\n}\r\n","<div class=\"col-md-12\">\n    <app-sluzba-header></app-sluzba-header>\n</div>\n<div *ngIf=\"isLoggedIn()\" class= \"col-md-12\" style=\"padding-top: 2%;\">\n    <table class=\"table\">\n        <thead>\n        <tr>\n          <th scope=\"col\">#</th>\n          <th scope=\"col\">Date</th>\n          <th scope=\"col\">Amount</th>\n          <th scope=\"col\">Purpose</th>\n        </tr>\n        </thead>\n        <tbody>\n        <tr *ngFor=\"let payment of payments\">\n          <th scope=\"row\">{{ payment.id }}</th>\n          <td>{{ payment.date | date  }}</td>\n          <td>{{ payment.amount | number }}</td>\n          <td>{{ payment.purpose }}</td>\n        </tr>\n        </tbody>\n      </table>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { Router } from '@angular/router';\n\nimport { SluzbaPaymentsServiceService } from './sluzba-payments-service.service';\nimport { AuthenticationServiceService } from 'src/app/services/auth/authentication-service.service';\n\ninterface Payment {\n  id?: number;\n  date: Date;\n  amount: number;\n  purpose: string;\n}\n\n@Component({\n  selector: 'app-sluzba-payments',\n  templateUrl: './sluzba-payments.component.html',\n  styleUrls: ['./sluzba-payments.component.css']\n})\nexport class SluzbaPaymentsComponent implements OnInit {\n\n  payments: Payment[];\n\n  subscription: Subscription;\n\n  constructor(private paymentService: SluzbaPaymentsServiceService, private router: Router, private authService: AuthenticationServiceService) {\n    this.subscription = paymentService.RegenerateData$.subscribe(() =>\n      this.getPayments()\n    );\n  }\n\n  ngOnInit(): void {\n    this.getPayments();\n  }\n\n  getPayments() {\n    this.paymentService.getPayments().subscribe(res =>\n      this.payments = res.body);\n  }\n\n  isLoggedIn():boolean{\n    return this.authService.isLoggedIn();\n  }\n\n}\n","<div class=\"col-md-12\">\n    <app-sluzba-header></app-sluzba-header>\n</div>\n<div *ngIf=\"isLoggedIn()\" class= \"col-md-12\" style=\"padding-top: 2%;\">\n    <table class=\"table\">\n        <thead>\n        <tr>\n          <th scope=\"col\">#</th>\n          <th scope=\"col\">Title</th>\n          <th scope=\"col\">Type</th>\n          <th scope=\"col\">Download</th>\n        </tr>\n        </thead>\n        <tbody>\n        <tr *ngFor=\"let document of documents\">\n          <th scope=\"row\">{{ document.id }}</th>\n          <td>{{ document.title  }}</td>\n          <td>{{ document.type.name  }}</td>\n          <td><a href=\"#\">Download</a></td>\n        </tr>\n        </tbody>\n      </table>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { Router } from '@angular/router';\n\nimport { SluzbaDocumentsServiceService } from './sluzba-documents-service.service';\nimport { AuthenticationServiceService } from 'src/app/services/auth/authentication-service.service';\n\ninterface Document {\n  id?: number;\n  title: string;\n  type: DocumentType;\n}\n\n@Component({\n  selector: 'app-sluzba-documents',\n  templateUrl: './sluzba-documents.component.html',\n  styleUrls: ['./sluzba-documents.component.css']\n})\nexport class SluzbaDocumentsComponent implements OnInit {\n\n  documents: Document[];\n\n  subscription: Subscription;\n\n  constructor(private documentService: SluzbaDocumentsServiceService, private router: Router, private authService: AuthenticationServiceService) {\n    this.subscription = documentService.RegenerateData$.subscribe(() =>\n      this.getDocuments()\n    );\n  }\n\n  ngOnInit(): void {\n    this.getDocuments();\n  }\n\n  getDocuments() {\n    this.documentService.getDocuments().subscribe(res =>\n      this.documents = res.body);\n  }\n\n  isLoggedIn():boolean{\n    return this.authService.isLoggedIn();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpResponse, HttpClient } from '@angular/common/http';\nimport {Observable, Subject} from 'rxjs';\n\nimport { AuthenticationServiceService } from '../../services/auth/authentication-service.service';\nimport { User } from '../../model/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SluzbaHeaderServiceService {\n\n  private usersUrl = 'users';\n\n  constructor(private http: HttpClient, private authService: AuthenticationServiceService) { }\n\n  private RegenerateData = new Subject<void>();\n\n  RegenerateData$ = this.RegenerateData.asObservable();\n\n  announceChange() {\n      this.RegenerateData.next();\n  }\n  \n  getUser(): Observable<HttpResponse<User>> {\n      let username = this.authService.getCurrentUser().username;\n      console.log(\"username: \" + username);\n      const url = `${this.usersUrl}/getUserByUsername/${username}`;\n      return this.http.get<User>(url, {observe: 'response'});\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpResponse, HttpClient } from '@angular/common/http';\nimport {Observable, Subject} from 'rxjs';\n\nimport { AuthenticationServiceService } from '../../services/auth/authentication-service.service';\nimport { Payment } from '../../model/payment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SluzbaPaymentsServiceService {\n\n  private paymentsUrl = 'payments';\n\n  constructor(private http: HttpClient, private authService: AuthenticationServiceService) { }\n\n  private RegenerateData = new Subject<void>();\n\n  RegenerateData$ = this.RegenerateData.asObservable();\n\n  announceChange() {\n      this.RegenerateData.next();\n  }\n  \n  getPayments(): Observable<HttpResponse<Payment[]>> {\n      let username = this.authService.getCurrentUser().username;\n      console.log(\"username: \" + username);\n      const url = `${this.paymentsUrl}/getAllPaymentsForUser/${username}`;\n      return this.http.get<Payment[]>(url, {observe: 'response'});\n  }\n}\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-sluzba-not-found-page',\r\n  templateUrl: './sluzba-not-found-page.component.html',\r\n  styleUrls: ['./sluzba-not-found-page.component.css']\r\n})\r\nexport class SluzbaNotFoundPageComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<h1>\r\n    Page not found!\r\n  </h1>\r\n  ","<header class=\"header\">\r\n    <div class=\"header-inner\">\r\n        <div class=\"container\" >\r\n          <div class=\"row\" style=\"margin: auto; max-width: 100%;\">\r\n            <div class=\"col-3\" style=\"margin: auto; height: max-content;\">\r\n              <img src=\"assets/images/logo.jpg\" class=\"logo\" alt=\"StudentskaSluzba\"/>\r\n            </div>\r\n            <div *ngIf=\"isLoggedIn()\" class=\"col-6\" style=\"margin: auto; height: max-content;\">\r\n              <p style=\"text-align: center; font-size: 2.5vw; font-weight: bold;\">Student service</p>\r\n              <p style=\"text-align: center; font-size: 1.5vw;\">{{ user? user.firstName : \"\"  }} {{ user? user.lastName : \"\"  }}</p>\r\n            </div>\r\n            <div class=\"col-3\" style=\"margin: auto; height: max-content;\">\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"container\">\r\n          <app-sluzba-navbar></app-sluzba-navbar>\r\n        </div>\r\n    </div>\r\n</header>","import { Component, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { SluzbaHeaderServiceService } from './sluzba-header-service.service';\r\nimport { AuthenticationServiceService } from 'src/app/services/auth/authentication-service.service';\r\n\r\ninterface User {\r\n  id?: number;\r\n  username: string;\r\n  firstName: string;\r\n  lastName: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-sluzba-header',\r\n  templateUrl: './sluzba-header.component.html',\r\n  styleUrls: ['./sluzba-header.component.css']\r\n})\r\nexport class SluzbaHeaderComponent implements OnInit {\r\n\r\n  user: User;\r\n\r\n  subscription: Subscription;\r\n\r\n  constructor(private headerService: SluzbaHeaderServiceService, private router: Router, private authService: AuthenticationServiceService) {\r\n    this.subscription = headerService.RegenerateData$.subscribe(() =>\r\n      this.getUser()\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getUser();\r\n  }\r\n\r\n  getUser() {\r\n    this.headerService.getUser().subscribe(res =>\r\n      this.user = res.body);\r\n  }\r\n\r\n\r\n  isLoggedIn():boolean{\r\n    return this.authService.isLoggedIn();\r\n  }\r\n\r\n  isStudent():boolean{\r\n    return this.authService.isStudent();\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JwtUtilsService {\n\n  constructor() { }\n\n  getRoles(token: string) {\n    let jwtData = token.split('.')[1];\n    let decodedJwtJsonData = window.atob(jwtData);\n    let decodedJwtData = JSON.parse(decodedJwtJsonData);\n    console.log(decodedJwtData);\n\n    return [decodedJwtData.role];\n  }\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { SluzbaPaymentsComponent } from './components/sluzba-payments/sluzba-payments.component';\r\nimport { SluzbaDocumentsComponent } from './components/sluzba-documents/sluzba-documents.component';\r\nimport { SluzbaLoginComponent } from './components/sluzba-login/sluzba-login.component';\r\nimport { SluzbaCoursesComponent } from './components/sluzba-courses/sluzba-courses.component';\r\nimport { SluzbaProfileComponent } from './components/sluzba-profile/sluzba-profile.component';\r\nimport { CanActivateAuthGuardService } from './services/auth/can-activate-auth.guard.service';\r\nimport { SluzbaNotFoundPageComponent } from './components/sluzba-not-found-page/sluzba-not-found-page.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'main', component: SluzbaLoginComponent },\r\n  { path: 'profile', component: SluzbaProfileComponent},\r\n  { path: 'courses', component: SluzbaCoursesComponent, canActivate: [CanActivateAuthGuardService]},\r\n  { path: 'payments', component: SluzbaPaymentsComponent, canActivate: [CanActivateAuthGuardService]},\r\n  { path: 'documents', component: SluzbaDocumentsComponent, canActivate: [CanActivateAuthGuardService]},\r\n  { path: '',\r\n    redirectTo: '/main',\r\n    pathMatch: 'full'\r\n  },\r\n  { path: '**', component: SluzbaNotFoundPageComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes,{useHash: true})\r\n  ],\r\n  exports: [RouterModule]\r\n  \r\n})\r\nexport class AppRoutingModule { }\r\n","<div class=\"col-md-12\">\r\n    <app-sluzba-header></app-sluzba-header>\r\n</div>\r\n<div *ngIf=\"isLoggedIn()\" class= \"col-md-12\" style=\"padding-top: 2%;\">\r\n    <table class=\"table\">\r\n        <thead>\r\n        <tr>\r\n          <th scope=\"col\">#</th>\r\n          <th scope=\"col\">Course name</th>\r\n          <th scope=\"col\">ECTS</th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        <tr *ngFor=\"let course of courses\">\r\n          <th scope=\"row\">{{ course.id }}</th>\r\n          <td>{{ course.name }}</td>\r\n          <td>{{ course.espb | number }}</td>\r\n        </tr>\r\n        </tbody>\r\n      </table>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { SluzbaCoursesServiceService } from './sluzba-courses-service.service';\r\nimport { AuthenticationServiceService } from 'src/app/services/auth/authentication-service.service';\r\n\r\ninterface Course {\r\n  id?: number;\r\n  name: string;\r\n  ESPB: number;\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-sluzba-courses',\r\n  templateUrl: './sluzba-courses.component.html',\r\n  styleUrls: ['./sluzba-courses.component.css']\r\n})\r\nexport class SluzbaCoursesComponent implements OnInit {\r\n\r\n  courses: Course[];\r\n\r\n  subscription: Subscription;\r\n\r\n  constructor(private courseService: SluzbaCoursesServiceService, private router: Router, private authService: AuthenticationServiceService) {\r\n    this.subscription = courseService.RegenerateData$.subscribe(() =>\r\n      this.getCourses()\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getCourses();\r\n  }\r\n\r\n  getCourses() {\r\n    this.courseService.getCourses().subscribe(res =>\r\n      this.courses = res.body);\r\n  }\r\n\r\n  isLoggedIn():boolean{\r\n    return this.authService.isLoggedIn();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthenticationServiceService } from './authentication-service.service';\nimport { Router } from '@angular/router';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CanActivateAuthGuardService implements CanActivate {\n\n  constructor(private authenticationService: AuthenticationServiceService, private router: Router) { }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    if (this.authenticationService.isLoggedIn()) {\n      return true;\n    }\n    else {\n      this.router.navigate(['/main']);\n      return false;\n    }\n  }\n\n}\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}